{"version":3,"sources":["./node_modules/ngx-file-drop/__ivy_ngcc__/fesm2015/ngx-file-drop.js","./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-dragdrop.js","./src/app/module/configuration/components/citype-list/citype-list.component.ts","./src/app/module/configuration/components/citype-list/citype-list.component.html","./src/app/module/configuration/components/citype/ci-add-fields/ci-add-fields.component.ts","./src/app/module/configuration/components/citype/ci-add-fields/ci-add-fields.component.html","./src/app/module/configuration/components/citype/ci-fields/ci-fields.component.ts","./src/app/module/configuration/components/citype/ci-fields/ci-fields.component.html","./src/app/module/configuration/components/citype/ci-header-details/ci-header-details.component.ts","./src/app/module/configuration/components/citype/ci-header-details/ci-header-details.component.html","./src/app/module/configuration/components/citype/ci-relationship-details/ci-relationship-details.component.ts","./src/app/module/configuration/components/citype/ci-relationship-details/ci-relationship-details.component.html","./src/app/module/configuration/components/citype/citype.component.ts","./src/app/module/configuration/components/citype/citype.component.html","./src/app/module/configuration/components/relationtype/relationtype.component.ts","./src/app/module/configuration/components/relationtype/relationtype.component.html","./src/app/module/configuration/components/servicetype-list/servicetype-list.component.ts","./src/app/module/configuration/components/servicetype-list/servicetype-list.component.html","./src/app/module/configuration/components/servicetype/servicetype-add-fields/servicetype-add-fields.component.ts","./src/app/module/configuration/components/servicetype/servicetype-add-fields/servicetype-add-fields.component.html","./src/app/module/configuration/components/servicetype/servicetype-fields/servicetype-fields.component.ts","./src/app/module/configuration/components/servicetype/servicetype-fields/servicetype-fields.component.html","./src/app/module/configuration/components/servicetype/servicetype-header-details/servicetype-header-details.component.ts","./src/app/module/configuration/components/servicetype/servicetype-header-details/servicetype-header-details.component.html","./src/app/module/configuration/components/servicetype/servicetype-map/servicetype-map.component.ts","./src/app/module/configuration/components/servicetype/servicetype-map/servicetype-map.component.html","./src/app/module/configuration/components/servicetype/servicetype-relationship-details/servicetype-relationship-details.component.ts","./src/app/module/configuration/components/servicetype/servicetype-relationship-details/servicetype-relationship-details.component.html","./src/app/module/configuration/components/servicetype/servicetype.component.ts","./src/app/module/configuration/components/servicetype/servicetype.component.html","./src/app/module/configuration/configuration-routing.module.ts","./src/app/module/configuration/configuration.component.ts","./src/app/module/configuration/configuration.component.html","./src/app/module/configuration/configuration.module.ts","./src/app/module/configuration/services/citype.service.ts","./src/app/module/configuration/services/relationtype.service.ts","./src/app/module/configuration/services/servicetype.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiK;AACpI;AACkB;;AAE/C;AACA,gCAAgC,0BAA0B,KAAK,+BAA+B;AAC9F,yCAAyC,6BAA6B,KAAK;AAC3E,4BAA4B,sBAAsB;AAClD;AACwC;AACE;;AAE1C;AACA,qEAAqE;AACrE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,qEAAqE;AACrE,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,qGAAqG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,wCAAwC,EAAE;AACvO,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,mEAA4B;AAChC,IAAI,wDAAiB;AACrB,CAAC;AACD,+DAA+D;AAC/D,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,+DAA+D;AAC/D,2BAA2B,SAAS,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,uDAAuD,+DAAwB,CAAC,yDAAkB,GAAG;AACzM,2CAA2C,+DAAwB,EAAE,gGAAgG;AACrK;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,oFAAoF,yDAAW;AAC/F;;AAEA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,oBAAoB,uBAAuB;AAC3C;AACA,8CAA8C,MAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,oDAAa,GAAG;AACnK,iBAAiB,+DAAwB,EAAE,+GAA+G;AAC1J,QAAQ,wDAAiB,uEAAuE,8BAA8B,EAAE,oEAAoE,4BAA4B,EAAE;AAClO,KAAK,EAAE,WAAW,+HAA+H,YAAY,uEAAuE,EAAE;AACtO;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA,IAAI,4DAAM;AACV;AACA;AACA,IAAI,4DAAM;AACV;AACA;AACA,IAAI,4DAAM;AACV;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA,IAAI,kEAAY;AAChB;AACA;AACA,IAAI,kEAAY;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,+BAA+B,0DAAY;AAC3C,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"module-configuration-configuration-module.js","sourcesContent":["import { TemplateRef, Directive, EventEmitter, NgZone, Renderer2, Input, Output, ContentChild, ViewChild, ElementRef, Component, NgModule } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"fileSelector\"];\nfunction NgxFileDropComponent_ng_template_4_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.dropZoneLabel);\n} }\nfunction NgxFileDropComponent_ng_template_4_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"input\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxFileDropComponent_ng_template_4_div_1_Template_input_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.openFileSelector($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"value\", ctx_r5.browseBtnLabel);\n    ɵngcc0.ɵɵproperty(\"className\", ctx_r5.browseBtnClassName);\n} }\nfunction NgxFileDropComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgxFileDropComponent_ng_template_4_div_0_Template, 2, 1, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, NgxFileDropComponent_ng_template_4_div_1_Template, 2, 2, \"div\", 7);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.dropZoneLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showBrowseBtn);\n} }\nfunction NgxFileDropComponent_ng_template_6_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { openFileSelector: a0 }; };\nclass NgxFileDropEntry {\r\n    constructor(relativePath, fileEntry) {\r\n        this.relativePath = relativePath;\r\n        this.fileEntry = fileEntry;\r\n    }\r\n}\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nlet NgxFileDropContentTemplateDirective = class NgxFileDropContentTemplateDirective {\r\n    constructor(template) {\r\n        this.template = template;\r\n    }\r\n};\nNgxFileDropContentTemplateDirective.ɵfac = function NgxFileDropContentTemplateDirective_Factory(t) { return new (t || NgxFileDropContentTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgxFileDropContentTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxFileDropContentTemplateDirective, selectors: [[\"\", \"ngx-file-drop-content-tmp\", \"\"]] });\r\nNgxFileDropContentTemplateDirective.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\nNgxFileDropContentTemplateDirective = __decorate([ __metadata(\"design:paramtypes\", [TemplateRef])\r\n], NgxFileDropContentTemplateDirective);\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nlet NgxFileDropComponent = class NgxFileDropComponent {\r\n    constructor(zone, renderer) {\r\n        this.zone = zone;\r\n        this.renderer = renderer;\r\n        this.accept = '*';\r\n        this.directory = false;\r\n        this.multiple = true;\r\n        this.dropZoneLabel = '';\r\n        this.dropZoneClassName = 'ngx-file-drop__drop-zone';\r\n        this.useDragEnter = false;\r\n        this.contentClassName = 'ngx-file-drop__content';\r\n        this.showBrowseBtn = false;\r\n        this.browseBtnClassName = 'btn btn-primary btn-xs ngx-file-drop__browse-btn';\r\n        this.browseBtnLabel = 'Browse files';\r\n        this.onFileDrop = new EventEmitter();\r\n        this.onFileOver = new EventEmitter();\r\n        this.onFileLeave = new EventEmitter();\r\n        this.isDraggingOverDropZone = false;\r\n        this.globalDraggingInProgress = false;\r\n        this.files = [];\r\n        this.numOfActiveReadEntries = 0;\r\n        this.helperFormEl = null;\r\n        this.fileInputPlaceholderEl = null;\r\n        this.dropEventTimerSubscription = null;\r\n        this._disabled = false;\r\n        this.openFileSelector = (event) => {\r\n            if (this.fileSelector && this.fileSelector.nativeElement) {\r\n                this.fileSelector.nativeElement.click();\r\n            }\r\n        };\r\n        this.globalDragStartListener = this.renderer.listen('document', 'dragstart', (evt) => {\r\n            this.globalDraggingInProgress = true;\r\n        });\r\n        this.globalDragEndListener = this.renderer.listen('document', 'dragend', (evt) => {\r\n            this.globalDraggingInProgress = false;\r\n        });\r\n    }\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = (value != null && `${value}` !== 'false');\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.dropEventTimerSubscription) {\r\n            this.dropEventTimerSubscription.unsubscribe();\r\n            this.dropEventTimerSubscription = null;\r\n        }\r\n        this.globalDragStartListener();\r\n        this.globalDragEndListener();\r\n        this.files = [];\r\n        this.helperFormEl = null;\r\n        this.fileInputPlaceholderEl = null;\r\n    }\r\n    onDragOver(event) {\r\n        if (this.useDragEnter) {\r\n            this.preventAndStop(event);\r\n        }\r\n        else if (!this.isDropzoneDisabled() && !this.useDragEnter) {\r\n            if (!this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = true;\r\n                this.onFileOver.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    }\r\n    onDragEnter(event) {\r\n        if (!this.isDropzoneDisabled() && this.useDragEnter) {\r\n            if (!this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = true;\r\n                this.onFileOver.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    }\r\n    onDragLeave(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = false;\r\n                this.onFileLeave.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    }\r\n    dropFiles(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            this.isDraggingOverDropZone = false;\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.dropEffect = 'copy';\r\n                let items;\r\n                if (event.dataTransfer.items) {\r\n                    items = event.dataTransfer.items;\r\n                }\r\n                else {\r\n                    items = event.dataTransfer.files;\r\n                }\r\n                this.preventAndStop(event);\r\n                this.checkFiles(items);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Processes the change event of the file input and adds the given files.\r\n     * @param Event event\r\n     */\r\n    uploadFiles(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (event.target) {\r\n                const items = event.target.files || [];\r\n                this.checkFiles(items);\r\n                this.resetFileInput();\r\n            }\r\n        }\r\n    }\r\n    checkFiles(items) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            let entry = null;\r\n            if (this.canGetAsEntry(item)) {\r\n                entry = item.webkitGetAsEntry();\r\n            }\r\n            if (!entry) {\r\n                if (item) {\r\n                    const fakeFileEntry = {\r\n                        name: item.name,\r\n                        isDirectory: false,\r\n                        isFile: true,\r\n                        file: (callback) => {\r\n                            callback(item);\r\n                        },\r\n                    };\r\n                    const toUpload = new NgxFileDropEntry(fakeFileEntry.name, fakeFileEntry);\r\n                    this.addToQueue(toUpload);\r\n                }\r\n            }\r\n            else {\r\n                if (entry.isFile) {\r\n                    const toUpload = new NgxFileDropEntry(entry.name, entry);\r\n                    this.addToQueue(toUpload);\r\n                }\r\n                else if (entry.isDirectory) {\r\n                    this.traverseFileTree(entry, entry.name);\r\n                }\r\n            }\r\n        }\r\n        if (this.dropEventTimerSubscription) {\r\n            this.dropEventTimerSubscription.unsubscribe();\r\n        }\r\n        this.dropEventTimerSubscription = timer(200, 200)\r\n            .subscribe(() => {\r\n            if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n                const files = this.files;\r\n                this.files = [];\r\n                this.onFileDrop.emit(files);\r\n            }\r\n        });\r\n    }\r\n    traverseFileTree(item, path) {\r\n        if (item.isFile) {\r\n            const toUpload = new NgxFileDropEntry(path, item);\r\n            this.files.push(toUpload);\r\n        }\r\n        else {\r\n            path = path + '/';\r\n            const dirReader = item.createReader();\r\n            let entries = [];\r\n            const readEntries = () => {\r\n                this.numOfActiveReadEntries++;\r\n                dirReader.readEntries((result) => {\r\n                    if (!result.length) {\r\n                        // add empty folders\r\n                        if (entries.length === 0) {\r\n                            const toUpload = new NgxFileDropEntry(path, item);\r\n                            this.zone.run(() => {\r\n                                this.addToQueue(toUpload);\r\n                            });\r\n                        }\r\n                        else {\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                this.zone.run(() => {\r\n                                    this.traverseFileTree(entries[i], path + entries[i].name);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // continue with the reading\r\n                        entries = entries.concat(result);\r\n                        readEntries();\r\n                    }\r\n                    this.numOfActiveReadEntries--;\r\n                });\r\n            };\r\n            readEntries();\r\n        }\r\n    }\r\n    /**\r\n     * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n     */\r\n    resetFileInput() {\r\n        if (this.fileSelector && this.fileSelector.nativeElement) {\r\n            const fileInputEl = this.fileSelector.nativeElement;\r\n            const fileInputContainerEl = fileInputEl.parentElement;\r\n            const helperFormEl = this.getHelperFormElement();\r\n            const fileInputPlaceholderEl = this.getFileInputPlaceholderElement();\r\n            // Just a quick check so we do not mess up the DOM (will never happen though).\r\n            if (fileInputContainerEl !== helperFormEl) {\r\n                // Insert the form input placeholder in the DOM before the form input element.\r\n                this.renderer.insertBefore(fileInputContainerEl, fileInputPlaceholderEl, fileInputEl);\r\n                // Add the form input as child of the temporary form element, removing the form input from the DOM.\r\n                this.renderer.appendChild(helperFormEl, fileInputEl);\r\n                // Reset the form, thus clearing the input element of any files.\r\n                helperFormEl.reset();\r\n                // Add the file input back to the DOM in place of the file input placeholder element.\r\n                this.renderer.insertBefore(fileInputContainerEl, fileInputEl, fileInputPlaceholderEl);\r\n                // Remove the input placeholder from the DOM\r\n                this.renderer.removeChild(fileInputContainerEl, fileInputPlaceholderEl);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get a cached HTML form element as a helper element to clear the file input element.\r\n     */\r\n    getHelperFormElement() {\r\n        if (!this.helperFormEl) {\r\n            this.helperFormEl = this.renderer.createElement('form');\r\n        }\r\n        return this.helperFormEl;\r\n    }\r\n    /**\r\n     * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n     */\r\n    getFileInputPlaceholderElement() {\r\n        if (!this.fileInputPlaceholderEl) {\r\n            this.fileInputPlaceholderEl = this.renderer.createElement('div');\r\n        }\r\n        return this.fileInputPlaceholderEl;\r\n    }\r\n    canGetAsEntry(item) {\r\n        return !!item.webkitGetAsEntry;\r\n    }\r\n    isDropzoneDisabled() {\r\n        return (this.globalDraggingInProgress || this.disabled);\r\n    }\r\n    addToQueue(item) {\r\n        this.files.push(item);\r\n    }\r\n    preventAndStop(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n};\nNgxFileDropComponent.ɵfac = function NgxFileDropComponent_Factory(t) { return new (t || NgxFileDropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNgxFileDropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxFileDropComponent, selectors: [[\"ngx-file-drop\"]], contentQueries: function NgxFileDropComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxFileDropContentTemplateDirective, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    } }, viewQuery: function NgxFileDropComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileSelector = _t.first);\n    } }, inputs: { accept: \"accept\", directory: \"directory\", multiple: \"multiple\", dropZoneLabel: \"dropZoneLabel\", dropZoneClassName: \"dropZoneClassName\", useDragEnter: \"useDragEnter\", contentClassName: \"contentClassName\", showBrowseBtn: \"showBrowseBtn\", browseBtnClassName: \"browseBtnClassName\", browseBtnLabel: \"browseBtnLabel\", disabled: \"disabled\" }, outputs: { onFileDrop: \"onFileDrop\", onFileOver: \"onFileOver\", onFileLeave: \"onFileLeave\" }, decls: 7, vars: 15, consts: [[3, \"className\", \"drop\", \"dragover\", \"dragenter\", \"dragleave\"], [3, \"className\"], [\"type\", \"file\", 1, \"ngx-file-drop__file-input\", 3, \"accept\", \"multiple\", \"change\"], [\"fileSelector\", \"\"], [\"defaultContentTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ngx-file-drop__drop-zone-label\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngx-file-drop__drop-zone-label\"], [\"type\", \"button\", 3, \"className\", \"value\", \"click\"]], template: function NgxFileDropComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"drop\", function NgxFileDropComponent_Template_div_drop_0_listener($event) { return ctx.dropFiles($event); })(\"dragover\", function NgxFileDropComponent_Template_div_dragover_0_listener($event) { return ctx.onDragOver($event); })(\"dragenter\", function NgxFileDropComponent_Template_div_dragenter_0_listener($event) { return ctx.onDragEnter($event); })(\"dragleave\", function NgxFileDropComponent_Template_div_dragleave_0_listener($event) { return ctx.onDragLeave($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"input\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxFileDropComponent_Template_input_change_2_listener($event) { return ctx.uploadFiles($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NgxFileDropComponent_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(6, NgxFileDropComponent_ng_template_6_Template, 0, 0, \"ng-template\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(5);\n        ɵngcc0.ɵɵclassProp(\"ngx-file-drop__drop-zone--over\", ctx.isDraggingOverDropZone);\n        ɵngcc0.ɵɵproperty(\"className\", ctx.dropZoneClassName);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"className\", ctx.contentClassName);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"accept\", ctx.accept)(\"multiple\", ctx.multiple);\n        ɵngcc0.ɵɵattribute(\"directory\", ctx.directory || undefined)(\"webkitdirectory\", ctx.directory || undefined)(\"mozdirectory\", ctx.directory || undefined)(\"msdirectory\", ctx.directory || undefined)(\"odirectory\", ctx.directory || undefined);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || _r1)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(13, _c1, ctx.openFileSelector));\n    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], styles: [\".ngx-file-drop__drop-zone[_ngcontent-%COMP%]{height:100px;margin:auto;border:2px dotted #0782d0;border-radius:30px}.ngx-file-drop__drop-zone--over[_ngcontent-%COMP%]{background-color:rgba(147,147,147,.5)}.ngx-file-drop__content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:100px;color:#0782d0}.ngx-file-drop__drop-zone-label[_ngcontent-%COMP%]{text-align:center}.ngx-file-drop__file-input[_ngcontent-%COMP%]{display:none}\"] });\r\nNgxFileDropComponent.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: Renderer2 }\r\n];\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"accept\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"directory\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"multiple\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"dropZoneLabel\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"dropZoneClassName\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"useDragEnter\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"contentClassName\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean),\r\n    __metadata$1(\"design:paramtypes\", [Boolean])\r\n], NgxFileDropComponent.prototype, \"disabled\", null);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"showBrowseBtn\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"browseBtnClassName\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"browseBtnLabel\", void 0);\r\n__decorate$1([\r\n    Output(),\r\n    __metadata$1(\"design:type\", EventEmitter)\r\n], NgxFileDropComponent.prototype, \"onFileDrop\", void 0);\r\n__decorate$1([\r\n    Output(),\r\n    __metadata$1(\"design:type\", EventEmitter)\r\n], NgxFileDropComponent.prototype, \"onFileOver\", void 0);\r\n__decorate$1([\r\n    Output(),\r\n    __metadata$1(\"design:type\", EventEmitter)\r\n], NgxFileDropComponent.prototype, \"onFileLeave\", void 0);\r\n__decorate$1([\r\n    ContentChild(NgxFileDropContentTemplateDirective, { read: TemplateRef }),\r\n    __metadata$1(\"design:type\", TemplateRef)\r\n], NgxFileDropComponent.prototype, \"contentTemplate\", void 0);\r\n__decorate$1([\r\n    ViewChild('fileSelector', { static: true }),\r\n    __metadata$1(\"design:type\", ElementRef)\r\n], NgxFileDropComponent.prototype, \"fileSelector\", void 0);\r\nNgxFileDropComponent = __decorate$1([ __metadata$1(\"design:paramtypes\", [NgZone,\r\n        Renderer2])\r\n], NgxFileDropComponent);\n\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nlet NgxFileDropModule = class NgxFileDropModule {\r\n};\nNgxFileDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxFileDropModule, bootstrap: function () { return [NgxFileDropComponent]; } });\nNgxFileDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxFileDropModule_Factory(t) { return new (t || NgxFileDropModule)(); }, providers: [], imports: [[\n            CommonModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFileDropContentTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngx-file-drop-content-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFileDropComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-file-drop',\n                template: \"<div [className]=\\\"dropZoneClassName\\\"\\r\\n     [class.ngx-file-drop__drop-zone--over]=\\\"isDraggingOverDropZone\\\"\\r\\n     (drop)=\\\"dropFiles($event)\\\"\\r\\n     (dragover)=\\\"onDragOver($event)\\\"\\r\\n     (dragenter)=\\\"onDragEnter($event)\\\"\\r\\n     (dragleave)=\\\"onDragLeave($event)\\\">\\r\\n  <div [className]=\\\"contentClassName\\\">\\r\\n    <input \\r\\n      type=\\\"file\\\" \\r\\n      #fileSelector \\r\\n      [accept]=\\\"accept\\\" \\r\\n      [attr.directory]=\\\"directory || undefined\\\" \\r\\n      [attr.webkitdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.mozdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.msdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.odirectory]=\\\"directory || undefined\\\"\\r\\n      [multiple]=\\\"multiple\\\"\\r\\n      (change)=\\\"uploadFiles($event)\\\" \\r\\n      class=\\\"ngx-file-drop__file-input\\\" \\r\\n    />\\r\\n\\r\\n    <ng-template #defaultContentTemplate>\\r\\n      <div *ngIf=\\\"dropZoneLabel\\\" class=\\\"ngx-file-drop__drop-zone-label\\\">{{dropZoneLabel}}</div>\\r\\n      <div *ngIf=\\\"showBrowseBtn\\\">\\r\\n        <input type=\\\"button\\\" [className]=\\\"browseBtnClassName\\\" value=\\\"{{browseBtnLabel}}\\\" (click)=\\\"openFileSelector($event)\\\" />\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"contentTemplate || defaultContentTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{ openFileSelector: openFileSelector }\\\">\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\\r\\n\",\n                styles: [\".ngx-file-drop__drop-zone{height:100px;margin:auto;border:2px dotted #0782d0;border-radius:30px}.ngx-file-drop__drop-zone--over{background-color:rgba(147,147,147,.5)}.ngx-file-drop__content{display:flex;align-items:center;justify-content:center;height:100px;color:#0782d0}.ngx-file-drop__drop-zone-label{text-align:center}.ngx-file-drop__file-input{display:none}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { accept: [{\n            type: Input\n        }], directory: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], dropZoneLabel: [{\n            type: Input\n        }], dropZoneClassName: [{\n            type: Input\n        }], useDragEnter: [{\n            type: Input\n        }], contentClassName: [{\n            type: Input\n        }], showBrowseBtn: [{\n            type: Input\n        }], browseBtnClassName: [{\n            type: Input\n        }], browseBtnLabel: [{\n            type: Input\n        }], onFileDrop: [{\n            type: Output\n        }], onFileOver: [{\n            type: Output\n        }], onFileLeave: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], contentTemplate: [{\n            type: ContentChild,\n            args: [NgxFileDropContentTemplateDirective, { read: TemplateRef }]\n        }], fileSelector: [{\n            type: ViewChild,\n            args: ['fileSelector', { static: true }]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxFileDropModule, { declarations: function () { return [NgxFileDropComponent, NgxFileDropContentTemplateDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxFileDropComponent, NgxFileDropContentTemplateDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFileDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxFileDropComponent,\n                    NgxFileDropContentTemplateDirective,\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NgxFileDropComponent,\n                    NgxFileDropContentTemplateDirective,\n                ],\n                providers: [],\n                bootstrap: [\n                    NgxFileDropComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxFileDropComponent, NgxFileDropEntry, NgxFileDropModule, NgxFileDropContentTemplateDirective as ɵa };\n\n//# sourceMappingURL=ngx-file-drop.js.map","import { EventEmitter, ElementRef, NgZone, Input, Output, HostListener, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\nimport * as ɵngcc0 from '@angular/core';\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet Draggable = class Draggable {\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.onDragStart = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDrag = new EventEmitter();\n    }\n    get pDraggableDisabled() {\n        return this._pDraggableDisabled;\n    }\n    set pDraggableDisabled(_pDraggableDisabled) {\n        this._pDraggableDisabled = _pDraggableDisabled;\n        if (this._pDraggableDisabled) {\n            this.unbindMouseListeners();\n        }\n        else {\n            this.el.nativeElement.draggable = true;\n            this.bindMouseListeners();\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.pDraggableDisabled) {\n            this.el.nativeElement.draggable = true;\n            this.bindMouseListeners();\n        }\n    }\n    bindDragListener() {\n        if (!this.dragListener) {\n            this.zone.runOutsideAngular(() => {\n                this.dragListener = this.drag.bind(this);\n                this.el.nativeElement.addEventListener('drag', this.dragListener);\n            });\n        }\n    }\n    unbindDragListener() {\n        if (this.dragListener) {\n            this.zone.runOutsideAngular(() => {\n                this.el.nativeElement.removeEventListener('drag', this.dragListener);\n                this.dragListener = null;\n            });\n        }\n    }\n    bindMouseListeners() {\n        if (!this.mouseDownListener && !this.mouseUpListener) {\n            this.zone.runOutsideAngular(() => {\n                this.mouseDownListener = this.mousedown.bind(this);\n                this.mouseUpListener = this.mouseup.bind(this);\n                this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n                this.el.nativeElement.addEventListener('mouseup', this.mouseUpListener);\n            });\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseDownListener && this.mouseUpListener) {\n            this.zone.runOutsideAngular(() => {\n                this.el.nativeElement.removeEventListener('mousedown', this.mouseDownListener);\n                this.el.nativeElement.removeEventListener('mouseup', this.mouseUpListener);\n                this.mouseDownListener = null;\n                this.mouseUpListener = null;\n            });\n        }\n    }\n    drag(event) {\n        this.onDrag.emit(event);\n    }\n    dragStart(event) {\n        if (this.allowDrag() && !this.pDraggableDisabled) {\n            if (this.dragEffect) {\n                event.dataTransfer.effectAllowed = this.dragEffect;\n            }\n            event.dataTransfer.setData('text', this.scope);\n            this.onDragStart.emit(event);\n            this.bindDragListener();\n        }\n        else {\n            event.preventDefault();\n        }\n    }\n    dragEnd(event) {\n        this.onDragEnd.emit(event);\n        this.unbindDragListener();\n    }\n    mousedown(event) {\n        this.handle = event.target;\n    }\n    mouseup(event) {\n        this.handle = null;\n    }\n    allowDrag() {\n        if (this.dragHandle && this.handle)\n            return DomHandler.matches(this.handle, this.dragHandle);\n        else\n            return true;\n    }\n    ngOnDestroy() {\n        this.unbindDragListener();\n        this.unbindMouseListeners();\n    }\n};\nDraggable.ɵfac = function Draggable_Factory(t) { return new (t || Draggable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nDraggable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Draggable, selectors: [[\"\", \"pDraggable\", \"\"]], hostBindings: function Draggable_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragstart\", function Draggable_dragstart_HostBindingHandler($event) { return ctx.dragStart($event); })(\"dragend\", function Draggable_dragend_HostBindingHandler($event) { return ctx.dragEnd($event); });\n    } }, inputs: { pDraggableDisabled: \"pDraggableDisabled\", scope: [\"pDraggable\", \"scope\"], dragEffect: \"dragEffect\", dragHandle: \"dragHandle\" }, outputs: { onDragStart: \"onDragStart\", onDragEnd: \"onDragEnd\", onDrag: \"onDrag\" } });\nDraggable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\n__decorate([\n    Input('pDraggable')\n], Draggable.prototype, \"scope\", void 0);\n__decorate([\n    Input()\n], Draggable.prototype, \"dragEffect\", void 0);\n__decorate([\n    Input()\n], Draggable.prototype, \"dragHandle\", void 0);\n__decorate([\n    Output()\n], Draggable.prototype, \"onDragStart\", void 0);\n__decorate([\n    Output()\n], Draggable.prototype, \"onDragEnd\", void 0);\n__decorate([\n    Output()\n], Draggable.prototype, \"onDrag\", void 0);\n__decorate([\n    Input()\n], Draggable.prototype, \"pDraggableDisabled\", null);\n__decorate([\n    HostListener('dragstart', ['$event'])\n], Draggable.prototype, \"dragStart\", null);\n__decorate([\n    HostListener('dragend', ['$event'])\n], Draggable.prototype, \"dragEnd\", null);\nlet Droppable = class Droppable {\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.onDragEnter = new EventEmitter();\n        this.onDragLeave = new EventEmitter();\n        this.onDrop = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        if (!this.pDroppableDisabled) {\n            this.bindDragOverListener();\n        }\n    }\n    bindDragOverListener() {\n        if (!this.dragOverListener) {\n            this.zone.runOutsideAngular(() => {\n                this.dragOverListener = this.dragOver.bind(this);\n                this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            });\n        }\n    }\n    unbindDragOverListener() {\n        if (this.dragOverListener) {\n            this.zone.runOutsideAngular(() => {\n                this.el.nativeElement.removeEventListener('dragover', this.dragOverListener);\n                this.dragOverListener = null;\n            });\n        }\n    }\n    dragOver(event) {\n        event.preventDefault();\n    }\n    drop(event) {\n        if (this.allowDrop(event)) {\n            event.preventDefault();\n            this.onDrop.emit(event);\n        }\n    }\n    dragEnter(event) {\n        event.preventDefault();\n        if (this.dropEffect) {\n            event.dataTransfer.dropEffect = this.dropEffect;\n        }\n        this.onDragEnter.emit(event);\n    }\n    dragLeave(event) {\n        event.preventDefault();\n        this.onDragLeave.emit(event);\n    }\n    allowDrop(event) {\n        let dragScope = event.dataTransfer.getData('text');\n        if (typeof (this.scope) == \"string\" && dragScope == this.scope) {\n            return true;\n        }\n        else if (this.scope instanceof Array) {\n            for (let j = 0; j < this.scope.length; j++) {\n                if (dragScope == this.scope[j]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    ngOnDestroy() {\n        this.unbindDragOverListener();\n    }\n};\nDroppable.ɵfac = function Droppable_Factory(t) { return new (t || Droppable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nDroppable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Droppable, selectors: [[\"\", \"pDroppable\", \"\"]], hostBindings: function Droppable_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function Droppable_drop_HostBindingHandler($event) { return ctx.drop($event); })(\"dragenter\", function Droppable_dragenter_HostBindingHandler($event) { return ctx.dragEnter($event); })(\"dragleave\", function Droppable_dragleave_HostBindingHandler($event) { return ctx.dragLeave($event); });\n    } }, inputs: { scope: [\"pDroppable\", \"scope\"], pDroppableDisabled: \"pDroppableDisabled\", dropEffect: \"dropEffect\" }, outputs: { onDragEnter: \"onDragEnter\", onDragLeave: \"onDragLeave\", onDrop: \"onDrop\" } });\nDroppable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\n__decorate([\n    Input('pDroppable')\n], Droppable.prototype, \"scope\", void 0);\n__decorate([\n    Input()\n], Droppable.prototype, \"pDroppableDisabled\", void 0);\n__decorate([\n    Input()\n], Droppable.prototype, \"dropEffect\", void 0);\n__decorate([\n    Output()\n], Droppable.prototype, \"onDragEnter\", void 0);\n__decorate([\n    Output()\n], Droppable.prototype, \"onDragLeave\", void 0);\n__decorate([\n    Output()\n], Droppable.prototype, \"onDrop\", void 0);\n__decorate([\n    HostListener('drop', ['$event'])\n], Droppable.prototype, \"drop\", null);\n__decorate([\n    HostListener('dragenter', ['$event'])\n], Droppable.prototype, \"dragEnter\", null);\n__decorate([\n    HostListener('dragleave', ['$event'])\n], Droppable.prototype, \"dragLeave\", null);\nlet DragDropModule = class DragDropModule {\n};\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Draggable, [{\n        type: Directive,\n        args: [{\n                selector: '[pDraggable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { onDragStart: [{\n            type: Output\n        }], onDragEnd: [{\n            type: Output\n        }], onDrag: [{\n            type: Output\n        }], pDraggableDisabled: [{\n            type: Input\n        }], dragStart: [{\n            type: HostListener,\n            args: ['dragstart', ['$event']]\n        }], dragEnd: [{\n            type: HostListener,\n            args: ['dragend', ['$event']]\n        }], scope: [{\n            type: Input,\n            args: ['pDraggable']\n        }], dragEffect: [{\n            type: Input\n        }], dragHandle: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Droppable, [{\n        type: Directive,\n        args: [{\n                selector: '[pDroppable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { onDragEnter: [{\n            type: Output\n        }], onDragLeave: [{\n            type: Output\n        }], onDrop: [{\n            type: Output\n        }], drop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], dragEnter: [{\n            type: HostListener,\n            args: ['dragenter', ['$event']]\n        }], dragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], scope: [{\n            type: Input,\n            args: ['pDroppable']\n        }], pDroppableDisabled: [{\n            type: Input\n        }], dropEffect: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [Draggable, Droppable]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Draggable, Droppable]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [Draggable, Droppable],\n                declarations: [Draggable, Droppable]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DragDropModule, Draggable, Droppable };\n\n//# sourceMappingURL=primeng-dragdrop.js.map","import { Component, OnInit } from '@angular/core';\nimport { CitypeService } from '../../services/citype.service';\nimport { TreeNode } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/api';\nimport { ToastService } from '../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../cmdb-common/services/common.service';\nimport { newUrl } from '../../../../../environments/environment';\n@Component({\n  selector: 'app-citype-list',\n  templateUrl: './citype-list.component.html',\n  styleUrls: ['./citype-list.component.css'],\n  providers: [ConfirmationService]\n})\nexport class CitypeListComponent implements OnInit {\n\n  ciListViewForm: FormGroup;\n  citypelist: any;\n  displayModal: boolean;\n  isedit: boolean;\n  cols: any;\n  pathUrl: any;\n  isexapand = false;\n\n  constructor(private citypeservice: CitypeService, private router: Router,\n    private confirmationService: ConfirmationService, private toastService: ToastService,\n    private commonSevice: CommonService) { }\n\n  ngOnInit(): void {\n\n    this.pathUrl = newUrl;\n    this.cols = [\n      { field: 'ciTypeName', subField: 'imageLocation', subField1: 'icon', header: 'CI Type', width: '25%' },\n      { field: 'description', header: 'Description', width: '60%' }\n    ];\n    this.getciTypeList();\n  }\n\n  /* Go back button handling*/\n  gotocitypeDetails() {\n    const sourceCIval = {\n      ciTypeName: '',\n      ciId: '',\n      parentCITypeId: '',\n      parentCIName: '',\n      hierarchy: ''\n    }\n    this.commonSevice.updateCiDetailInfo(sourceCIval);\n    this.router.navigate(['configuration/citype']);\n  }\n\n\n  getciTypeList() {\n    this.commonSevice.updateLoaderStatus(true);\n    this.citypeservice.getCitypeList().subscribe(data => {\n      this.commonSevice.updateLoaderStatus(false);\n      this.citypelist = data;\n      this.citypelist.forEach(node => {\n        this.expandRecursive(node, true);\n      });\n      this.citypelist = [...this.citypelist]\n    });\n\n  }\n\n  /* Expand and Collapse button handling*/\n  exapandORcollapse() {\n    this.isexapand = !this.isexapand;\n    this.citypelist.forEach(node => {\n      if (this.isexapand) {\n        this.expandRecursive1(node, this.isexapand);\n      } else {\n        this.expandRecursive(node, true);\n      }\n    });\n    this.citypelist = [...this.citypelist]\n  }\n  private expandRecursive(node: TreeNode, isExpand: boolean) {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandRecursive(childNode, false);\n      });\n    }\n  }\n  private expandRecursive1(node: TreeNode, isExpand: boolean) {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandRecursive(childNode, isExpand);\n      });\n    }\n  }\n  /* Edit CI*/\n  editRow(data): void {\n    this.router.navigate(['configuration/citype'], { queryParams: { ciId: data.id } });\n\n  }\n  /* Create new child */\n  createNewChild(data): void {\n    const sourceCIval = {\n      parentCITypeId: data.id,\n      parentCIName: data.ciTypeName,\n    }\n    this.commonSevice.updateCiDetailInfo(sourceCIval);\n    this.router.navigate(['configuration/citype']);\n\n  }\n\n  /* Delete CI Type*/\n  deleteRow(data): any {\n    this.confirmationService.confirm({\n      message: 'Are you sure Want to Delete CI Type?',\n      header: 'Confirmation',\n      icon: 'fa fa-question-circle',\n\n      accept: () => {\n        this.commonSevice.updateLoaderStatus(true);\n        this.citypeservice.deleteCITypeList(data.id).subscribe(data => {\n        this.toastService.success(data.message);\n        this.commonSevice.updateLoaderStatus(false);\n        this.getciTypeList();\n        }, err => {\n          this.toastService.error(err.error.message);\n          this.commonSevice.updateLoaderStatus(false);\n        });\n\n      },\n\n      reject: () => {\n\n      },\n      acceptLabel: 'Yes'\n\n    });\n\n  }\n}\n","<div class=\"relation-content\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-8 p-lg-8 padding-adjustment\">\n            <h4 class=\"color-relationship-types\">CI Types</h4>\n        </div>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment\">\n            <div class=\"expand-btn-right\">\n                <button type=\"button\" (click)=\"exapandORcollapse()\" class=\"btn btn-default btn-expand-style\">Expand /\n                    Collapse</button>\n                <button type=\"button\" (click)=\"gotocitypeDetails()\" class=\"btn btn-default btn-expand-style left-alignment\"><i class=\"pi pi-plus\"\n                        style=\"font-size: 14px;\"></i>&nbsp;&nbsp;Create</button>\n            </div>\n        </div>\n    </div>\n    <p class=\"border-color-bottom\"></p>\n    <div class=\"p-col-12 p-md-12 p-lg-12 padding-list-view\">\n        <p-treeTable [value]=\"citypelist\">\n            <ng-template pTemplate=\"header\" let-columns>\n                <tr>\n                    <th *ngFor=\"let col of cols\" [ngStyle]=\"{'width': col.width}\">\n                        {{col.header}}\n                    </th>\n                    <th>Actions</th>\n                </tr>\n            </ng-template>\n\n            <ng-template class=\"border-left-bottom\" pTemplate=\"body\" let-rowNode let-index let-rowData=\"rowData\">\n\n                <tr>\n                    <td *ngFor=\"let col of cols; let i = index\">  \n                        <p-treeTableToggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></p-treeTableToggler>\n                        <div *ngIf=\"rowData[col.subField] == null;then content else other_content\"></div>\n                        <ng-template #content>\n                            <img src=\"assets/menu-icons/server.svg\" style=\"width: 19px;height: 22px\" *ngIf=\"i == 0\">\n                        </ng-template>\n                        <ng-template #other_content>\n                            <div *ngIf=\"rowData[col.subField1]== 'import';then importimg else selectimg\"></div>\n                            <ng-template #selectimg>\n                                <img src=\"{{rowData[col.subField]}}\" style=\"width: 19px;height: 22px\" *ngIf=\"i == 0\">\n                            </ng-template>\n                            <ng-template #importimg>\n                                <img src=\"{{pathUrl}}{{rowData[col.subField]}}\" style=\"width: 19px;height: 22px\" *ngIf=\"i == 0\">\n                            </ng-template>\n                        </ng-template>\n                        {{rowData[col.field]}}\n                    </td>\n                    <td>\n                        <button type=\"button\" class=\"pi-plus-icon\" (click)=\"createNewChild(rowData)\" title=\"Create\"><i\n                                class=\"pi pi-plus iconsize\"></i></button>\n                        <button type=\"button\" (click)=\"editRow(rowData)\" style=\"margin-right: 10px;\" class=\"ui-button-info ui-edit-custom\" class=\"pipencil-icon\" title=\"Edit\"><img\n                                src=\"assets/table-icon/edit-btn.svg\"></button>\n                        <button type=\"button\" *ngIf=\"index.node.data.id !== 1\" (click)=\"deleteRow(rowData,rowIndex)\" class=\"ui-button-danger ui-delete-custom delete-icon\" title=\"Delete\"><img\n                                src=\"assets/table-icon/delete-btn.svg\"></button>\n\n                    </td>\n                </tr>\n            </ng-template>\n        </p-treeTable>\n    </div>\n</div>\n\n<p-confirmDialog acceptLabel=\"Yes\" acceptButtonStyleClass=\"acceptYes\" rejectLabel=\"No\" rejectButtonStyleClass=\"rejectbtn\"></p-confirmDialog>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { CitypeService } from '../../../services/citype.service';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-ci-add-fields',\n  templateUrl: './ci-add-fields.component.html',\n  styleUrls: ['./ci-add-fields.component.css']\n})\nexport class CiAddFieldsComponent implements OnInit {\n  @Output() getDragInputControl: EventEmitter<any> = new EventEmitter();\n  div1: boolean = true;\n  div2: boolean = false;\n  div3: boolean = true;\n  div4: boolean = false;\n  tab: any = 'tab1';\n  tab1: any;\n  tab2: any;\n  tab3: any;\n  Clicked: boolean;\n  inputControlList: any;\n  ciTypeName: any;\n  parentCI: any;\n  getciId: any;\n  constructor(private citypeService: CitypeService,\n    private commonSevice: CommonService,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.getFormInputList();\n    this.route.queryParams.subscribe(params => {\n      this.getciId = params['ciId'];\n    });\n    this.getCIHeaderData();\n  }\n\n  getCIHeaderData(): void {\n    this.commonSevice.CiHeaderData.subscribe(data => {\n      this.ciTypeName = data.ciTypeName;\n      this.parentCI = data.parentCIName;\n    });\n  }\n  getFormInputList(): void {\n    this.citypeService.getFormInputTypeList().subscribe(data => {\n      this.inputControlList = data;\n    });\n  }\n  div1Function(check): void {\n    this.div1 = true;\n    this.div2 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n\n  }\n\n  div2Function(check): void {\n    this.div2 = true;\n    this.div1 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n\n  }\n\n  div3Function(check): void {\n    this.div3 = true;\n    this.div4 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n\n  }\n\n  div4Function(check): void {\n    this.div4 = true;\n    this.div3 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n  }\n\n  dragStart(e,currentinputs): void {\n    this.getDragInputControl.emit(currentinputs);\n  }\n  dragEnd(): void {\n\n  }\n\n}\n","<div class=\"ci-bg-details\">\n    <h6 class=\"ci-detail-heading\">CI Details</h6>\n</div>\n<div class=\"ci-content-bg\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-6 p-lg-6\">\n            <span class=\"span-ci-type-heading\">CI Type</span>\n            <h6 class=\"ci-name-css\" id=\"ciType\">{{ciTypeName}}</h6>\n        </div>\n\n        <div class=\"p-col-12 p-md-6 p-lg-6\" *ngIf=\"getciId!=1\">\n            <span class=\"span-ci-type-heading\">Parent CI Type</span>\n            <h6 class=\"ci-name-css\" id=\"parentCI\">{{parentCI}}</h6>\n        </div>\n    </div>\n</div>\n<div class=\"ci-bg-details\">\n    <h6 class=\"ci-detail-heading\">Drag and Drop Fields </h6>\n</div>\n<div class=\"ci-content-bg\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-12 p-lg-12\">\n            <button type=\"button\" (click)=\"div1Function(1)\" [ngClass]=\"{'active-new': tab==='tab1','normal-div': tab==='tab2'}\">New Fields</button>\n\n            <div *ngIf=\"div1\" class=\"margin-top-drag\">\n                <div class=\"p-grid\">\n                    <div *ngFor=\"let inputcontrols of inputControlList\" pDraggable=\"dropedInputs\" (onDragStart)=\"dragStart($event,inputcontrols)\" (onDragEnd)=\"dragEnd($event)\" class=\"p-col-12 p-md-6 p-lg-6\">\n                        <div class=\"border\" title=\"{{inputcontrols.name}}\"><img src=\"{{inputcontrols.fieldIcon}}\" class=\"single-icon\">{{inputcontrols.name}}</div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormArray, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { CitypeService } from '../../../services/citype.service';\nimport { formatDate } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'src/app/cmdb-common/services/toast.service';\n@Component({\n  selector: 'app-ci-fields',\n  templateUrl: './ci-fields.component.html',\n  styleUrls: ['./ci-fields.component.css'],\n\n\n})\nexport class CiFieldsComponent implements OnInit {\n  @Output() newFieldEmitter = new EventEmitter<any>();\n  displayModalfields: boolean;\n  Clicked: boolean;\n  dropedInputs: any;\n  getDragInput: any;\n  fieldList: any = [];\n  fieldLength:any = {};\n  fieldLen:any = [];\n  inputControlForm: FormGroup;\n  submitted = false;\n  fullformData: Array<any> = [];\n  ciTypeName: any;\n  ciId: any;\n  parentFormData: any;\n  isFieldEdit: boolean;\n  currentFieldIndex: any;\n  ciHierarchy: any;\n  ciTypeFormId: any;\n  currentDate: any;\n  getciId: any;\n  isNewFormFieldAdd: boolean = false;\n  freezeBtn: any;\n  parentFormJsonData: any;\n  parentDataobj:Array<any>=[];\n  fieldval:any;\n  constructor(private formBuilder: FormBuilder,\n    private commonSevice: CommonService,\n    private citypeService: CitypeService,\n    private toastService: ToastService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.inputControlForm = this.formBuilder.group({\n      fieldName: ['', [Validators.required]],\n      fieldKey: ['', Validators.required],\n      fieldType: [''],\n      minValue: [''],\n      maxValue: [''],\n      phValue: [''],\n      description: [''],\n      defaultOption: [''],\n    });\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n    this.route.queryParams.subscribe(params => {\n      this.getciId = params['ciId'];\n    });\n    //if (this.getciId) {\n    this.getCIHeaderData();\n    // }\n    this.inputControlForm.get('fieldName').valueChanges.subscribe(data => this.inputControlForm.get('fieldKey').setValue(data))\n\n  }\n\n\n  /* getOption(index): void {\n     this.formArraySelect.controls[index].get('optionKey').valueChanges.subscribe(\n       data => this.formArraySelect.controls[index].get('optionValue').setValue(data));\n \n   }*/\n  getCIHeaderData(): void {\n    this.commonSevice.CiHeaderData.subscribe(data => {\n      this.ciTypeName = data.ciTypeName;\n      this.ciId = data.ciId;\n      this.ciHierarchy = data.hierarchy;\n      this.getFormCIParentJSon();\n    });\n  }\n\n  get fval(): any {\n    return this.inputControlForm.controls;\n  }\n  getDragInputs(event): any {\n    this.getDragInput = event;\n  }\n\n  drop(event): any {\n    this.isFieldEdit = false;\n    this.displayModalfields = true;\n    this.submitted = false;\n    this.setValuePopup();\n  }\n\n  setValuePopup(): void {\n    this.inputControlForm.reset();\n    if (this.getDragInput) {\n      this.inputControlForm.get('fieldType').setValue(this.getDragInput.name);\n      if (this.getDragInput.fieldType === 'text') {\n        if (this.getDragInput.multiline) {\n          this.inputControlForm.get('minValue').setValue(0);\n          this.inputControlForm.get('maxValue').setValue(4000);\n          this.setDynamicValidators(4000, this.inputControlForm.get('minValue'));\n          this.setDynamicValidators(4000, this.inputControlForm.get('maxValue'));\n        } else {\n          this.inputControlForm.get('minValue').setValue(0);\n          this.inputControlForm.get('maxValue').setValue(250);\n          this.setDynamicValidators(250, this.inputControlForm.get('minValue'));\n          this.setDynamicValidators(250, this.inputControlForm.get('maxValue'));\n        }\n        // this.inputControlForm.setValidators(customValidator());\n        this.inputControlForm.updateValueAndValidity();\n      }\n    }\n\n    if (this.getDragInput.fieldType === 'select' || this.getDragInput.fieldType === 'multiselect' || this.getDragInput.fieldType === 'radio' || this.getDragInput.fieldType === 'checkbox') {\n      this.inputControlForm.setControl('options', this.formBuilder.array([]));\n      this.addOptions();\n      if (this.getDragInput.fieldType != 'multiselect') {\n        this.inputControlForm.get('defaultOption').setValue(0);\n      }\n\n    }\n  }\n  get formArraySelect(): FormArray {\n    return this.inputControlForm.get('options') as FormArray;\n  }\n\n  removeOptions(index): void {\n    this.formArraySelect.controls.splice(index, 1);\n  }\n  addOptions(): void {\n    this.formArraySelect.push(this.formBuilder.group({\n      // optionKey: ['', Validators.required],\n      optionValue: ['', Validators.required]\n\n    }));\n  }\n  submitInputControl(): void {\n    this.submitted = true;\n    const fldname = this.inputControlForm.get('fieldName').value;\n    const fldkey = this.inputControlForm.get('fieldKey').value;\n\n    if (this.fullformData) {\n      console.log( this.fullformData);\n      const fieldNameExt = this.fullformData.findIndex(data => data.fieldName.toLowerCase() === fldname.toLowerCase());\n      const fieldKeyExt = this.fullformData.findIndex(data => data.fieldKey.toLowerCase() === fldkey.toLowerCase());\n      if (fieldNameExt !== -1) {\n        this.inputControlForm.get('fieldName').setErrors({ fieldname: true });\n      }\n      if (fieldKeyExt !== -1) {\n        this.inputControlForm.get('fieldKey').setErrors({ fieldkey: true });\n      }\n    }\n    if( this.parentFormData){\n      for(let formjson of this.parentFormData){\n        this.parentFormJsonData = formjson.formJson;\n        this.parentDataobj = this.extractFromJson(this.parentFormJsonData);\n        const fieldNameExt = this.parentDataobj.findIndex(data => data.fieldName.toLowerCase() === fldname.toLowerCase());\n        const fieldKeyExt = this.parentDataobj.findIndex(data => data.fieldKey.toLowerCase() === fldkey.toLowerCase());\n        if (fieldNameExt !== -1) {\n          this.inputControlForm.get('fieldName').setErrors({ fieldname: true });\n        }\n        if (fieldKeyExt !== -1) {\n          this.inputControlForm.get('fieldKey').setErrors({ fieldkey: true });\n        }\n       }\n    }\n    if (this.submitted && this.inputControlForm.valid) {\n      this.isNewFormFieldAdd = true;\n      this.newFieldEmitter.emit(true);\n      this.displayModalfields = false;\n      this.updateDroppedItem(this.inputControlForm.value);\n    }\n  }\n  updateDroppedItem(e: any): void {\n    this.getDragInput.fieldName = e.fieldName;\n    this.getDragInput.fieldKey = e.fieldKey;\n    this.getDragInput.minValue = (e.minValue) ? e.minValue : 0;\n    this.getDragInput.maxValue = (e.maxValue) ? e.maxValue : 250;\n    this.getDragInput.phValue = (e.phValue) ? e.phValue : '';\n    this.getDragInput.description = (e.description) ? e.description : '';\n    this.getDragInput.defaultOption = e.defaultOption;\n    this.getDragInput.options = (e.options) ? e.options : [];\n    if (this.isFieldEdit) {\n      this.fullformData.splice(this.currentFieldIndex, 0, this.getDragInput)\n      //this.fullformData[this.currentFieldIndex] = this.getDragInput;\n      this.isFieldEdit = false;\n    } else {\n      const formFields = Object.assign({}, this.getDragInput);\n      this.fullformData.push(formFields);\n    }\n  }\n  /* Save Field function */\n  saveJsonFormData(): void {\n    this.commonSevice.updateLoaderStatus(true);\n    const datas = JSON.stringify(this.fullformData);\n    if (this.fullformData) {\n      this.fieldList=[];\n      this.fieldLength = [];\n\n      this.fullformData.forEach((item, index) => {\n        this.fieldList.push(item.fieldKey);\n        this.fieldval = item.fieldKey;\n        const obj={\n          [this.fieldval] : item.maxValue,\n        }\n        this.fieldLength.push(obj);\n      });\n   \n      const requestData = new FormData();\n      if (!this.ciTypeFormId) {\n        requestData.append('createdDate,', this.currentDate);\n      } else {\n        requestData.append('modifiedDate', this.currentDate);\n      }\n      requestData.append('ciTypeFormId', this.ciTypeFormId);\n      requestData.append('createdBy', '1');\n      requestData.append('modifiedBy', '1');\n      requestData.append('ciDetailId', this.ciId);\n      requestData.append('formFields', this.fieldList);\n      requestData.append('fieldLength',JSON.stringify(this.fieldLength));\n      requestData.append('formJson', datas);\n      requestData.append('formElements', '');\n      if(this.freezeBtn ==='yes'){\n        requestData.append('submissionFlag', 'submit');\n      }else{\n        requestData.append('submissionFlag', 'save');\n      }\n      this.citypeService.saveFormJsonData(requestData).subscribe((data: any) => {\n        this.toastService.success(data.message);\n        this.ciTypeFormId = data.ciTypeFormId;\n        this.freezeBtn = '';\n        this.commonSevice.updateLoaderStatus(false);\n      }, err => {\n        this.toastService.error(err.message);\n        this.commonSevice.updateLoaderStatus(false);\n      });\n    } else {\n      this.commonSevice.updateLoaderStatus(false);\n      this.toastService.error('Drag and Drop Atleast one Field');\n    }\n  }\n  /* Delete Field function*/\n  deleteField(i): void {\n    this.fullformData.splice(i, 1);\n  }\n/* Edit Field function */\n  editField(fieldinfo, i): void {\n    this.getDragInput = fieldinfo;\n    this.submitted = false;\n    this.displayModalfields = true;\n    this.setValuePopup();\n    this.isFieldEdit = true;\n    this.fullformData.splice(i, 1);\n    this.currentFieldIndex = i;\n\n    this.inputControlForm.get('fieldName').setValue(this.getDragInput.fieldName);\n    this.inputControlForm.get('fieldKey').setValue(this.getDragInput.fieldKey);\n    const setminValue = (this.getDragInput.minValue) ? this.getDragInput.minValue : 0;\n\n    this.inputControlForm.get('minValue').setValue(setminValue);\n    const setmaxValue = (this.getDragInput.maxValue) ? this.getDragInput.maxValue : 250;\n    this.inputControlForm.get('maxValue').setValue(setmaxValue);\n    const setphValue = (this.getDragInput.phValue) ? this.getDragInput.phValue : '';\n    this.inputControlForm.get('phValue').setValue(setphValue);\n    const setDescriptionValue = (this.getDragInput.description) ? this.getDragInput.description : '';\n    this.inputControlForm.get('description').setValue(setDescriptionValue);\n    if (this.getDragInput.fieldType === 'select' || this.getDragInput.fieldType === 'radio' || this.getDragInput.fieldType === 'checkbox') {\n      const optionsValue = this.getDragInput.options.map(option => this.formBuilder.group(option));\n      this.inputControlForm.setControl('options', this.formBuilder.array(optionsValue));\n      this.inputControlForm.get('defaultOption').setValue(this.getDragInput.defaultOption);\n    }\n\n  }\n\n  cancelField(): void {\n    if (this.isFieldEdit) {\n      this.fullformData.splice(this.currentFieldIndex, 0, this.getDragInput);\n      this.isFieldEdit = false;\n    }\n    this.inputControlForm.reset();\n    this.displayModalfields = false;\n    this.submitted = false;\n  }\n  freezeField(): void {\n    this.freezeBtn = 'yes';\n    this.saveJsonFormData();\n  }\n  extractFromJson(obj) {\n    if(obj){\n      obj = JSON.parse(obj);\n      return obj;\n    }\n   \n  }\n\n  getFormCIParentJSon(): void {\n    if (this.ciId || this.ciHierarchy) {\n      const requestData = {\n        ciDetailId: (this.ciId) ? this.ciId : '',\n        hierarchy: (this.ciHierarchy) ? this.ciHierarchy : ''\n      };\n\n      this.citypeService.getFormCIParentJSon(requestData).subscribe((data: any) => {\n        this.parentFormData = (data.parentData) ? data.parentData : []\n        if (data.currentData) {\n          this.ciTypeFormId = (data.currentData[0].ciTypeFormId) ? data.currentData[0].ciTypeFormId : '';\n        } else {\n          this.ciTypeFormId = '';\n        }\n        this.fullformData = (data.currentData[0].formJson) ? JSON.parse(data.currentData[0].formJson) : [];\n\n\n      });\n    }\n\n  }\n\n  numbersOnly(event) {\n    const input = String.fromCharCode(event.keyCode);\n    if (!/^[0-9]*$/.test(input)) {\n      event.preventDefault();\n    }\n  }\n\n\n  setDynamicValidators(value: number, control: AbstractControl) {\n    // control.setValidators(minMaxFieldValidator(value));\n    control.updateValueAndValidity();\n\n  }\n\n}\n\nfunction customValidator(): ValidatorFn {\n  return (control: FormGroup): { [key: string]: boolean } | null => {\n    const min = control.get('minValue');\n    const max = control.get('maxValue');\n    return min && max && parseInt(min.value) > parseInt(max.value) ? { minGreaterThanMax: true } : null\n\n  }\n}\n\nfunction minMaxFieldValidator(maxvalue): ValidatorFn {\n  return (control: AbstractControl) => {\n    return control && parseInt(control.value) > maxvalue ? { limitingError: true, 'message': `The value should be less than or equal to ${maxvalue} ` } : null\n  }\n  \n}\n\n","<div class=\"margin-adjust-field\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-9 p-lg-9 padding-adjustment-field\">\n            <div>\n                <!--class=\"border-div\"-->\n                <!-- <h5 class=\"bg-update-columns\">Available Columns</h5> -->\n                <p-accordion *ngIf=\"getciId!=1\">\n                    <p-accordionTab header=\"Parent Fields\" [selected]=\"false\">\n                        <ng-container *ngIf=\"parentFormData\">\n\n                            <p-accordion *ngFor=\"let pformData of parentFormData\">\n\n                                <p-accordionTab header=\"{{pformData.ciTypeName}}\" [selected]=\"false\">\n                                    <div style=\"padding: 10px;\">\n                                        <div class=\"p-grid\">\n\n                                            <div class=\"p-col-12 p-md-6 p-lg-6\" *ngFor=\"let formData of  extractFromJson(pformData.formJson)\">\n                                                <div *ngIf=\"formData\" [ngSwitch]=\"formData.fieldType\">\n\n                                                    <div *ngSwitchCase=\"'text'\">\n                                                        <app-inputbox [item]=\"formData\"></app-inputbox>\n                                                    </div>\n                                                    <div *ngSwitchCase=\"'select'\">\n                                                        <app-selectbox [item]=\"formData\"></app-selectbox>\n                                                    </div>\n                                                    <div *ngSwitchCase=\"'checkbox'\">\n                                                        <app-checkbox [item]=\"formData\"></app-checkbox>\n                                                    </div>\n                                                    <div *ngSwitchCase=\"'radio'\">\n                                                        <app-radio [item]=\"formData\"></app-radio>\n                                                    </div>\n\n\n                                                </div>\n                                            </div>\n\n\n\n\n\n                                        </div>\n                                    </div>\n                                </p-accordionTab>\n                            </p-accordion><br>\n                        </ng-container>\n                    </p-accordionTab>\n                </p-accordion>\n                <div class=\"type-file-styling-div\">\n                    <h4 class=\"type-file-h4\">{{ciTypeName}}</h4>\n                    <div class=\"p-grid\">\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <div class=\"common-bg-drop\">\n                                <div class=\"drop p-grid\" pDroppable=\"dropedInputs\" (onDrop)=\"drop($event)\">\n\n                                    <div class=\"p-col-12 p-md-6 p-lg-6\" *ngFor=\"let formData of fullformData; let i=index\">\n                                        <div class=\"fielddiv\" *ngIf=\"formData\" [ngSwitch]=\"formData.fieldType\">\n                                            <div class=\"edit-delete-hover\"> <a title=\"edit\" (click)=\"editField(formData,i)\"><i class=\"pi pi-pencil\"></i></a><a title=\"delete\" (click)=\"deleteField(i)\"><i class=\"pi pi-trash\"></i></a>\n                                            </div>\n                                            <div *ngSwitchCase=\"'text'\">\n\n                                                <app-inputbox [item]=\"formData\"></app-inputbox>\n                                            </div>\n                                            <!-- <div *ngSwitchCase=\"'email'\">\n                       \n                        <app-inputbox [item]=\"formData\"></app-inputbox>\n                      </div> -->\n                                            <!-- <div *ngSwitchCase=\"'password'\">\n                       \n                        <app-inputbox [item]=\"formData\"></app-inputbox>\n                      </div> -->\n                                            <div *ngSwitchCase=\"'number'\">\n                        <app-number  [item]=\"formData\"></app-number>\n                      </div>\n                                            <div *ngSwitchCase=\"'select'\">\n                                                <app-selectbox [item]=\"formData\"></app-selectbox>\n                                            </div>\n                                            <div *ngSwitchCase=\"'checkbox'\">\n                                                <app-checkbox [item]=\"formData\"></app-checkbox>\n                                            </div>\n                                            <div *ngSwitchCase=\"'radio'\">\n                                                <app-radio [item]=\"formData\"></app-radio>\n                                            </div>\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <div class=\"save-btn-resp margin-alignment\">\n                                <button type=\"button\" (click)=\"saveJsonFormData()\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                                <button (click)=\"freezeField()\" type=\"button\" style=\"margin-left: 8px;\" class=\"btn btn-default btn-resp-btn\">Submit</button>\n                                <button type=\"button\" [routerLink]=\"['/configuration/citypelist']\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"p-col-12 p-md-3 p-lg-3 padding-adjustment-field\">\n            <app-ci-add-fields (getDragInputControl)=\"getDragInputs($event)\"></app-ci-add-fields>\n        </div>\n\n    </div>\n    <p-dialog *ngIf=\"getDragInput\" header=\"{{getDragInput.name}}\" (onHide)=\"cancelField()\" [(visible)]=\"displayModalfields\" [modal]=\"true\" [style]=\"{width: '70vw'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n        <form [formGroup]=\"inputControlForm\" (ngSubmit)=\"submitInputControl()\">\n\n            <div class=\"p-grid\" *ngIf=\"getDragInput\" [ngSwitch]=\"getDragInput.fieldType\">\n\n                <!--- common Fields  For All Input Controls-->\n                <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Field Name<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"fieldName\" oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" [ngClass]=\"{ 'is-invalid': submitted && fval.fieldName.errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"ci-fieldname\">\n                    <div *ngIf=\"submitted && fval.fieldName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"fval.fieldName.errors.required\">\n                            Field name is Required\n                        </div>\n                        <div *ngIf=\"fval.fieldName.errors.fieldname\">\n                            Field Name is already exists\n                        </div>\n                    </div>\n                </div>\n                <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Field Key<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"fieldKey\" [ngClass]=\"{ 'is-invalid': submitted && fval.fieldKey.errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"ci-fieldkey\">\n                    <div *ngIf=\"submitted && fval.fieldKey.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"fval.fieldKey.errors.required\">\n                            Field key is Required\n                        </div>\n                        <div *ngIf=\"fval.fieldKey.errors.fieldkey\">\n                            Field key is already exists\n                        </div>\n                    </div>\n                </div>\n                <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Field Type<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"fieldType\" readonly type=\"text\" size=\"30\" class=\"form-control\" id=\"ci-fieldtype\">\n                </div>\n                <!--- common Fields  For All Input Controls-->\n\n                <div class=\"p-grid padding-left-align\" *ngSwitchCase=\"'text'\">\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                        <div class=\"p-grid\">\n                            <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-popup2\">\n                                <h4 class=\"first relationship-name-color\">Characters Required (Min - Max)</h4>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"minValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.minValue.errors || submitted &&  inputControlForm.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-minfield\">\n                                <div *ngIf=\"submitted && fval.minValue.errors || submitted &&  inputControlForm.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.minValue.errors?.limitingError\"> {{ fval.minValue.errors?.message}}</div>\n                                    <div *ngIf=\"submitted && (inputControlForm.errors?.minGreaterThanMax && !fval.minValue.errors?.limitingError )\">The value should be less than or equal to minValue\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"maxValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors  || submitted &&  inputControlForm.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-maxfield\">\n                                <div *ngIf=\"submitted && fval.maxValue.errors || submitted &&  inputControlForm.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.maxValue.errors?.limitingError\">{{ fval.minValue.errors?.message}}</div>\n                                    <!-- <div *ngIf=\"submitted && inputControlForm.errors?.minGreaterThanMax\">The value should be less than or equal to minValue\n                </div> -->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n            <h4 class=\"first relationship-name-color hidden-label\" >Characters Required (Min - Max)</h4>\n            <input formControlName=\"maxValue\"  [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control\">\n            <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n            </div>\n          </div> -->\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup1\">\n                        <h4 class=\"first relationship-name-color\">Place Holder</h4>\n                        <input formControlName=\"phValue\" type=\"text\" size=\"30\" class=\"form-control placeholder-width\" id=\"ci-placeholderfirst\">\n                    </div>\n\n                </div>\n                <!-- number-->\n                <div class=\"p-grid padding-left-align\" *ngSwitchCase=\"'number'\">\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                        <div class=\"p-grid\">\n                            <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-popup2\">\n                                <h4 class=\"first relationship-name-color\">Value Range (Min - Max)</h4>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"minValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.minValue.errors || submitted &&  inputControlForm.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-minfield\">\n                                <div *ngIf=\"submitted && fval.minValue.errors || submitted &&  inputControlForm.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.minValue.errors?.limitingError\"> {{ fval.minValue.errors?.message}}</div>\n                                    <div *ngIf=\"submitted && (inputControlForm.errors?.minGreaterThanMax && !fval.minValue.errors?.limitingError )\">The value should be less than or equal to minValue\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"maxValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors  || submitted &&  inputControlForm.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-maxfield\">\n                                <div *ngIf=\"submitted && fval.maxValue.errors || submitted &&  inputControlForm.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.maxValue.errors?.limitingError\">{{ fval.minValue.errors?.message}}</div>\n                                    <!-- <div *ngIf=\"submitted && inputControlForm.errors?.minGreaterThanMax\">The value should be less than or equal to minValue\n                </div> -->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n            <h4 class=\"first relationship-name-color hidden-label\" >Characters Required (Min - Max)</h4>\n            <input formControlName=\"maxValue\"  [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control\">\n            <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n            </div>\n          </div> -->\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup1\">\n                        <h4 class=\"first relationship-name-color\">Place Holder</h4>\n                        <input formControlName=\"phValue\" type=\"text\" size=\"30\" class=\"form-control placeholder-width\" id=\"ci-placeholderfirst\">\n                    </div>\n\n                </div>\n\n                <div class=\"p-grid padding-left-align\" *ngSwitchCase=\"'email'\">\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                        <div class=\"p-grid\">\n                            <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-popup2\">\n                                <h4 class=\"first relationship-name-color\">Characters Required (Min - Max)</h4>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"minValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.minValue.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-minfield1\">\n                                <div *ngIf=\"submitted && fval.minValue.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.minValue.errors.pattern\">Enter only number.</div>\n                                </div>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"maxValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-max-field\">\n                                <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup1\">\n                        <h4 class=\"first relationship-name-color\">Place Holder</h4>\n                        <input formControlName=\"phValue\" type=\"text\" size=\"30\" class=\"form-control placeholder-width\" id=\"ci-placeholder3\">\n                    </div>\n\n                </div>\n                <div class=\"p-grid padding-left-align\" *ngSwitchCase=\"'password'\">\n                    <div class=\"p-col-12 p-md-4 p-lg-4\">\n                        <h4 class=\"first relationship-name-color hidden-label\">Characters Required (Min - Max)</h4>\n                        <input formControlName=\"minValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.minValue.errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"ci-minfield2\">\n                        <div *ngIf=\"submitted && fval.minValue.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"submitted && fval.minValue.errors.pattern\">Enter only number.</div>\n                        </div>\n                    </div>\n                    <div class=\"p-col-12 p-md-4 p-lg-4\">\n                        <h4 class=\"first relationship-name-color\">Characters Required (Min - Max)</h4>\n                        <input formControlName=\"maxValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"ci-max-field2\">\n                        <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n                        </div>\n                    </div>\n                    <div class=\"p-col-12 p-md-4 p-lg-4\">\n                        <h4 class=\"first relationship-name-color\">Place Holder</h4>\n                        <input formControlName=\"phValue\" type=\"text\" size=\"30\" class=\"form-control\" id=\"ci-placeholder4\">\n                    </div>\n\n                </div>\n\n                <!--Select  Swith Case-->\n                <div class=\"p-grid optiondgrid\" *ngSwitchCase=\"'select'\">\n\n\n                    <div class=\"p-col-12 p-md-9 p-lg-9\">\n                        <h4 class=\"first relationship-name-color\">Field Values <sup class=\"mandatory-color\">*</sup></h4>\n                    </div>\n                    <div class=\"p-col-12 p-md-3 p-lg-3\">\n                        <!-- [disabled]=\"formArraySelect.controls[formArraySelect?.controls.length-1].errors?.required\" -->\n                        <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn\"><i class=\"pi pi-plus\"></i>&nbsp; Add\n              Option</button>\n                    </div>\n                    <div class=\"p-col-12 p-md-12 p-lg-12 full-options-area\">\n                        <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"p-grid  optiondgrid\">\n                                    <div class=\"p-col-12 p-md-1 p-lg-1\" style=\"width: 30px; margin-top: 15px;\">\n                                        <input type=\"radio\" [formControl]=\"inputControlForm.get('defaultOption')\" [value]=\"i\" [checked]=\"i==0\" id=\"ci-radio2\">\n                                    </div>\n                                    <div class=\"p-col-12 p-md-10 p-lg-10 \">\n                                        <input formControlName=\"optionValue\"  oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\" type=\"text\" size=\"30\" class=\"form-control\"\n                                            id=\"ci-optionvalue2\">\n                                        <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \" class=\"invalid-feedback\">\n                                            <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                                                Option Value is Required\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"p-col-12 p-md-1 p-lg-1 \">\n                                        <button *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" class=\"ui-button-danger ui-delete-custom btn-add-remove delete-icon\"><img src=\"../../../../../assets/table-icon/delete-btn.svg\"></button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- multi selet-->\n                <!-- <div class=\"p-grid\" *ngSwitchCase=\"'multiselect'\">\n          <div class=\"p-col-12 p-md-12 p-lg-12\" style=\"padding: 0px;\">\n            <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn right-add-button\">Add\n              Option</button>\n          </div>\n          <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n            <div [formGroupName]=\"i\">\n              <div class=\"p-grid padding-adj\">\n                <input   type=\"checkbox\"  formControlName=\"defaultOption\"  [value]=\"i\" [checked]=\"i==0\" class=\"p-col-12 p-md-1 p-lg-1 \" >\n               \n                <div class=\"p-col-12 p-md-5 p-lg-5 col-adjust-options padding-adjustment-popup\">\n                  <h4  *ngIf=\"i==0\" class=\"first relationship-name-color\">Option Key <sup class=\"mandatory-color\">*</sup></h4>\n                  <input formControlName=\"optionKey\" (click)=\"getOption(i)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionKey').errors }\"\n                    type=\"text\" size=\"30\" class=\"form-control width-placement\">\n                  <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionKey').errors \"\n                    class=\"invalid-feedback\">\n                    <div *ngIf=\"formArraySelect.controls[i].get('optionKey').errors.required\">\n                      Option Key is Required\n                    </div>\n                  </div>\n                </div>\n                <div class=\"p-col-12 p-md-5 p-lg-5 col-adjust-options padding-adjustment-popup\">\n                  \n                  <h4  *ngIf=\"i==0\"  class=\"first relationship-name-color option-value\">Option Value<sup class=\"mandatory-color\">*</sup></h4>\n                  <input formControlName=\"optionValue\"\n                     [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\"\n                    type=\"text\" size=\"30\" class=\"form-control width-placement width-left\">\n                  <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \"\n                    class=\"invalid-feedback\">\n                    <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                      Option Value is Required\n                    </div>\n                  </div>\n                </div>\n                <div class=\"p-col-12 p-md-1 p-lg-1  col-adjust-options1 col-top-adjustment\">\n                  <button  *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" pButton icon=\"pi pi-times\"\n                    class=\"ui-button-danger ui-delete-custom btn-add-remove\"></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> -->\n                <!--Radio   Swith Case-->\n                <div class=\"p-grid optiondgrid\" *ngSwitchCase=\"'radio'\">\n\n\n                    <div class=\"p-col-12 p-md-9 p-lg-9\">\n                        <h4 class=\"first relationship-name-color\">Field Values <sup class=\"mandatory-color\">*</sup></h4>\n                    </div>\n                    <div class=\"p-col-12 p-md-3 p-lg-3\">\n                        <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn\"><i class=\"pi pi-plus\"></i>&nbsp; Add\n            Option</button>\n                    </div>\n                    <div class=\"p-col-12 p-md-12 p-lg-12 full-options-area\">\n                        <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"p-grid  optiondgrid\">\n                                    <div class=\"p-col-12 p-md-1 p-lg-1\" style=\"width: 30px; margin-top: 15px;\">\n                                        <input type=\"radio\" [formControl]=\"inputControlForm.get('defaultOption')\" [value]=\"i\" [checked]=\"i==0\" id=\"ci-radio3\">\n                                    </div>\n                                    <div class=\"p-col-12 p-md-10 p-lg-10 \">\n                                        <input formControlName=\"optionValue\" oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"  [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\" type=\"text\" size=\"30\" class=\"form-control\"\n                                            id=\"ci-optionvalue3\">\n                                        <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \" class=\"invalid-feedback\">\n                                            <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                                                Option Value is Required\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"p-col-12 p-md-1 p-lg-1 \">\n                                        <button *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" pButton class=\"ui-button-danger ui-delete-custom btn-add-remove delete-icon\"><img src=\"../../../../../assets/table-icon/delete-btn.svg\"></button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--Checkbox   Swith Case-->\n                <div class=\"p-grid optiondgrid\" *ngSwitchCase=\"'checkbox'\">\n\n\n                    <div class=\"p-col-12 p-md-9 p-lg-9\">\n                        <h4 class=\"first relationship-name-color\">Field Values <sup class=\"mandatory-color\">*</sup></h4>\n                    </div>\n                    <div class=\"p-col-12 p-md-3 p-lg-3\">\n                        <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn\"><i class=\"pi pi-plus\"></i>&nbsp; Add\n            Option</button>\n                    </div>\n                    <div class=\"p-col-12 p-md-12 p-lg-12 full-options-area\">\n                        <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"p-grid  optiondgrid\">\n                                    <div class=\"p-col-12 p-md-1 p-lg-1\" style=\"width: 30px; margin-top: 15px;\">\n                                        <input type=\"radio\" [formControl]=\"inputControlForm.get('defaultOption')\" [value]=\"i\" [checked]=\"i==0\" id=\"ci-radio4\">\n                                    </div>\n                                    <div class=\"p-col-12 p-md-10 p-lg-10 \">\n                                        <input formControlName=\"optionValue\"  oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\" type=\"text\" size=\"30\" class=\"form-control\"\n                                            id=\"ci-optionvalue4\">\n                                        <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \" class=\"invalid-feedback\">\n                                            <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                                                Option Value is Required\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"p-col-12 p-md-1 p-lg-1 \">\n                                        <button *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" pButton class=\"ui-button-danger ui-delete-custom btn-add-remove delete-icon\"><img src=\"../../../../../assets/table-icon/delete-btn.svg\"></button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-last padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Description</h4>\n                    <textarea formControlName=\"description\" [rows]=\"5\" [cols]=\"78\" class=\"form-control\" autoResize=\"autoResize\" id=\"ci-description\"></textarea>\n                </div>\n                <p-footer>\n                    <div class=\"p-col-12 p-md-12 p-lg-12\">\n                        <div class=\"save-btn-resp\">\n                            <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                            <button (click)=\"cancelField()\" type=\"button\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n                        </div>\n                    </div>\n                </p-footer>\n            </div>\n        </form>\n    </p-dialog>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { CitypeService } from '../../../services/citype.service';\nimport { NgxFileDropEntry, FileSystemFileEntry } from 'ngx-file-drop';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastService } from '../../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { newUrl } from '../../../../../../environments/environment';\nimport { ConfirmationService } from 'primeng/api';\n\n@Component({\n  selector: 'app-ci-header-details',\n  templateUrl: './ci-header-details.component.html',\n  styleUrls: ['./ci-header-details.component.css'],\n  providers: [ConfirmationService],\n})\nexport class CiHeaderDetailsComponent implements OnInit {\n\n  div1: boolean = true;\n  div2: boolean = false;\n  div3: boolean = true;\n  div4: boolean = false;\n\n  tab: any = 'tab1';\n  tab1: any;\n  tab2: any;\n  tab3: any;\n  Clicked: boolean;\n  ciParentList: any;\n  iconsList: any;\n  displayModal: boolean;\n  seletedIcon: any;\n  seletedImport: any;\n  @Output() saveImage: EventEmitter<any> = new EventEmitter();\n  @Output() sourceCItype: EventEmitter<any> = new EventEmitter();\n  selectedImg: any;\n  file: NgxFileDropEntry[];\n  submitted = false;\n  imgDiv: boolean = false;\n  iconSelected: any;\n  imageUpload: any;\n  noIcon: boolean = true;\n  yesIcon: boolean = false;\n  errorImage: boolean = false;\n  ciError: boolean = false;\n  parentCIError: boolean = false;\n  imgReqerror: boolean = false;\n  parentCI: Array<string> = [];\n  parentCIcode: any;\n  tabIndex: number = 0;\n  @Output() getTabIndexValue: EventEmitter<any> = new EventEmitter();\n  getCIid: any;\n  pathUrl: any;\n  errorFileSize: boolean = false;\n  errorFileType: boolean = false;\n  isValid: number = 0;\n  iconSelect: any;\n  iconImport: any;\n  viewIcon: any;\n  hideBrowse: boolean = true;\n  ciTypeDetailForm: FormGroup;\n  isCiDetailEdit: boolean = false;\n  currentCiName: any;\n  defaultIcon: any;\n  selectedCIicon: boolean = false;\n  disableParent: boolean = false;\n  disableBrowse: boolean = true;\n\n  constructor(private citypeService: CitypeService,\n    private formBuilder: FormBuilder,\n    private toastService: ToastService,\n    private commonSevice: CommonService, private router: Router,\n    private confirmationService: ConfirmationService,\n    private route: ActivatedRoute) {\n  }\n  ngOnInit(): void {\n    \n    this.pathUrl = newUrl;\n    this.defaultIcon = 'assets/upload-icon/database-big-btn.svg';\n    this.viewIcon = this.defaultIcon;\n    this.iconSelect = this.viewIcon;\n\n    this.ciTypeDetailForm = this.formBuilder.group({\n      id: [''],\n      ciTypeName: ['', Validators.required],\n      parentCIType: ['', Validators.required],\n      description: [''],\n      selectedIconImage: [''],\n    });\n\n    this.getPrantCI();\n    this.getIconList();\n    this.formControlValueChanged();\n    this.getParentData();\n\n    this.getCIid = this.route.snapshot.queryParams['ciId'];\n    if (this.getCIid) {\n      this.disableParent = true;\n      this.editCI(this.getCIid);\n    }\n  }\n\n  formControlValueChanged() {\n    this.ciTypeDetailForm.get('ciTypeName').valueChanges.subscribe(\n      (mode: any) => {\n        if (this.isCiDetailEdit) {\n          if (this.currentCiName != mode) {\n            // if ((this.parentCI).indexOf(mode) > -1) {\n            //   this.ciError = true;\n            // } else {\n            //   this.ciError = false;\n            // }\n            const parentCIName = this.parentCI.findIndex(data => data.toLowerCase() === mode.toLowerCase());\n            if (parentCIName !== -1) {\n              this.ciError = true;\n            } else {\n              this.ciError = false;\n            }\n          }\n        } else {\n          const parentCIName = this.parentCI.findIndex(data => data.toLowerCase() === mode.toLowerCase());\n          if (parentCIName !== -1) {\n            this.ciError = true;\n          } else {\n            this.ciError = false;\n          }\n        }\n      });\n  }\n\n  get fval(): any {\n    return this.ciTypeDetailForm.controls;\n  }\n  // dropdown list\n  getPrantCI(): any {\n    this.citypeService.getParentCI().subscribe(data => {\n      this.ciParentList = data.map((map) => {\n        this.parentCI.push(map.ciTypeName);\n        return { code: map.id, name: map.ciTypeName };\n      });\n    });\n  }\n\n  // get icon list\n  getIconList(): void {\n    this.citypeService.getIconList().subscribe(data => {\n      this.iconsList = data;\n    });\n  }\n\n  getSeletedIcon(iconurl): void {\n    this.selectedCIicon = false;\n    if (iconurl) {\n      this.selectedCIicon = true;\n    }\n    this.iconSelect = iconurl;\n    this.errorImage = false;\n  }\n  /*Save Icon function*/\n  saveIconorImg(): void {\n    if (this.selectedCIicon == false) {\n      this.displayModal = true;\n      if (this.div3) {\n        this.confirmationService.confirm({\n          message: 'Please select an icon',\n          header: 'Alert',\n          icon: 'fa fa-question-circle',\n          accept: () => {\n          },\n          acceptLabel: 'Ok'\n        });\n      } else if (this.div4) {\n        this.confirmationService.confirm({\n          message: 'Please select an image',\n          header: 'Alert',\n          icon: 'fa fa-question-circle',\n          accept: () => {\n          },\n          acceptLabel: 'Ok'\n        });\n      }\n    } else if (this.isValid == 1 || this.isValid == 2) {\n      this.displayModal = true;\n\n    } else if (this.iconSelect || this.iconImport) {\n      this.displayModal = false;\n      this.imgDiv = true;\n      this.noIcon = false;\n      this.yesIcon = true;\n      this.errorImage = false;\n      this.file = [];\n      this.seletedIcon = this.iconSelect;\n      this.seletedImport = this.iconImport;\n      this.iconSelect = '';\n      this.viewIcon = '';\n      if (this.seletedIcon) {\n        this.seletedImport = '';\n        this.viewIcon = this.seletedIcon;\n        this.ciTypeDetailForm.get('selectedIconImage').setValue(this.seletedIcon);\n        this.saveImage.emit(this.seletedIcon);\n      } else if (this.seletedImport) {\n        this.seletedIcon = '';\n        this.viewIcon = '';\n        this.ciTypeDetailForm.get('selectedIconImage').setValue(this.seletedImport);\n        this.saveImage.emit(this.seletedImport);\n      }\n      if (this.viewIcon || this.seletedImport) {\n        this.hideBrowse = false;\n      }\n\n    } else {\n      this.displayModal = true;\n      this.errorImage = true;\n    }\n\n  }\n  /*Edit Icon*/\n  editIcon() {\n    if (this.viewIcon || this.seletedImport) {\n      if (this.viewIcon) {\n        this.iconSelect = this.viewIcon;\n      } else {\n        this.iconSelect = this.seletedImport;\n      }\n      this.displayModal = true;\n      this.div3 = true;\n      this.div4 = false;\n      this.tab = 'tab1';\n\n    }\n    this.disableBrowse = true;\n  }\n   /* Remove Icon */\n  removeIcon() {\n    if (this.viewIcon || this.seletedImport) {\n      this.viewIcon = '';\n      this.seletedImport = '';\n      this.hideBrowse = true;\n      this.imgDiv = false;\n      this.viewIcon = this.defaultIcon;\n\n    }\n  }\n  /* Save CI type function*/\n  submitCIDetail(): void {\n    this.seletedIcon = this.iconSelect;\n    this.seletedImport = this.iconImport;\n    const uploadImage = {\n      \"base64\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n\n    if (this.ciError) {\n      this.submitted = false;\n    } else {\n      this.submitted = true;\n      this.ciError = false;\n    }\n    const parentVal = this.ciTypeDetailForm.get('parentCIType').value;\n    if(parentVal == ''){\n      this.parentCIError = true;\n      this.submitted = false;\n    }else{\n      this.parentCIError = false;\n      this.submitted = true;\n    }\n    if (this.submitted && this.ciTypeDetailForm.valid) {\n      this.commonSevice.updateLoaderStatus(true);\n      const requestData = { ...this.ciTypeDetailForm.value }\n      this.parentCIcode = requestData.parentCIType.code;\n      // requestData.id=12;\n      // requestData.modifiedBy=1;\n      requestData.ciTypeName = (requestData.ciTypeName).trim();\n      requestData.parentCIType = this.parentCIcode;\n      requestData.createdBy = 1;\n      requestData.status = 'Y';\n      if (requestData.parentCIType.name === 'CMDB') {\n        requestData.hasParent = 'N';\n      } else {\n        requestData.hasParent = 'Y';\n\n      }\n      if (this.viewIcon) {\n        requestData.iconType = 'path';\n        requestData.imageLocation = this.viewIcon;\n        requestData.file = null;\n\n      }\n      if (this.seletedImport) {\n        requestData.iconType = 'import';\n        requestData.imageLocation = '';\n        // requestData.file= this.selectedImg;\n        uploadImage['base64'] = this.seletedImport;\n        uploadImage['name'] = (this.selectedImg).name;\n        uploadImage['type'] = (this.selectedImg).type;\n        requestData.file = uploadImage;\n      }\n      this.citypeService.createCIDetails(requestData).subscribe((data: any) => {\n        const sourceCIval = {\n          ciTypeName: data.ciTypeName,\n          ciId: data.id,\n          parentCITypeId: data.parentCITypeId,\n          parentCIName: data.parentCIName,\n          hierarchy: data.hierarchy\n        }\n        this.commonSevice.updateCiDetailInfo(sourceCIval);\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.success(data.message);\n        this.seletedIcon = '';\n        this.imgDiv = false;\n        this.noIcon = true;\n        this.yesIcon = false;\n        this.ciTypeDetailForm.reset();\n        this.openNext();\n        this.submitted = false;\n        this.editCI(data.id);\n\n      }, err => {\n        this.displayModal = false;\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.error(err.error.message);\n\n      });\n    }\n\n  }\n/* Drag and Drop handling*/\n  public dropped(files: NgxFileDropEntry[]): void {\n    this.file = files;\n    this.errorImage = false;\n    this.seletedIcon = '';\n    this.iconImport = '';\n    this.iconSelect = '';\n    this.selectedCIicon = false;\n    for (const droppedFile of files) {\n      this.disableBrowse = false;\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          const fileSize = file.size;\n          const maxAllowedSize = 2000000; // bytes for 2MB\n\n          if (fileSize > maxAllowedSize) {\n            this.errorFileSize = true;\n            this.isValid = 1;\n          } else {\n            this.errorFileSize = false;\n            this.selectedImg = file;\n          }\n\n          const extension = (file.name).split('.').pop();\n\n          if (extension == 'jpeg' || extension == 'jpg' || extension == 'JPG' || extension == 'JPEG' || extension == 'png' || extension == 'PNG') {\n            this.errorFileType = false;\n            this.selectedImg = file;\n            this.isValid = 0;\n          } else {\n            this.errorFileType = true;\n            this.isValid = 2;\n          }\n\n          // Preview Import Image\n          const reader = new FileReader();\n          fileEntry.file(file => {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n              this.iconImport = reader.result;\n              if (this.iconImport) {\n                this.selectedCIicon = true;\n              }\n            };\n          });\n\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n      }\n    }\n  }\n \n  div1Function(check): void {\n    this.div1 = true;\n    this.div2 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n\n  }\n\n  div2Function(check): void {\n    this.div2 = true;\n    this.div1 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n\n  }\n\n  div3Function(check): void {\n    this.div3 = true;\n    this.div4 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n\n  }\n\n  div4Function(check): void {\n    this.div4 = true;\n    this.div3 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n\n  }\n\n\n  showModalDialog(): void {\n    this.displayModal = true;\n  }\n\n  /*Cancel button handling*/\n  cancelImagemodal(): void {\n    if (this.getCIid == '') {\n      this.seletedIcon = '';\n      this.disableBrowse = true;\n    }\n    this.displayModal = false;\n    this.errorFileSize = false;\n    this.errorFileType = false;\n    this.file = [];\n    this.div3 = true;\n    this.div4 = false;\n    this.tab = 'tab1';\n    this.disableBrowse = true;\n  }\n\n  cancelCIDetails(): void {\n    // this.ciTypeDetailForm.reset();\n    // this.seletedIcon = '';\n    // this.imgDiv = false;\n    // this.noIcon = true;\n    // this.yesIcon = false;\n    this.router.navigate(['configuration/citypelist']);\n  }\n   /* Enable tab*/\n  openNext() {\n    this.tabIndex = (this.tabIndex === 2) ? 0 : this.tabIndex + 1;\n    this.getTabIndexValue.emit(this.tabIndex);\n  }\n  openPrev() {\n    this.tabIndex = (this.tabIndex === 0) ? 2 : this.tabIndex - 1;\n  }\n\n  /* Edit CI Type*/\n  editCI(ciId): void {\n    this.isCiDetailEdit = true;\n    this.commonSevice.updateLoaderStatus(true);\n    this.citypeService.getCIData(ciId).subscribe(data => {\n      const sourceCIval = {\n        ciTypeName: data.ciTypeName,\n        ciId: data.id,\n        parentCITypeId: data.parentCITypeId,\n        parentCIName: data.parentName,\n        hierarchy: data.hierarchy\n      };\n      this.commonSevice.updateCiDetailInfo(sourceCIval);\n      this.ciTypeDetailForm.patchValue({\n        id: data.id,\n        ciTypeName: data.ciTypeName,\n        parentCIType: { code: data.parentCITypeId, name: data.parentName },\n        description: data.description\n      });\n      this.currentCiName = data.ciTypeName;\n\n      if (data.imageLocation) {\n        if (data.icon == 'import') {\n          this.viewIcon = '';\n          this.seletedImport = this.pathUrl + '' + data.imageLocation;\n          this.iconSelected = 'import';\n          \n        } else {\n          this.seletedImport = '';\n          this.viewIcon = data.imageLocation;\n          this.iconSelected = 'icon';\n          // this.imageUpload = false;\n        }\n        if (this.viewIcon || this.seletedImport) {\n          this.hideBrowse = false;\n        }\n        this.ciTypeDetailForm.get('selectedIconImage').setValue(this.viewIcon);\n        this.imgDiv = true;\n        this.noIcon = false;\n        this.yesIcon = true;\n      }\n      this.commonSevice.updateLoaderStatus(false);\n      this.ciError = false;\n    }, () => {\n      this.commonSevice.updateLoaderStatus(false);\n    });\n\n  }\n\n /* Get Parent CI Name */\n getParentData(): void {\n  this.commonSevice.CiHeaderData.subscribe(data => {\n    if (data) {\n      this.ciTypeDetailForm.patchValue({\n        parentCIType: { code: data.parentCITypeId, name: data.parentCIName },\n        \n      });\n      // this.disableParent = true;\n      if(data.parentCITypeId !== \"\"){\n        this.disableParent = true;\n      }\n      else{\n        this.disableParent = false;\n      }\n      \n    }\n\n  });\n }\n}\n","<form [formGroup]=\"ciTypeDetailForm\" (ngSubmit)=\"submitCIDetail()\">\r\n    <div class=\"p-grid\">\r\n        <input id=\"ciId\" formControlName=\"id\" hidden>\r\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-alignment\">\r\n            <h4 class=\"first relationship-name-color\">CI Type Name<sup class=\"mandatory-color\">*</sup></h4>\r\n            <input id=\"input\" oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" [readonly]=\"getCIid==1\" type=\"text\" size=\"30\" formControlName=\"ciTypeName\" [ngClass]=\"{ 'is-invalid': submitted && fval.ciTypeName.errors }\" class=\"border-input\"\r\n                pInputText>\r\n            <div *ngIf=\"submitted && fval.ciTypeName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"fval.ciTypeName.errors.required\">\r\n                    CI type name is Required\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"ciError\" style=\"color: #dc3545;font-size: 11px;\">\r\n                CI type name Already Exists\r\n            </div>\r\n        </div>\r\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-alignment\" [hidden]=\"getCIid==1\">\r\n            <h4 class=\"first relationship-name-color\">Parent CI Type<sup class=\"mandatory-color\">*</sup></h4>\r\n            <p-dropdown id=\"parentCIType\" [options]=\"ciParentList\" formControlName=\"parentCIType\" [disabled]=\"disableParent\" [ngClass]=\"{ 'is-invalid': submitted && fval.parentCIType.errors }\" placeholder=\"Select Parent CI Type\" optionLabel=\"name\" filter=\"true\"></p-dropdown>\r\n            <div *ngIf=\"submitted && fval.parentCIType.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"fval.parentCIType.errors.required\">\r\n                    Parent CI type is Required\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"parentCIError\" style=\"color: #dc3545;font-size: 11px;\">\r\n                Parent CI type is Required\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"p-grid\">\r\n        <div class=\"p-col-12 p-md-8 p-lg-8 padding-alignment1\">\r\n            <h4 class=\"first relationship-name-color\">Description</h4>\r\n            <textarea id=\"cidescription\" [readonly]=\"getCIid==1\" [rows]=\"5\" [cols]=\"78\" formControlName=\"description\" class=\"border-input\" pInputTextarea autoResize=\"autoResize\"></textarea>\r\n        </div>\r\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-alignment1\">\r\n            <!-- <h6><span class=\"material-icons color-change-purple\">\r\n         camera_enhance\r\n         \r\n         </span>&nbsp;<span *ngIf=\"noIcon\">No Icons Selected</span><span *ngIf=\"yesIcon\">Icons Selected</span>\r\n      </h6> -->\r\n            <h4 class=\"first relationship-name-color\">Icon</h4>\r\n            <input hidden formControlName=\"selectedIconImage\">\r\n            <br>\r\n            <div class=\"browse-styling-border\" [hidden]=\"getCIid==1\">\r\n\r\n                <h6 class=\"browse-text\" *ngIf=\"hideBrowse\"><img src=\"{{viewIcon}}\" alt=\"\" class=\"uploaded-selected-icon\">\r\n                    <a class=\"font-color\" (click)=\"showModalDialog()\">Select Icon</a>\r\n                </h6>\r\n                <h6 class=\"browse-text\" *ngIf=\"imgDiv\">\r\n                    <div *ngIf=\"iconSelected == 'import';then importimg else selecticon\"></div>\r\n                    <!-- <img src=\"{{viewIcon}}\" alt=\"\" class=\"uploaded-selected-icon\">\r\n                  <img src=\"{{seletedImport}}\" alt=\"\" class=\"uploaded-selected-icon\"> -->\r\n                    <ng-template #selecticon>\r\n                        <img src=\"{{viewIcon}}\" alt=\"\" class=\"uploaded-selected-icon\">\r\n                    </ng-template>\r\n                    <ng-template #importimg>\r\n                        <img src=\"{{seletedImport}}\" alt=\"\" class=\"uploaded-selected-icon\">\r\n                    </ng-template>\r\n                    <a class=\"delete-left\" (click)=\"editIcon()\" style=\"color: #1fa5e6;cursor: pointer;\">Edit</a>\r\n                    <a class=\"delete-left\" (click)=\"removeIcon()\" style=\"color: #1fa5e6;cursor: pointer;\">Remove</a>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-col-12 p-md-12 p-lg-12\" [hidden]=\"getCIid==1\">\r\n            <div class=\"save-btn-resp\">\r\n                <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\r\n                <button type=\"button\" (click)=\"cancelCIDetails()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<p-dialog header=\"Choose Icons\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: 'auto'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\" (onHide)=\"cancelImagemodal()\">\r\n    <div class=\"borderBottom\">\r\n        <button type=\"button\" (click)=\"div3Function(1)\" [ngClass]=\"{'active-new': tab==='tab1','normal-div': tab==='tab2'}\">Select Icons</button>\r\n        <button type=\"button\" (click)=\"div4Function(2)\" [ngClass]=\"{'active-new': tab==='tab2','normal-div': tab==='tab1'}\" style=\"margin-left: 8px;\">Import\r\n         Images</button>\r\n    </div>\r\n    <div *ngIf=\"div3\">\r\n        <div class=\"p-grid\">\r\n            <div class=\"p-col-12 p-md-4 p-lg-4\">\r\n                <div class=\"selected-icon-div\">\r\n                    <img src=\"{{iconSelect}}\" alt=\"\" class=\"selected-icon-image\">\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"p-col-12 p-md-8 p-lg-8 padding-alignment2\">\r\n                <div>\r\n                    <div *ngFor=\"let img of iconsList\">\r\n                        <br>\r\n                        <h5 style=\"font-size: 18px;\"><b>{{img.type}}</b></h5>\r\n                        <br>\r\n                        <div class=\"p-grid\">\r\n                            <div class=\"p-col-12 p-md-2 p-lg-2 width-icons\" *ngFor=\"let iconurl of img.images\">\r\n                                <img src=\"{{iconurl}}\" alt=\"\" class=\"icons-images-response\" (click)=\"getSeletedIcon(iconurl)\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"div4\">\r\n        <br>\r\n        <div class=\"p-grid\">\r\n            <div class=\"p-col-12 p-md-10 p-lg-10\">\r\n                <ngx-file-drop dropZoneLabel=\"Drop files here\" (onFileDrop)=\"dropped($event)\" accept=\".png,.jpg\">\r\n                    <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\r\n                        <span class=\"material-icons size-increase dragicon\">\r\n                     cloud_upload\r\n                  </span>\r\n                        <h6 class=\"drag-drop-css\" *ngIf=\"disableBrowse\">Drag and Drop the file to upload<br> or</h6>\r\n\r\n                        <button type=\"button\" ngClass=\"dragbtn\" (click)=\"openFileSelector()\" *ngIf=\"disableBrowse\">Browse\r\n                     Files</button>\r\n                        <h6 class=\"upload-text\" *ngIf=\"disableBrowse\">Upload less than 2MB in JPEG or PNG Format</h6>\r\n                        <div *ngFor=\"let item of file; let i=index\" ngClass=\"dropfile\">\r\n                            <strong>{{ item.relativePath }}<br>\r\n                        <h6 class=\"icon-upload\">Icon uploaded successfully.</h6>\r\n                     </strong>\r\n                        </div>\r\n                    </ng-template>\r\n                </ngx-file-drop>\r\n            </div>\r\n            <!-- <div class=\"p-col-12 p-md-1 p-lg-1\">\r\n               </div> -->\r\n        </div>\r\n    </div>\r\n    <div class='alert alert-danger' *ngIf=\"errorImage\">\r\n        Please Select Icon or Import Image\r\n    </div>\r\n    <div class='alert alert-danger' *ngIf=\"errorFileSize\">\r\n        Upload file size cannot exceed 2MB\r\n    </div>\r\n    <div class='alert alert-danger' *ngIf=\"errorFileType\">\r\n        Upload file JPEG or PNG format only allowed\r\n    </div>\r\n    <p-footer>\r\n        <div class=\"save-btn-resp\">\r\n            <button type=\"button\" (click)=\"saveIconorImg()\" class=\"btn btn-default btn-resp-btn\">Save</button>\r\n            <button type=\"button\" (click)=\"cancelImagemodal()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\r\n        </div>\r\n    </p-footer>\r\n    <p-confirmDialog acceptLabel=\"Ok\" acceptButtonStyleClass=\"acceptYes\" rejectButtonStyleClass=\"Iconrejectbtn\">\r\n    </p-confirmDialog>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\nimport { ConfirmationService, SelectItem } from 'primeng/api';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CitypeService } from '../../../services/citype.service';\nimport { ToastService } from '../../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-ci-relationship-details',\n  templateUrl: './ci-relationship-details.component.html',\n  styleUrls: ['./ci-relationship-details.component.css'],\n  providers: [ConfirmationService],\n\n})\nexport class CiRelationshipDetailsComponent implements OnInit {\n\n  item: string;\n  cols: any[];\n  brands: SelectItem[];\n  colors: SelectItem[];\n  yearFilter: number;\n  yearTimeout: any;\n  selectedRelation: any;\n  isedit: boolean;\n  relationTypeForm: FormGroup;\n  submitted = false;\n  relationtypelist: any;\n  relationshipList: any;\n  relatedciList: any;\n  displayModal: boolean;\n  cardinalityList: any;\n  mergeRelationship: any;\n  relationDropDown: any;\n  getCIid: any;\n  ciTypeName: any;\n  parentCIName: any;\n  relatedCIType: Array<string> = [];\n\n  constructor(private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private toastService: ToastService,\n    private commonSevice: CommonService,\n    private citypeService: CitypeService,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.relationTypeForm = this.formBuilder.group({\n      id: [''],\n      sourceCItype: ['', Validators.required],\n      relationshipType: ['', Validators.required],\n      relatedCItype: ['', Validators.required],\n      cardinality: ['', Validators.required],\n      description: [''],\n      ciTypeId: ['']\n    });\n\n    this.cols = [\n      { field: 'relationShipType', header: 'Relationship Type', width: '35%' },\n      { field: 'relatedCIType', header: 'Related CI Type', width: '35%' },\n      { field: 'cardinality', header: 'Cardinality', width: '15%' }\n\n    ];\n    this.getRelationshipList();\n    this.getRelatedCIList();\n    this.getCardinalityList();\n    this.getCIHeaderData();\n\n\n    this.getCIid = this.route.snapshot.queryParams['ciId'];\n    if (this.getCIid) {\n      this.getCIHeaderData();\n      this.editCIRelationship(this.getCIid);\n      this.getRelatedCIList();\n    }\n\n  }\n\n\n  get fval(): any {\n    return this.relationTypeForm.controls;\n  }\n  // Relationship list dropdown list\n  getRelationshipList(): void {\n    this.citypeService.getRelationshipList().subscribe(data => {\n      this.relationshipList = data.map((map) => {\n        this.mergeRelationship = map.relationShipTypeId + ',' + map.type\n        return { code: this.mergeRelationship, name: map.relationShipType };\n      });\n    });\n  }\n\n  // Related dropdown list \n  getRelatedCIList(): void {\n    this.citypeService.getRelatedCIList().subscribe(data => {\n      this.relatedCIType.push('CMDB');\n      this.relatedciList = data.map((map) => {\n        const existingRelatedCI = this.relatedCIType.findIndex(data => data.toLowerCase() === map.ciTypeName.toLowerCase())\n        if (existingRelatedCI == -1) {\n          return { code: map.id, name: map.ciTypeName };\n        }\n      });\n    });\n  }\n/* Cardinality Dropdown list */\n  getCardinalityList(): void {\n    this.citypeService.getCardinalityList().subscribe(data => {\n      this.cardinalityList = data.map((map) => {\n        return { code: map.id, name: map.cardinalTypeName };\n      });\n    });\n  }\n\n  showModalDialog(): void {\n    this.displayModal = true;\n  }\n\n  onRowSelect(event): void {\n    this.selectedRelation = event.data;\n  }\n  /* Save CI Relationship */\n  submitRelationTypes(): void {\n    this.submitted = true;\n    if (this.submitted && this.relationTypeForm.valid) {\n      this.commonSevice.updateLoaderStatus(true);\n      const requestData = { ...this.relationTypeForm.value }\n      var relationship = requestData.relationshipType.code;\n      requestData.relationshipType = relationship.split(',')[1];\n      requestData.ciTypeId = requestData.ciTypeId;\n      requestData.relationShipId = relationship.split(',')[0];\n      requestData.destCiTypeId = requestData.relatedCItype.code;\n      requestData.cardinalTypeId = requestData.cardinality.code;\n      requestData.createdBy = 1;\n      requestData.status = 'Y';\n      if (this.isedit) {\n        requestData.modifiedBy = 1;\n      }\n      this.citypeService.createCIRelationType(requestData).subscribe((data: any) => {\n        this.toastService.success(data.message);\n        this.displayModal = false;\n        if (this.getCIid) {\n          this.editCIRelationship(this.getCIid);\n        } else {\n          this.editCIRelationship(requestData.ciTypeId);\n        }\n        this.commonSevice.updateLoaderStatus(false);\n      }, err => {\n        this.displayModal = false;\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.error(err.error.message);\n      });\n    }\n  }\n  /* Get CI Relationship list */\n  getCIRelationTypeList(): void {\n    this.commonSevice.updateLoaderStatus(true);\n    this.citypeService.getRelationShipTypeList().subscribe(data => {\n      this.relationtypelist = data;\n      this.commonSevice.updateLoaderStatus(false);\n    }, err => {\n      this.commonSevice.updateLoaderStatus(false);\n      this.toastService.error(err.error.message);\n    });\n  }\n  /* Add new CI Relationship */\n  addCIRelationShipType(): void {\n    this.relationTypeForm.reset();\n    this.getCIHeaderData();\n    this.submitted = false;\n    this.displayModal = true;\n    this.isedit = false;\n  }\n\n  /* Delete CI Relationship */\n  deleteRow(data): any {\n    const sourceCIId = data.sourceCITypeId\n    this.confirmationService.confirm({\n      message: 'Are you sure Want to Delete CI Relationship Type?',\n      header: 'Confirmation',\n      icon: 'fa fa-question-circle',\n\n      accept: () => {\n        this.commonSevice.updateLoaderStatus(true);\n        this.citypeService.deleteCIRelationShipType(data.id).subscribe(data => {\n          this.toastService.success(data.message);\n          this.commonSevice.updateLoaderStatus(false);\n          if (this.getCIid) {\n            this.editCIRelationship(this.getCIid);\n          } else {\n            this.editCIRelationship(sourceCIId);\n          }\n        }, err => {\n          this.commonSevice.updateLoaderStatus(false);\n          this.toastService.error(err.error.message);\n          this.commonSevice.updateLoaderStatus(false);\n        });\n      },\n      reject: () => {\n      },\n      acceptLabel: 'Yes'\n    });\n  }\n  //Cancel button handling\n  cancelRelationTypeForm(): void {\n    this.submitted = false;\n    this.displayModal = false;\n    this.relationTypeForm.reset();\n  }\n/* Get CI Details Data */\n  getCIHeaderData(): void {\n    this.commonSevice.CiHeaderData.subscribe(data => {\n      this.relationTypeForm.get('sourceCItype').setValue(data.ciTypeName);\n      this.relationTypeForm.get('ciTypeId').setValue(data.ciId);\n      this.ciTypeName = data.ciTypeName;\n      this.parentCIName = data.parentCIName;\n    });\n  }\n/* Edit CI Relationship */\n  editCIRelationship(ciId) {\n    this.commonSevice.updateLoaderStatus(true);\n    this.citypeService.getCIRelationship(ciId).subscribe(data => {\n      this.commonSevice.updateLoaderStatus(false);\n      this.relationtypelist = data;\n      const relatedCI = data.map((map) => {\n        this.relatedCIType.push(map.relatedCIType);\n        this.relatedCIType = this.relatedCIType.filter((el, i, a) => i === a.indexOf(el))\n        // console.log(map.relatedCIType);\n        \n      });\n      this.relatedCIType = [];\n      // const relatedCI = data.map((map) => {\n      //   this.relatedCIType.push(map.relatedCIType);\n      //   this.relatedCIType = this.relatedCIType.filter((el, i, a) => i === a.indexOf(el));\n      // });\n      this.getRelatedCIList(); \n    });\n  }\n}\n","<div class=\"margin-adjust-field\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-8 p-lg-8 padding-adjustment-field\">\n            <h6><span style=\"font-weight: 600;\">CI Type </span>: {{ciTypeName}} <span style=\"padding-left: 4rem;font-weight: 600;\">Parent CI Type : </span> {{parentCIName}}</h6>\n        </div>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-field\">\n            <div style=\"float: right;\">\n                <h6 class=\"btn-relationship-type\" style=\"cursor: pointer;\" (click)=\"addCIRelationShipType()\">Add Relationship\n                </h6>\n            </div>\n            <p-dialog header=\"Add Relationship\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: '27vw'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n                <form [formGroup]=\"relationTypeForm\" (ngSubmit)=\"submitRelationTypes()\">\n                    <div class=\"p-grid\">\n                        <input formControlName=\"id\" hidden>\n                        <input formControlName=\"ciTypeId\" hidden>\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <h4 class=\"first relationship-name-color\">Source CI Type<sup style=\"color: red\">*</sup></h4>\n                            <input id=\"input\" type=\"text\" formControlName=\"sourceCItype\" [readonly]=\"true\" style=\"background-color: #e4e4e4;\" [ngClass]=\"{ 'is-invalid': submitted && fval.sourceCItype.errors }\" size=\"30\" class=\"border-input width-adjust-input\" pInputText>\n                            <div *ngIf=\"submitted && fval.sourceCItype.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"fval.sourceCItype.errors.required\">\n                                    Source CI Type is Required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <h4 class=\"first relationship-name-color\">Relationship Type<sup style=\"color: red\">*</sup>\n                            </h4>\n                            <p-dropdown [options]=\"relationshipList\" formControlName=\"relationshipType\" [ngClass]=\"{ 'is-invalid': submitted && fval.relationshipType.errors }\" placeholder=\"Select Relationship Type\" optionLabel=\"name\" class=\"border-input\" filter=\"true\">\n                            </p-dropdown>\n                            <div *ngIf=\"submitted && fval.relationshipType.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"fval.relationshipType.errors.required\">\n                                    Relationship Type is Required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <h4 class=\"first relationship-name-color\">Related CI Type<sup style=\"color: red\">*</sup>\n                            </h4>\n                            <p-dropdown [options]=\"relatedciList\" formControlName=\"relatedCItype\" [ngClass]=\"{ 'is-invalid': submitted && fval.relatedCItype.errors }\" placeholder=\"Select Related CI Type\" optionLabel=\"name\" class=\"border-input\" filter=\"true\">\n                            </p-dropdown>\n                            <div *ngIf=\"submitted && fval.relatedCItype.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"fval.relatedCItype.errors.required\">\n                                    Related CI Type is Required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <h4 class=\"first relationship-name-color\">Cardinality<sup style=\"color: red\">*</sup></h4>\n                            <p-dropdown [options]=\"cardinalityList\" formControlName=\"cardinality\" [ngClass]=\"{ 'is-invalid': submitted && fval.cardinality.errors }\" placeholder=\"Select Cardinality\" optionLabel=\"name\" class=\"border-input\" filter=\"true\"></p-dropdown>\n                            <div *ngIf=\"submitted && fval.cardinality.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"fval.cardinality.errors.required\">\n                                    Cardinality is Required\n                                </div>\n                            </div>\n                        </div>\n                        <p-footer>\n                            <div class=\"p-col-12 p-md-12 p-lg-12\">\n                                <div class=\"\">\n                                    <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                                    <button type=\"button\" (click)=\"cancelRelationTypeForm()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n                                </div>\n                            </div>\n                        </p-footer>\n                    </div>\n                </form>\n            </p-dialog>\n        </div>\n    </div>\n    <div class=\"div-relationship\">\n        <p style=\"border-bottom: 1px solid #cdcdcd;\"></p>\n        <br>\n        <p-table #dt [columns]=\"cols\" [value]=\"relationtypelist\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[5,10,20, { showAll: 'All' }]\" [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [resizableColumns]=\"false\" selectionMode=\"single\" [(selection)]=\"selectedRelation\" [reorderableColumns]=\"true\" (onRowSelect)=\"onRowSelect($event)\">\n            <ng-template pTemplate=\"header\" let-columns>\n                <tr>\n                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\">\n                        {{col.header}}\n                    </th>\n                    <th>Actions</th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n                <tr [pSelectableRow]=\"rowData\">\n                    <td *ngFor=\"let col of columns\">\n                        {{rowData[col.field]}}\n                    </td>\n                    <td>\n                        <button type=\"button\" (click)=\"deleteRow(rowData,rowIndex)\" pButton icon=\"pi pi-trash\" class=\"ui-button-danger ui-delete-custom\" title=\"Delete\"></button>\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-rowData let-columns=\"columns\">\n                <tr>\n                    <td colspan=\"4\" class=\"center-norecords\">No Records found.</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\" let-state>\n                Show per page:\n            </ng-template>\n        </p-table>\n\n    </div>\n    <p-confirmDialog acceptLabel=\"Yes\" acceptButtonStyleClass=\"acceptYes\" rejectButtonStyleClass=\"rejectbtn\" rejectLabel=\"No\"></p-confirmDialog>\n</div>","import { Component, OnInit } from '@angular/core'\nimport { CommonService } from 'src/app/cmdb-common/services/common.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-citype',\n  templateUrl: './citype.component.html',\n  styleUrls: ['./citype.component.css']\n\n})\nexport class CitypeComponent implements OnInit {\n  ciTypeName: any;\n  ciId: any;\n  index: any = 0;\n  tabshow: boolean = false;\n  displayModalTab: boolean = false;\n  isNewFieldDrop: boolean = false;\n  tempIndex: any;\n  currentIndex: any;\n\n  constructor(private commonSevice: CommonService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.ciId = params['ciId'];\n    });\n    this.getCIHeaderData();\n\n  }\n  fieldSave() {\n\n  }\n  filedCancel() {\n    this.index = 2;\n  }\n  fieldDiscard() {\n    // alert(\"Discard\");\n  }\n\n  getNewFieldAdd($event) {\n    this.isNewFieldDrop = $event;\n  }\n  ciDetailstab($event) {\n    if ($event.index != 1) {\n      // this.displayModalTab=this.isNewFieldDrop;\n    }\n    this.currentIndex = 2;\n  }\n  gotocitypeList(): void {\n    this.router.navigate(['configuration/citypelist']);\n  }\n  getCIHeaderData(): void {\n    this.commonSevice.CiHeaderData.subscribe(data => {\n      this.ciTypeName = data.ciTypeName;\n      this.ciId = data.ciId;\n      if (this.ciId) {\n        this.tabshow = true;\n      }\n\n    });\n  }\n  getSaveImages($event): void {\n    // console.log($event);\n  }\n\n  getTabIndex($event): void {\n    this.index = $event;\n\n  }\n}\n","<div class=\"p-grid\">\n    <div class=\"p-col-12 p-md-12 p-lg-12 total-padding\">\n        <div class=\"new-ci-padding\">\n            <div class=\"p-grid\">\n                <div class=\"p-col-12 p-md-10 p-lg-10\">\n                    <h4 class=\"color-relationship-types\" *ngIf=\"ciTypeName; else elseBlock\">{{ciTypeName}}</h4>\n                    <ng-template #elseBlock>\n                        <h4 class=\"color-relationship-types\">New CI Type</h4>\n                    </ng-template>\n\n                </div>\n                <div class=\"p-col-12 p-md-2 p-lg-2 padding-alignment\">\n                    <button type=\"button\" (click)=\"gotocitypeList()\" class=\"btn btn-default btn-goback\"><i\n                     class=\"pi pi-chevron-left piplus-icon\"></i>&nbsp;&nbsp;Go Back</button>\n                </div>\n            </div>\n            <p class=\"border-color-bottom\"></p>\n            <div>\n                <div class=\"p-grid\">\n\n                    <div class=\"p-col-12 p-md-12 p-lg-12 padding-alignment-table\">\n                        <div class=\"padding-tab-view\">\n\n                            <p-tabView [activeIndex]=\"index\" (onChange)=\"ciDetailstab($event)\">\n                                <p-tabPanel header=\"CI Details\" headerStyleClass=\"cidetail-image\">\n                                    <app-ci-header-details (getTabIndexValue)=\"getTabIndex($event)\" (saveImage)=\"getSaveImages($event)\"></app-ci-header-details>\n                                </p-tabPanel>\n                                <p-tabPanel header=\"Fields\" [disabled]=\"!tabshow\" headerStyleClass=\"ci-fields-image\">\n                                    <app-ci-fields (newFieldEmitter)=\"getNewFieldAdd($event)\"></app-ci-fields>\n                                </p-tabPanel>\n                                <p-tabPanel *ngIf=\"ciId!==1\" [disabled]=\"!tabshow\" header=\"Relationship\" headerStyleClass=\"ci-relationship-image\">\n                                    <app-ci-relationship-details></app-ci-relationship-details>\n                                </p-tabPanel>\n                            </p-tabView>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<p-dialog header=\"Save  Template\" [(visible)]=\"displayModalTab\" [modal]=\"true\" [style]=\"{width: '50vw'}\">\n    <div class=\"p-col-12 p-md-12 p-lg-12\">\n        <p>Do you want to save the changes?</p>\n        <div class=\"save-btn-resp\">\n            <button (click)=\"fieldSave()\" type=\"button\" class=\"btn btn-default btn-resp-btn\">Save</button>\n            <button (click)=\"fieldDiscard()\" type=\"button\" class=\"btn btn-default btn-resp-btn\">Discard</button>\n            <button (click)=\"filedCancel()\" type=\"button\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n        </div>\n    </div>\n</p-dialog>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RelationtypeService } from '../../services/relationtype.service';\nimport { ToastService } from '../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../cmdb-common/services/common.service';\nimport { ConfirmationService } from 'primeng/api';\n\n\n@Component({\n  selector: 'app-relationtype',\n  templateUrl: './relationtype.component.html',\n  styleUrls: ['./relationtype.component.css'],\n  providers: [ConfirmationService]\n})\nexport class RelationtypeComponent implements OnInit {\n\n\n  relationtypelist: any;\n  relationTypeForm: FormGroup;\n  cols: any;\n  submitted = false;\n  displayModal: boolean;\n  isedit: boolean;\n  errormsg: any;\n  errorMsgDiv: boolean;\n\n  constructor(private relationTypeService: RelationtypeService,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private toastService: ToastService,\n    private commonSevice: CommonService\n  ) { }\n\n  ngOnInit(): void {\n    this.relationTypeForm = this.formBuilder.group({\n      id: [''],\n      relationShipName: ['', Validators.required],\n      inverseRelationShipName: ['', Validators.required],\n      description: ['']\n    });\n\n    this.cols = [\n      { field: 'relationShipName', header: 'Relationship Name', width: '20%' },\n      { field: 'inverseRelationShipName', header: 'Inverse Relationship Name', width: '25%' },\n      { field: 'description', header: 'Description', width: '40%' },\n    ];\n    this.getRelationTypeList();\n    \n  }\n  get fval(): any {\n    return this.relationTypeForm.controls;\n  }\n  /* Save Relationship Type */\n  submitRelationTypes(): void {\n    this.submitted = true;\n    if (this.submitted && this.relationTypeForm.valid) {\n      this.commonSevice.updateLoaderStatus(true);\n      const requestData = { ...this.relationTypeForm.value }\n      requestData.createdBy = 1;\n      requestData.status = 'Y';\n      requestData.relationShipName = (requestData.relationShipName).trim();\n      requestData.inverseRelationShipName = (requestData.inverseRelationShipName).trim();\n      if (this.isedit) {\n        requestData.modifiedBy = 1;\n      }\n      this.relationTypeService.createRelationType(requestData).subscribe((data: any) => {\n\n        this.getRelationTypeList();\n        this.displayModal = false;\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.success(data.message);\n      }, err => {\n        if (err.error.code == 401) {\n          this.commonSevice.updateLoaderStatus(false);\n          this.displayModal = true;\n          this.errorMsgDiv = true;\n          this.errormsg = err.error.message;\n        } else {\n          this.displayModal = false;\n          this.commonSevice.updateLoaderStatus(false);\n          this.toastService.error(err.error.message);\n        }\n      });\n    }\n  }\n/* Get Relationship Type list */\n  getRelationTypeList(): void {\n    this.commonSevice.updateLoaderStatus(true);\n    this.relationTypeService.getRelationShipTypeList().subscribe(data => {\n      this.relationtypelist = data;\n      this.commonSevice.updateLoaderStatus(false);\n    }, err => {\n      this.commonSevice.updateLoaderStatus(false);\n      this.toastService.error(err.error.message);\n    });\n  }\n  /* Create new Relationship Type*/\n  addRelationShipType(): void {\n    this.relationTypeForm.reset();\n    this.submitted = false;\n    this.displayModal = true;\n    this.isedit = false;\n  }\n/*Edit Relationship Type*/\n  editRow(data): void {\n    this.displayModal = true;\n    this.isedit = true;\n    this.relationTypeForm.patchValue({\n      id: data.id,\n      relationShipName: data.relationShipName,\n      inverseRelationShipName: data.inverseRelationShipName,\n      description: data.description\n    });\n  }\n  //Delete click handling\n  deleteRow(data): any {\n    this.confirmationService.confirm({\n      message: 'Are you sure Want to Delete Relationship Type?',\n      header: 'Confirmation',\n      icon: 'fa fa-question-circle',\n\n      accept: () => {\n\n        this.relationTypeService.deleteRelationShipType(data.id).subscribe(data => {\n          this.toastService.success(data.message);\n          this.getRelationTypeList();\n        }, err => {\n          this.commonSevice.updateLoaderStatus(false);\n          this.toastService.error(err.error.message);\n        });\n      },\n      reject: () => {\n\n      },\n      acceptLabel: 'Yes'\n\n    });\n    window.scrollTo(0, 0);\n  }\n  //Cancel button handling\n  cancelRelationTypeForm(): void {\n    this.submitted = false;\n    this.displayModal = false;\n    this.errorMsgDiv = false;\n    this.relationTypeForm.reset();\n  }\n  \n}\n","<div class=\"relation-content\">\n\n    <div class=\"p-grid\">\n\n        <div class=\"p-col-12 p-md-10 p-lg-10\">\n            <h4 class=\"color-relationship-types\">Relationship Types</h4>\n        </div>\n        <div class=\"p-col-12 p-md-2 p-lg-2\">\n\n            <button type=\"button\" (click)=\"addRelationShipType()\" class=\"btn btn-default btn-create-new\"><i\n          class=\"pi pi-plus pi-icon-plus\"></i>&nbsp;Create</button>\n\n        </div>\n    </div>\n\n    <p class=\"border-color-bottom\"></p>\n    <div class=\"p-col-12 p-md-12 p-lg-12 padding-alignment\">\n        <!-- <p class=\"heading-relationship\">Relationship List View</p> -->\n        <p-table #dt [columns]=\"cols\" [value]=\"relationtypelist\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[5,10,20, { showAll: 'All' }]\" [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\n            <ng-template pTemplate=\"caption\">\n                <div class=\"global-search-alignment\">\n                    <input type=\"text\" pInputText size=\"50\" class=\"search-filter-global\" placeholder=\"Search by keywords\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\">\n                    <!-- <span class=\"material-icons pi-class-resp\">developer_board</span> -->\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n                <tr>\n                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\">\n                        {{col.header}}\n                    </th>\n                    <th>Actions</th>\n\n                </tr>\n\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-i=\"rowIndex\" let-columns=\"columns\">\n                <tr>\n                    <td *ngFor=\"let col of columns\">\n                        {{rowData[col.field]}}\n                    </td>\n                    <td> <button type=\"button\" (click)=\"editRow(rowData)\" class=\"ui-button-info ui-edit-custom\" class=\"pipencil-icon\" title=\"Edit\"><img src=\"assets/table-icon/edit-btn.svg\"></button>\n                        <button type=\"button\" (click)=\"deleteRow(rowData,rowIndex)\" class=\"ui-button-danger ui-delete-custom delete-icon\" title=\"Delete\"><img\n                src=\"assets/table-icon/delete-btn.svg\"></button> </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-rowData let-columns=\"columns\">\n                <tr>\n                    <td colspan=\"4\" class=\"center-norecords\">No Records found.</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\" let-state>\n                Show per page:\n            </ng-template>\n        </p-table>\n\n    </div>\n</div>\n<p-dialog header=\"Relationship Type\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: 'auto'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n    <form [formGroup]=\"relationTypeForm\" (ngSubmit)=\"submitRelationTypes()\">\n        <div>\n            <h4 class=\"first relationship-name-color\">Relationship Name<sup class=\"mandatory-color\">*</sup></h4>\n            <input id=\"relationShipId\" formControlName=\"id\" hidden>\n            <input id=\"relationShipType\" oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" formControlName=\"relationShipName\" [ngClass]=\"{ 'is-invalid': submitted && fval.relationShipName.errors }\" type=\"text\" size=\"30\" class=\"border-input\"\n                placeholder=\"Relationship Name\" pInputText>\n            <div *ngIf=\"submitted && fval.relationShipName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"fval.relationShipName.errors.required\">\n                    Relationship Name is Required\n                </div>\n            </div>\n        </div>\n        <div class=\"res-padding-input\">\n            <h4 class=\"first relationship-name-color\">Inverse Relationship Name<sup class=\"mandatory-color\">*</sup></h4>\n            <input id=\"inverseRelationshipName\" oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" type=\"text\" size=\"30\" formControlName=\"inverseRelationShipName\" [ngClass]=\"{ 'is-invalid': submitted && fval.inverseRelationShipName.errors }\"\n                class=\"border-input\" placeholder=\"Inverse Relationship Name\" pInputText>\n            <div *ngIf=\"submitted && fval.inverseRelationShipName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"fval.inverseRelationShipName.errors.required\">\n                    Inverse Relationship Name is Required\n                </div>\n            </div>\n        </div>\n        <div class=\"res-padding-input\">\n            <h4 class=\"first relationship-name-color\">Description</h4>\n            <textarea id=\"relationShipDescription\" rows=\"5\" cols=\"30\" formControlName=\"description\" pInputTextarea class=\"description-textarea\"></textarea>\n        </div>\n        <div class='alert alert-danger checkboxerror' *ngIf=\"errorMsgDiv\">\n            {{errormsg}}\n        </div>\n        <p-footer>\n            <div class=\"save-btn-resp\">\n                <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                <button type=\"button\" (click)=\"cancelRelationTypeForm()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n            </div>\n        </p-footer>\n    </form>\n</p-dialog>\n<p-confirmDialog acceptLabel=\"Yes\" acceptButtonStyleClass=\"acceptYes\" rejectLabel=\"No\" rejectButtonStyleClass=\"rejectbtn\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\nimport { ServicetypeService } from '../../services/servicetype.service'\nimport { TreeNode } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/api';\nimport { ToastService } from '../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../cmdb-common/services/common.service';\nimport { newUrl } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-servicetype-list',\n  templateUrl: './servicetype-list.component.html',\n  styleUrls: ['./servicetype-list.component.css'],\n  providers: [ConfirmationService]\n})\nexport class ServicetypeListComponent implements OnInit {\n  serviceListViewForm: FormGroup;\n  servicetypelist: any;\n  displayModal: boolean;\n  isedit: boolean;\n  cols: any;\n  pathUrl: any;\n  isexapand: boolean = false;\n  constructor(private servicetypeservice: ServicetypeService, private router: Router,\n    private confirmationService: ConfirmationService, private toastService: ToastService,\n    private commonSevice: CommonService) { }\n\n  ngOnInit(): void {\n    this.pathUrl = newUrl;\n    this.cols = [\n      { field: 'serviceTypeName', subField: 'imageLocation', subField1: 'icon', header: 'Service Type Name', width: '25%'  },\n      { field: 'description', header: 'Description', width: '60%' }\n\n    ];\n    this.getServiceTypeList();\n  }\n  /* navigate  Service Type*/\n  gotoServicetypeDetails() {\n    this.router.navigate(['configuration/servicetype']);\n  }\n\n  /* Get Service Tpe List */\n  getServiceTypeList() {\n    this.commonSevice.updateLoaderStatus(true);\n    this.servicetypeservice.getServicetypeList().subscribe(data => {\n      this.commonSevice.updateLoaderStatus(false);\n      this.servicetypelist = data;\n      this.servicetypelist.forEach(node => {\n        this.expandRecursive(node, true);\n      });\n\n      this.servicetypelist = [...this.servicetypelist]\n    });\n  }\n  /* Expand and Collapse button handling*/\n  exapandORcollapse() {\n    this.isexapand = !this.isexapand;\n    this.servicetypelist.forEach(node => {\n      if (this.isexapand == true) {\n        this.expandRecursive1(node, this.isexapand);\n      } else {\n        this.expandRecursive(node, true);\n      }\n    });\n    this.servicetypelist = [...this.servicetypelist]\n  }\n\n  private expandRecursive(node: TreeNode, isExpand: boolean) {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandRecursive(childNode, false);\n      });\n    }\n  }\n  private expandRecursive1(node: TreeNode, isExpand: boolean) {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  /* Delete Service Type */\n  deleteRow(data, i): any {\n    this.confirmationService.confirm({\n      message: 'Are you sure Want to Delete Service Type?',\n      header: 'Confirmation',\n      icon: 'fa fa-question-circle',\n      accept: () => {\n        this.commonSevice.updateLoaderStatus(true);\n        this.servicetypeservice.deleteServicetypeList(data.id).subscribe(data => {\n          this.toastService.success(data.message);\n          this.commonSevice.updateLoaderStatus(true);\n          this.getServiceTypeList();\n        }, err => {\n          this.toastService.error(err.error.message);\n          this.commonSevice.updateLoaderStatus(false);\n        });\n\n      },\n      reject: () => {\n\n      },\n      acceptLabel: 'Yes'\n    });\n  }\n  /* navigate To Edit Service Page*/\n  editRow(data): void {\n    this.router.navigate(['configuration/servicetype'], { queryParams: { siId: data.id } });\n  }\n\n  /* Create new child */\n  createNewChild(data): void {\n    const sourceSIval = {\n      parentSITypeId: data.id,\n      parentSIName: data.serviceTypeName,\n    }\n    this.commonSevice.updateSIDetailInfo(sourceSIval);\n    this.router.navigate(['configuration/servicetype']);\n\n  }\n}\n","<div class=\"relation-content\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-8 p-lg-8 padding-adjustment\">\n            <h4 class=\"color-relationship-types\">Service Types</h4>\n        </div>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment\">\n            <div class=\"expand-btn-right\">\n                <button type=\"button\" (click)=\"exapandORcollapse()\" class=\"btn btn-default btn-expand-style\">Expand /\n          Collapse</button>\n                <button type=\"button\" (click)=\"gotoServicetypeDetails()\" class=\"btn btn-default btn-expand-style left-alignment\"><i class=\"pi pi-plus\"\n            style=\"font-size: 14px;\"></i>&nbsp;&nbsp;Create</button>\n            </div>\n        </div>\n    </div>\n    <p class=\"border-color-bottom\"></p>\n    <div class=\"p-col-12 p-md-12 p-lg-12 padding-list-view\">\n        <p-treeTable [value]=\"servicetypelist\">\n            <ng-template pTemplate=\"header\" let-columns>\n                <tr>\n                    <th *ngFor=\"let col of cols\" [ngStyle]=\"{'width': col.width}\"> {{col.header}}</th>\n                    <th>Actions</th>\n                </tr>\n            </ng-template>\n            <ng-template class=\"border-left-bottom\" pTemplate=\"body\" let-rowNode let-index let-rowData=\"rowData\">\n                <tr>\n                    <td *ngFor=\"let col of cols; let i = index\">\n                        <p-treeTableToggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></p-treeTableToggler>\n                        <div *ngIf=\"rowData[col.subField] == null;then content else other_content\"></div>\n                        <ng-template #content>\n                            <img src=\"assets/computer.png\" style=\"width: 19px;height: 22px\" *ngIf=\"i == 0\">\n                        </ng-template>\n                        <ng-template #other_content>\n                            <div *ngIf=\"rowData[col.subField1]== 'import';then importimg else selectimg\"></div>\n                            <ng-template #selectimg>\n                                <img src=\"{{rowData[col.subField]}}\" style=\"width: 19px;height: 22px\" *ngIf=\"i == 0\">\n                            </ng-template>\n                            <ng-template #importimg>\n                                <img src=\"{{pathUrl}}{{rowData[col.subField]}}\" style=\"width: 19px;height: 22px\" *ngIf=\"i == 0\">\n                            </ng-template>\n                        </ng-template>\n                        {{rowData[col.field]}}\n                    </td>\n                    <td>\n                        <!-- <button type=\"button\"  \n            class=\"ui-button-default pi-plus-icon\"(click)=\"createNewChild(rowData)\"><i class=\"pi pi-plus iconsize\"></i></button> -->\n                        <button type=\"button\" class=\"ui-button-default pi-plus-icon\" (click)=\"createNewChild(rowData)\" title=\"Create\"><i class=\" pi pi-plus iconsize \"></i></button>\n                        <button type=\"button \" style=\" margin-right: 10px; \" class=\"ui-button-info ui-edit-custom \" (click)=\"editRow(rowData) \" class=\"pipencil-icon \" title=\"Edit\"><img src=\"assets/table-icon/edit-btn.svg \"></button>\n                        <button type=\"button \" *ngIf=\"index.node.data.id !==1 \" (click)=\"deleteRow(rowData,rowIndex) \" class=\"ui-button-danger ui-delete-custom delete-icon \" title=\"Delete\"><img\n                src=\"assets/table-icon/delete-btn.svg \"></button>\n\n                    </td>\n                </tr>\n            </ng-template>\n        </p-treeTable>\n    </div>\n</div>\n\n<p-confirmDialog acceptLabel=\"Yes \" acceptButtonStyleClass=\"acceptYes \" rejectButtonStyleClass=\"rejectbtn \" rejectLabel=\"No \"></p-confirmDialog>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ServicetypeService } from '../../../services/servicetype.service';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-servicetype-add-fields',\n  templateUrl: './servicetype-add-fields.component.html',\n  styleUrls: ['./servicetype-add-fields.component.css']\n})\nexport class ServicetypeAddFieldsComponent implements OnInit {\n  @Output() getDragInputControl: EventEmitter<any> = new EventEmitter();\n  div1: boolean = true;\n  div2: boolean = false;\n  div3: boolean = true;\n  div4: boolean = false;\n  tab: any = 'tab1';\n  tab1: any;\n  tab2: any;\n  tab3: any;\n  Clicked: boolean;\n  inputControlList: any;\n  siTypeName: any;\n  parentSIName: any;\n  getsiId: any;\n  constructor(private sitypeService: ServicetypeService,\n    private commonSevice: CommonService,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.getFormInputList();\n    this.route.queryParams.subscribe(params => {\n      this.getsiId = params['siId'];\n    });\n    // if (this.getciId) {\n    this.getSIHeaderData();\n    // }\n  }\n\n  getSIHeaderData(): void {\n    this.commonSevice.siHeaderData.subscribe(data => {\n      this.siTypeName = data.serviceTypeName;\n      this.parentSIName = data.parentServiceTypeName;\n\n    });\n  }\n  getFormInputList(): void {\n    this.sitypeService.getFormInputTypeList().subscribe(data => {\n      this.inputControlList = data;\n    });\n  }\n  div1Function(check): void {\n    this.div1 = true;\n    this.div2 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n\n  }\n\n  div2Function(check): void {\n    this.div2 = true;\n    this.div1 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n\n  }\n\n  div3Function(check): void {\n    this.div3 = true;\n    this.div4 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n\n  }\n\n  div4Function(check): void {\n    this.div4 = true;\n    this.div3 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n  }\n\n  dragStart(e, currentinputs): void {\n    this.getDragInputControl.emit(currentinputs);\n\n  }\n\n  dragEnd(e): void {\n\n  }\n}\n","<div class=\"ci-bg-details\">\n    <h6 class=\"ci-detail-heading\">SI Details</h6>\n</div>\n<div class=\"ci-content-bg\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-6 p-lg-6\">\n            <span class=\"span-ci-type-heading\">SI Type</span>\n            <h6 class=\"ci-name-css\">{{siTypeName}}</h6>\n        </div>\n        <div class=\"p-col-12 p-md-6 p-lg-6\" *ngIf=\"getsiId!=1\">\n            <span class=\"span-ci-type-heading\">Parent SI Type</span>\n            <h6 class=\"ci-name-css\">{{parentSIName}}</h6>\n        </div>\n    </div>\n</div>\n<div class=\"ci-bg-details\">\n    <h6 class=\"ci-detail-heading\">Drag and Drop Fields </h6>\n</div>\n<div class=\"ci-content-bg\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-12 p-lg-12\">\n            <button type=\"button\" (click)=\"div1Function(1)\" [ngClass]=\"{'active-new': tab==='tab1','normal-div': tab==='tab2'}\">New Fields</button>\n            <div *ngIf=\"div1\">\n                <div class=\"p-grid\">\n                    <div *ngFor=\"let inputcontrols of inputControlList\" pDraggable=\"dropedInputs\" (onDragStart)=\"dragStart($event,inputcontrols)\" (onDragEnd)=\"dragEnd($event)\" class=\"p-col-12 p-md-6 p-lg-6\">\n                        <div class=\"border\" title=\"{{inputcontrols.name}}\"><img src=\"{{inputcontrols.fieldIcon}}\" class=\"drag-icon-field\">{{inputcontrols.name}}</div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'src/app/cmdb-common/services/toast.service';\nimport { CommonService } from 'src/app/cmdb-common/services/common.service';\nimport { ServicetypeService } from '../../../services/servicetype.service';\n\n@Component({\n  selector: 'app-servicetype-fields',\n  templateUrl: './servicetype-fields.component.html',\n  styleUrls: ['./servicetype-fields.component.css']\n})\nexport class ServicetypeFieldsComponent implements OnInit {\n  @Output() newFieldEmitter = new EventEmitter<any>();\n  displayModalfields: boolean;\n  Clicked: boolean;\n  dropedInputs: any;\n  getDragInput: any;\n  inputControlForm: FormGroup;\n  submitted = false;\n  fullformData: Array<any> = [];\n  fieldList:any = [];\n  fieldLength:any = [];\n  siTypeName: any;\n  siId: any;\n  parentFormData: any;\n  isFieldEdit: boolean;\n  currentFieldIndex: any;\n  siHierarchy: any;\n  siTypeFormId: any;\n  currentDate: any;\n  getsiId: any;\n  isNewFormFieldAdd: boolean = false;\n  freezeBtn: any;\n  parentFormJsonData: any;\n  parentDataobj:Array<any>=[];\n  fieldval:any;\n  constructor(private formBuilder: FormBuilder,\n    private commonSevice: CommonService,\n    private sitypeService: ServicetypeService,\n    private toastService: ToastService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.inputControlForm = this.formBuilder.group({\n      fieldName: ['', [Validators.required]],\n      fieldKey: ['', Validators.required],\n      fieldType: [''],\n      minValue: ['', Validators.pattern('^[0-9]*$')],\n      maxValue: ['', Validators.pattern('^[0-9]*$')],\n      phValue: [''],\n      description: [''],\n      defaultOption: [''],\n    });\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n    this.route.queryParams.subscribe(params => {\n      this.getsiId = params['siId'];\n    });\n    //if (this.getciId) {\n    this.getSIHeaderData();\n    // }\n    this.inputControlForm.get('fieldName').valueChanges.subscribe(data => this.inputControlForm.get('fieldKey').setValue(data))\n\n  }\n\n\n  /* getOption(index): void {\n     this.formArraySelect.controls[index].get('optionKey').valueChanges.subscribe(\n       data => this.formArraySelect.controls[index].get('optionValue').setValue(data));\n \n   }*/\n  getSIHeaderData(): void {\n    this.commonSevice.siHeaderData.subscribe(data => {\n      this.siTypeName = data.serviceTypeName;\n      this.siId = data.siId;\n      this.siHierarchy = data.hierarchy;\n\n      this.getFormSIParentJSon(this.siId, this.siHierarchy);\n    });\n  }\n\n  get fval(): any {\n    return this.inputControlForm.controls;\n  }\n  getDragInputs(event): any {\n    // this.getDragInput={};\n    this.getDragInput = event;\n\n\n  }\n\n  drop(e): any {\n    this.isFieldEdit = false;\n    this.displayModalfields = true;\n    this.submitted = false;\n    this.setValuePopup();\n  }\n\n  setValuePopup(): void {\n    this.inputControlForm.reset();\n    if (this.getDragInput) {\n      this.inputControlForm.get('fieldType').setValue(this.getDragInput.name);\n      if(this.getDragInput.filedType === 'text'){\n      if (this.getDragInput.multiline) {\n        this.inputControlForm.get('minValue').setValue(0);\n        this.inputControlForm.get('maxValue').setValue(4000);\n      } else {\n        this.inputControlForm.get('minValue').setValue(0);\n        this.inputControlForm.get('maxValue').setValue(250);\n      }\n    }\n    }\n\n    if (this.getDragInput.fieldType === 'select' || this.getDragInput.fieldType === 'multiselect' || this.getDragInput.fieldType === 'radio' || this.getDragInput.fieldType === 'checkbox') {\n      this.inputControlForm.setControl('options', this.formBuilder.array([]));\n      this.addOptions();\n      if (this.getDragInput.fieldType != 'multiselect') {\n        this.inputControlForm.get('defaultOption').setValue(0);\n      }\n\n    }\n  }\n  get formArraySelect(): FormArray {\n    return this.inputControlForm.get('options') as FormArray;\n  }\n\n  removeOptions(index): void {\n    this.formArraySelect.controls.splice(index, 1);\n  }\n  addOptions(): void {\n    this.formArraySelect.push(this.formBuilder.group({\n      // optionKey: ['', Validators.required],\n      optionValue: ['', Validators.required]\n\n    }));\n  }\n  /* Drag and Drop  all field save local */\n  submitInputControl(): void {\n    console.log(this.formArraySelect);\n    this.submitted = true;\n    const fldname = this.inputControlForm.get('fieldName').value;\n    const fldkey = this.inputControlForm.get('fieldKey').value;\n\n    if (this.fullformData) {\n      const fieldNameExt = this.fullformData.findIndex(data => data.fieldName.toLowerCase() === fldname.toLowerCase());\n      const fieldKeyExt = this.fullformData.findIndex(data => data.fieldKey.toLowerCase() === fldkey.toLowerCase());\n      if (fieldNameExt !== -1) {\n        this.inputControlForm.get('fieldName').setErrors({ fieldname: true });\n      }\n      if (fieldKeyExt !== -1) {\n        this.inputControlForm.get('fieldKey').setErrors({ fieldkey: true });\n      }\n    }\n    if( this.parentFormData){\n      for(let formjson of this.parentFormData){\n        this.parentFormJsonData = formjson.formJson;\n        this.parentDataobj = this.extractFromJson(this.parentFormJsonData);\n        const fieldNameExt = this.parentDataobj.findIndex(data => data.fieldName.toLowerCase() === fldname.toLowerCase());\n        const fieldKeyExt = this.parentDataobj.findIndex(data => data.fieldKey.toLowerCase() === fldkey.toLowerCase());\n        if (fieldNameExt !== -1) {\n          this.inputControlForm.get('fieldName').setErrors({ fieldname: true });\n        }\n        if (fieldKeyExt !== -1) {\n          this.inputControlForm.get('fieldKey').setErrors({ fieldkey: true });\n        }\n       }\n    }\n    if (this.submitted && this.inputControlForm.valid) {\n      this.isNewFormFieldAdd = true;\n      this.newFieldEmitter.emit(true);\n      this.displayModalfields = false;\n      console.log(this.inputControlForm.value);\n      this.updateDroppedItem(this.inputControlForm.value);\n    }\n  }\n  /* Drag  Form value push to all Form field*/\n  updateDroppedItem(e: any): void {\n    this.getDragInput.fieldName = e.fieldName;\n    this.getDragInput.fieldKey = e.fieldKey;\n    this.getDragInput.minValue = (e.minValue) ? e.minValue : 0;\n    this.getDragInput.maxValue = (e.maxValue) ? e.maxValue : 250;\n    this.getDragInput.phValue = (e.phValue) ? e.phValue : '';\n    this.getDragInput.description = (e.description) ? e.description : '';\n    this.getDragInput.defaultOption = e.defaultOption;\n    this.getDragInput.options = (e.options) ? e.options : [];\n    if (this.isFieldEdit) {\n      this.fullformData.splice(this.currentFieldIndex, 0, this.getDragInput);\n      //this.fullformData[this.currentFieldIndex] = this.getDragInput;\n      this.isFieldEdit = false;\n    } else {\n      const formFields = Object.assign({}, this.getDragInput);\n      this.fullformData.push(formFields);\n    }\n  }\n  /*  Save Json Form Field to Server*/\n  saveJsonFormData(): void {\n    this.commonSevice.updateLoaderStatus(true);\n    const datas = JSON.stringify(this.fullformData);\n    if (this.fullformData) {\n      this.fieldList=[];\n      this.fieldLength=[];\n      this.fullformData.forEach((item, index) => {\n        this.fieldList.push(item.fieldKey);\n        this.fieldval = item.fieldKey;\n        const obj={\n          [this.fieldval] : item.maxValue,\n        }\n        this.fieldLength.push(obj);\n      });\n      const requestData = new FormData();\n      if (!this.siTypeFormId) {\n        requestData.append('createdDate,', this.currentDate);\n      } else {\n        requestData.append('modifiedDate', this.currentDate);\n      }\n      requestData.append('serviceTypeFormId', this.siTypeFormId);\n      requestData.append('createdBy', '1');\n      requestData.append('modifiedBy', '1');\n      requestData.append('serviceTypeDetailId', this.siId);\n      requestData.append('formFields', this.fieldList);\n      requestData.append('fieldLength',JSON.stringify(this.fieldLength));\n      requestData.append('formJson', datas);\n      requestData.append('formElements', '');\n      if(this.freezeBtn ==='yes'){\n        requestData.append('submissionFlag', 'submit');\n      }else{\n        requestData.append('submissionFlag', 'save');\n      }\n      this.sitypeService.saveFormJsonData(requestData).subscribe((data: any) => {\n        this.toastService.success(data.message);\n        this.siTypeFormId = data.serviceTypeFormId;\n        this.freezeBtn = '';\n        this.commonSevice.updateLoaderStatus(false);\n      }, err => {\n        this.toastService.error(err.message);\n        this.commonSevice.updateLoaderStatus(false);\n      });\n    } else {\n      this.commonSevice.updateLoaderStatus(false);\n      this.toastService.error('Drag and Drop Atleast one Field');\n    }\n\n  }\n  freezeField(): void {\n    this.freezeBtn = 'yes';\n    this.saveJsonFormData();\n  }\n  deleteField(i): void {\n    this.fullformData.splice(i, 1);\n  }\n\n  editField(fieldinfo, i): void {\n    this.getDragInput = fieldinfo;\n    this.submitted = false;\n    this.displayModalfields = true;\n    this.setValuePopup();\n    this.isFieldEdit = true;\n    this.fullformData.splice(i, 1);\n    this.currentFieldIndex = i;\n    this.inputControlForm.get('fieldName').setValue(this.getDragInput.fieldName);\n    this.inputControlForm.get('fieldKey').setValue(this.getDragInput.fieldKey);\n    const setminValue = (this.getDragInput.minValue) ? this.getDragInput.minValue : 0;\n    this.inputControlForm.get('minValue').setValue(setminValue);\n    const setmaxValue = (this.getDragInput.maxValue) ? this.getDragInput.maxValue : 250;\n    this.inputControlForm.get('maxValue').setValue(setmaxValue);\n    const setphValue = (this.getDragInput.phValue) ? this.getDragInput.phValue : '';\n    this.inputControlForm.get('phValue').setValue(setphValue);\n    const setDescriptionValue = (this.getDragInput.description) ? this.getDragInput.description : '';\n    this.inputControlForm.get('description').setValue(setDescriptionValue);\n    if (this.getDragInput.fieldType === 'select' || this.getDragInput.fieldType === 'radio' || this.getDragInput.fieldType === 'checkbox') {\n      const optionsValue = this.getDragInput.options.map(option => this.formBuilder.group(option));\n      this.inputControlForm.setControl('options', this.formBuilder.array(optionsValue));\n      this.inputControlForm.get('defaultOption').setValue(this.getDragInput.defaultOption);\n    }\n\n  }\n  /* Form field  Cancel */\n  cancelField(): void {\n    if (this.isFieldEdit) {\n      this.fullformData.splice(this.currentFieldIndex, 0, this.getDragInput);\n      this.isFieldEdit = false;\n    }\n    this.inputControlForm.reset();\n    this.displayModalfields = false;\n    this.submitted = false;\n  }\n  /*  String  to Json convertions*/\n  extractFromJson(obj) {\n    if(obj){\n      obj = JSON.parse(obj);\n      return obj;\n    }\n  }\n  /*  get json list Form Server*/\n  getFormSIParentJSon(sId, shry): void {\n    if (this.siId || this.siHierarchy) {\n      const requestData = {\n        id: (this.siId) ? this.siId : '',\n        hierarchy: (this.siHierarchy) ? this.siHierarchy : ''\n      };\n\n      this.sitypeService.getFormSIParentJSon(requestData).subscribe((data: any) => {\n        this.parentFormData = (data.parentData) ? data.parentData : []\n        if (data.currentData) {\n          this.siTypeFormId = (data.currentData[0].serviceTypeFormId) ? data.currentData[0].serviceTypeFormId : '';\n        } else {\n          this.siTypeFormId = '';\n        }\n        this.fullformData = (data.currentData[0].formJson) ? JSON.parse(data.currentData[0].formJson) : [];\n      });\n    }\n\n  }\n  /* Number validation */\n  numbersOnly(event) {\n    const input = String.fromCharCode(event.keyCode);\n    if (!/^[0-9]*$/.test(input)) {\n      event.preventDefault();\n    }\n  }\n\n\n}\n","<div class=\"margin-adjust-field\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-9 p-lg-9 padding-adjustment-field\">\n            <div>\n\n                <p-accordion *ngIf=\"getsiId!=1\">\n                    <p-accordionTab header=\"Parent Fields\" [selected]=\"false\">\n                        <ng-container *ngIf=\"parentFormData\">\n                            <p-accordion *ngFor=\"let pformData of parentFormData\">\n                                <p-accordionTab header=\"{{pformData.serviceTypeName}}\" [selected]=\"false\">\n                                    <div style=\"padding: 10px;\">\n                                        <div class=\"p-grid\">\n                                            <div class=\"p-col-12 p-md-6 p-lg-6\" *ngFor=\"let formData of  extractFromJson(pformData.formJson)\">\n                                                <div *ngIf=\"formData\" [ngSwitch]=\"formData.fieldType\">\n                                                    <div *ngSwitchCase=\"'text'\">\n                                                        <app-inputbox [item]=\"formData\"></app-inputbox>\n                                                    </div>\n                                                    <div *ngSwitchCase=\"'select'\">\n                                                        <app-selectbox [item]=\"formData\"></app-selectbox>\n                                                    </div>\n                                                    <div *ngSwitchCase=\"'checkbox'\">\n                                                        <app-checkbox [item]=\"formData\"></app-checkbox>\n                                                    </div>\n                                                    <div *ngSwitchCase=\"'radio'\">\n                                                        <app-radio [item]=\"formData\"></app-radio>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </p-accordionTab>\n                            </p-accordion><br>\n                        </ng-container>\n                    </p-accordionTab>\n                </p-accordion>\n                <div class=\"type-file-styling-div\">\n                    <h4 class=\"type-file-h4\">{{siTypeName}}</h4>\n                    <div class=\"p-grid\">\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <div class=\"common-bg-drop\">\n                                <div class=\"drop p-grid\" pDroppable=\"dropedInputs\" (onDrop)=\"drop($event)\">\n\n                                    <div class=\"p-col-12 p-md-6 p-lg-6\" *ngFor=\"let formData of fullformData; let i=index\">\n                                        <div class=\"fielddiv\" *ngIf=\"formData\" [ngSwitch]=\"formData.fieldType\">\n                                            <div class=\"edit-delete-hover\"> <a title=\"edit\" (click)=\"editField(formData,i)\"><i\n                            class=\"pi pi-pencil\"></i></a><a title=\"delete\" (click)=\"deleteField(i)\"><i\n                            class=\"pi pi-trash\"></i></a>\n                                            </div>\n                                            <div *ngSwitchCase=\"'text'\">\n                                                <app-inputbox [item]=\"formData\"></app-inputbox>\n                                            </div>\n                                            <!-- <div *ngSwitchCase=\"'email'\">\n                         \n                          <app-inputbox [item]=\"formData\"></app-inputbox>\n                        </div> -->\n                                            <!-- <div *ngSwitchCase=\"'password'\">\n                         \n                          <app-inputbox [item]=\"formData\"></app-inputbox>\n                        </div> -->\n                                            <div *ngSwitchCase=\"'number'\">\n                          <app-number [item]=\"formData\"></app-number>\n                        </div>\n                                            <div *ngSwitchCase=\"'select'\">\n                                                <app-selectbox [item]=\"formData\"></app-selectbox>\n                                            </div>\n                                            <div *ngSwitchCase=\"'checkbox'\">\n                                                <app-checkbox [item]=\"formData\"></app-checkbox>\n                                            </div>\n                                            <div *ngSwitchCase=\"'radio'\">\n                                                <app-radio [item]=\"formData\"></app-radio>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-col-12 p-md-12 p-lg-12\">\n                            <div class=\"save-btn-resp margin-alignment\">\n                                <button type=\"button\" (click)=\"saveJsonFormData()\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                                <button (click)=\"freezeField()\" type=\"button\" style=\"margin-left: 8px;\" class=\"btn btn-default btn-resp-btn\">Submit</button>\n                                <button type=\"button\" [routerLink]=\"['/configuration/servicetypelist']\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"p-col-12 p-md-3 p-lg-3 padding-adjustment-field\">\n            <app-servicetype-add-fields (getDragInputControl)=\"getDragInputs($event)\"></app-servicetype-add-fields>\n        </div>\n\n    </div>\n\n    <!-- Switch case handling  Drag  and drop View -->\n\n    <p-dialog *ngIf=\"getDragInput\" header=\"{{getDragInput.name}}\" (onHide)=\"cancelField()\" [(visible)]=\"displayModalfields\" [modal]=\"true\" [style]=\"{width: '70vw'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n        <form [formGroup]=\"inputControlForm\" (ngSubmit)=\"submitInputControl()\">\n            <div class=\"p-grid\" *ngIf=\"getDragInput\" [ngSwitch]=\"getDragInput.fieldType\">\n                <!--- common Fields  For All Input Controls-->\n                <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Field Name<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"fieldName\" [ngClass]=\"{ 'is-invalid': submitted && fval.fieldName.errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"service-fieldname\">\n                    <div *ngIf=\"submitted && fval.fieldName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"fval.fieldName.errors.required\">\n                            Field name is Required\n                        </div>\n                        <div *ngIf=\"fval.fieldName.errors.fieldname\">\n                            Field Name is already exists\n                        </div>\n                    </div>\n                </div>\n                <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Field Key<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"fieldKey\" [ngClass]=\"{ 'is-invalid': submitted && fval.fieldKey.errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"service-field-key\">\n                    <div *ngIf=\"submitted && fval.fieldKey.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"fval.fieldKey.errors.required\">\n                            Field key is Required\n                        </div>\n                        <div *ngIf=\"fval.fieldKey.errors.fieldkey\">\n                            Field key is already exists\n                        </div>\n                    </div>\n                </div>\n                <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Field Type<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"fieldType\" readonly type=\"text\" size=\"30\" class=\"form-control\" id=\"service-fieldtype\">\n                </div>\n                <!--- common Fields  For All Input Controls-->\n\n                <div class=\"p-grid padding-left-align\" *ngSwitchCase=\"'text'\">\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                        <div class=\"p-grid\">\n                            <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-popup2\">\n                                <h4 class=\"first relationship-name-color\">Characters Required (Min - Max)</h4>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"minValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.minValue.errors }\" type=\"text\" size=\"30\" class=\"form-control char-minmax\" id=\"service-min-value\">\n                                <div *ngIf=\"submitted && fval.minValue.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.minValue.errors.pattern\">Enter only number.</div>\n                                </div>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"maxValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control char-minmax\" id=\"service-max-value\">\n                                <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n              <h4 class=\"first relationship-name-color hidden-label\" >Characters Required (Min - Max)</h4>\n              <input formControlName=\"maxValue\"  [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control\">\n              <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n              </div>\n            </div> -->\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup1 left-alignment\">\n                        <h4 class=\"first relationship-name-color\">Place Holder</h4>\n                        <input formControlName=\"phValue\" type=\"text\" size=\"30\" class=\"form-control placeholder-box\" id=\"service-placeholder\">\n                    </div>\n\n                </div>\n                <!-- number-->\n                <div class=\"p-grid padding-left-align\" *ngSwitchCase=\"'number'\">\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n                        <div class=\"p-grid\">\n                            <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-popup2\">\n                                <h4 class=\"first relationship-name-color\">Value Range (Min - Max)</h4>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"minValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.minValue.errors || submitted &&  inputControlForm.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-minfield\">\n                                <div *ngIf=\"submitted && fval.minValue.errors || submitted &&  inputControlForm.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.minValue.errors?.limitingError\"> {{ fval.minValue.errors?.message}}</div>\n                                    <div *ngIf=\"submitted && (inputControlForm.errors?.minGreaterThanMax && !fval.minValue.errors?.limitingError )\">The value should be less than or equal to minValue\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"p-col-12 p-md-6 p-lg-6 padding-adjustment-popup3\">\n                                <input formControlName=\"maxValue\" (keypress)=\"numbersOnly($event)\" [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors  || submitted &&  inputControlForm.errors }\" type=\"text\" size=\"30\" class=\"form-control width-min-max\" id=\"ci-maxfield\">\n                                <div *ngIf=\"submitted && fval.maxValue.errors || submitted &&  inputControlForm.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"submitted && fval.maxValue.errors?.limitingError\">{{ fval.minValue.errors?.message}}</div>\n                                    <!-- <div *ngIf=\"submitted && inputControlForm.errors?.minGreaterThanMax\">The value should be less than or equal to minValue\n                </div> -->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup\">\n            <h4 class=\"first relationship-name-color hidden-label\" >Characters Required (Min - Max)</h4>\n            <input formControlName=\"maxValue\"  [ngClass]=\"{ 'is-invalid': submitted && fval.maxValue.errors }\" type=\"text\" size=\"30\" class=\"form-control\">\n            <div *ngIf=\"submitted && fval.maxValue.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"submitted && fval.maxValue.errors.pattern\">Enter only number.</div>\n            </div>\n          </div> -->\n                    <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-popup1\">\n                        <h4 class=\"first relationship-name-color\">Place Holder</h4>\n                        <input formControlName=\"phValue\" type=\"text\" size=\"30\" class=\"form-control placeholder-width\" id=\"ci-placeholderfirst\">\n                    </div>\n\n                </div>\n               \n                <!--Select  Swith Case-->\n                <div class=\"p-grid optiondgrid\" *ngSwitchCase=\"'select'\">\n                    <div class=\"p-col-12 p-md-9 p-lg-9\">\n                        <h4 class=\"first relationship-name-color\">Field Values <sup class=\"mandatory-color\">*</sup></h4>\n                    </div>\n                    <div class=\"p-col-12 p-md-3 p-lg-3\">\n                        <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn\"><i\n                class=\"pi pi-plus\"></i>&nbsp; Add\n              Option</button>\n                    </div>\n                    <div class=\"p-col-12 p-md-12 p-lg-12 full-options-area\">\n                        <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"p-grid  optiondgrid\">\n                                    <div class=\"p-col-12 p-md-1 p-lg-1\" style=\"width: 30px; margin-top: 15px;\">\n                                        <input type=\"radio\" [formControl]=\"inputControlForm.get('defaultOption')\" [value]=\"i\" [checked]=\"i==0\" id=\"service-radio\">\n                                    </div>\n                                    <div class=\"p-col-12 p-md-10 p-lg-10 \">\n                                        <input formControlName=\"optionValue\"  [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\" type=\"text\" size=\"30\" class=\"form-control\" id=\"service-optionvalue\">\n                                        <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \" class=\"invalid-feedback\">\n                                            <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                                                Option Value is Required\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"p-col-12 p-md-1 p-lg-1 \">\n                                        <button *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" class=\"ui-button-danger ui-delete-custom btn-add-remove delete-icon\"><img\n                        src=\"assets/table-icon/delete-btn.svg\"></button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- multi selet-->\n                <!-- <div class=\"p-grid\" *ngSwitchCase=\"'multiselect'\">\n            <div class=\"p-col-12 p-md-12 p-lg-12\" style=\"padding: 0px;\">\n              <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn right-add-button\">Add\n                Option</button>\n            </div>\n            <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n              <div [formGroupName]=\"i\">\n                <div class=\"p-grid padding-adj\">\n                  <input   type=\"checkbox\"  formControlName=\"defaultOption\"  [value]=\"i\" [checked]=\"i==0\" class=\"p-col-12 p-md-1 p-lg-1 \" >\n                 \n                  <div class=\"p-col-12 p-md-5 p-lg-5 col-adjust-options padding-adjustment-popup\">\n                    <h4  *ngIf=\"i==0\" class=\"first relationship-name-color\">Option Key <sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"optionKey\" (click)=\"getOption(i)\"\n                       [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionKey').errors }\"\n                      type=\"text\" size=\"30\" class=\"form-control width-placement\">\n                    <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionKey').errors \"\n                      class=\"invalid-feedback\">\n                      <div *ngIf=\"formArraySelect.controls[i].get('optionKey').errors.required\">\n                        Option Key is Required\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"p-col-12 p-md-5 p-lg-5 col-adjust-options padding-adjustment-popup\">\n                    \n                    <h4  *ngIf=\"i==0\"  class=\"first relationship-name-color option-value\">Option Value<sup class=\"mandatory-color\">*</sup></h4>\n                    <input formControlName=\"optionValue\"\n                       [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\"\n                      type=\"text\" size=\"30\" class=\"form-control width-placement width-left\">\n                    <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \"\n                      class=\"invalid-feedback\">\n                      <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                        Option Value is Required\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"p-col-12 p-md-1 p-lg-1  col-adjust-options1 col-top-adjustment\">\n                    <button  *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" pButton icon=\"pi pi-times\"\n                      class=\"ui-button-danger ui-delete-custom btn-add-remove\"></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> -->\n                <!--Radio   Swith Case-->\n                <div class=\"p-grid optiondgrid\" *ngSwitchCase=\"'radio'\">\n                    <div class=\"p-col-12 p-md-9 p-lg-9\">\n                        <h4 class=\"first relationship-name-color\">Field Values <sup class=\"mandatory-color\">*</sup></h4>\n                    </div>\n                    <div class=\"p-col-12 p-md-3 p-lg-3\">\n                        <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn\"><i\n                class=\"pi pi-plus\"></i>&nbsp; Add\n              Option</button>\n                    </div>\n                    <div class=\"p-col-12 p-md-12 p-lg-12 full-options-area\">\n                        <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"p-grid  optiondgrid\">\n                                    <div class=\"p-col-12 p-md-1 p-lg-1\" style=\"width: 30px; margin-top: 15px;\">\n                                        <input type=\"radio\" [formControl]=\"inputControlForm.get('defaultOption')\" [value]=\"i\" [checked]=\"i==0\" id=\"service-radio2\">\n                                    </div>\n                                    <div class=\"p-col-12 p-md-10 p-lg-10 \">\n                                        <input formControlName=\"optionValue\"  [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\" type=\"text\" size=\"30\" class=\"form-control\">\n                                        <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \" class=\"invalid-feedback\">\n                                            <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                                                Option Value is Required\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"p-col-12 p-md-1 p-lg-1 \">\n                                        <button *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" class=\"ui-button-danger ui-delete-custom btn-add-remove delete-icon\"><img\n                        src=\"assets/table-icon/delete-btn.svg\"></button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--Checkbox   Swith Case-->\n                <div class=\"p-grid optiondgrid\" *ngSwitchCase=\"'checkbox'\">\n                    <div class=\"p-col-12 p-md-9 p-lg-9\">\n                        <h4 class=\"first relationship-name-color\">Field Values <sup class=\"mandatory-color\">*</sup></h4>\n                    </div>\n                    <div class=\"p-col-12 p-md-3 p-lg-3\">\n                        <button type=\"button\" (click)=\"addOptions()\" class=\"btn btn-default add-option-btn\"><i\n                class=\"pi pi-plus\"></i>&nbsp; Add\n              Option</button>\n                    </div>\n                    <div class=\"p-col-12 p-md-12 p-lg-12 full-options-area\">\n                        <div formArrayName=\"options\" *ngFor=\"let opt of formArraySelect?.controls; let i=index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"p-grid  optiondgrid\">\n                                    <div class=\"p-col-12 p-md-1 p-lg-1\" style=\"width: 30px; margin-top: 15px;\">\n                                        <input type=\"radio\" [formControl]=\"inputControlForm.get('defaultOption')\" [value]=\"i\" [checked]=\"i==0\" id=\"service-radio3\">\n                                    </div>\n                                    <div class=\"p-col-12 p-md-10 p-lg-10 \">\n                                        <input formControlName=\"optionValue\"  [ngClass]=\"{ 'is-invalid': submitted && formArraySelect.controls[i].get('optionValue').errors }\" type=\"text\" size=\"30\" class=\"form-control\">\n                                        <div *ngIf=\"submitted && formArraySelect.controls[i].get('optionValue').errors \" class=\"invalid-feedback\">\n                                            <div *ngIf=\"formArraySelect.controls[i].get('optionValue').errors.required\">\n                                                Option Value is Required\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"p-col-12 p-md-1 p-lg-1 \">\n                                        <button *ngIf=\"i!=0\" type=\"button\" (click)=\"removeOptions(i)\" class=\"ui-button-danger ui-delete-custom btn-add-remove delete-icon\"><img\n                        src=\"assets/table-icon/delete-btn.svg\"></button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"p-col-12 p-md-12 p-lg-12 padding-adjustment-last padding-adjustment-popup\">\n                    <h4 class=\"first relationship-name-color\">Description</h4>\n                    <textarea formControlName=\"description\" [rows]=\"5\" [cols]=\"78\" class=\"form-control\" autoResize=\"autoResize\" id=\"service-description\"></textarea>\n                </div>\n\n                <div class=\"p-col-12 p-md-12 p-lg-12\">\n                    <p-footer>\n                        <div class=\"save-btn-resp\">\n                            <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                            <button (click)=\"cancelField()\" type=\"button\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n                        </div>\n                    </p-footer>\n                </div>\n\n            </div>\n        </form>\n    </p-dialog>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ServicetypeService } from '../../../services/servicetype.service';\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastService } from '../../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { newUrl } from '../../../../../../environments/environment';\nimport { ConfirmationService } from 'primeng/api';\n\n@Component({\n  selector: 'app-servicetype-header-details',\n  templateUrl: './servicetype-header-details.component.html',\n  styleUrls: ['./servicetype-header-details.component.css'],\n  providers: [ConfirmationService],\n})\nexport class ServicetypeHeaderDetailsComponent implements OnInit {\n\n  div1: boolean = true;\n  div2: boolean = false;\n  div3: boolean = true;\n  div4: boolean = false;\n\n  tab: any = 'tab1';\n  tab1: any;\n  tab2: any;\n  tab3: any;\n  Clicked: boolean;\n  ciParentList: any;\n  iconsList: any;\n  displayModal: boolean;\n  seletedIcon: any;\n  seletedImport: any;\n  @Output() saveImage: EventEmitter<any> = new EventEmitter();\n  @Output() sourceCItype: EventEmitter<any> = new EventEmitter();\n  selectedImg: any;\n  file: NgxFileDropEntry[];\n  submitted = false;\n  imgDiv: boolean = false;\n  noIcon: boolean = true;\n  yesIcon: boolean = false;\n  errorImage: boolean = false;\n  siError: boolean = false;\n  imgReqerror: boolean = false;\n  parentSI: Array<string> = [];\n  parentSIcode: any;\n  tabIndex: number = 0;\n  @Output() getTabIndexValue: EventEmitter<any> = new EventEmitter();\n  getSIid: any;\n  pathUrl: any;\n  errorFileSize: boolean = false;\n  errorFileType: boolean = false;\n  isValid: number = 0;\n  viewIcon: any;\n  hideBrowse: boolean = true;\n  iconSelect: any;\n  iconImport: any;\n  defaultIcon: any;\n  isSiDetailEdit: boolean = false;\n  currentSiName: any;\n  selectedSIicon: boolean = false;\n  disableBrowse: boolean = true;\n  disableParent: boolean = false;\n\n  serviceTypeDetailForm: FormGroup;\n  constructor(private sitypeService: ServicetypeService,\n    private formBuilder: FormBuilder,\n    private toastService: ToastService,\n    private commonSevice: CommonService, private router: Router,\n    private confirmationService: ConfirmationService,\n    private route: ActivatedRoute) {\n  }\n  ngOnInit(): void {\n\n    this.pathUrl = newUrl;\n\n    this.defaultIcon = 'assets/upload-icon/database-btn.svg';\n    this.viewIcon = this.defaultIcon;\n    this.iconSelect = this.viewIcon;\n\n    this.serviceTypeDetailForm = this.formBuilder.group({\n      id: [''],\n      serviceTypeName: ['', Validators.required],\n      parentServiceType: ['', Validators.required],\n      description: [''],\n      selectedIconImage: [''],\n    });\n\n    this.getParentSI();\n    this.getIconList();\n    this.getParentData();\n    this.formControlValueChanged();\n\n    this.getSIid = this.route.snapshot.queryParams['siId'];\n    if (this.getSIid) {\n      this.disableParent = true;\n      this.editSI(this.getSIid);\n    }\n  }\n\n  formControlValueChanged() {\n    this.serviceTypeDetailForm.get('serviceTypeName').valueChanges.subscribe(\n      (mode: any) => {\n        if (this.isSiDetailEdit) {\n          if (this.currentSiName != mode) {\n            // if ((this.parentSI).indexOf(mode) > -1) {\n            //   this.siError = true;\n            // } else {\n            //   this.siError = false;\n            // }\n            const parentSIName = this.parentSI.findIndex(data => data.toLowerCase() === mode.toLowerCase());\n            if (parentSIName !== -1) {\n              this.siError = true;\n            } else {\n              this.siError = false;\n            }\n\n          }\n        } else {\n          const parentSIName = this.parentSI.findIndex(data => data.toLowerCase() === mode.toLowerCase());\n          if (parentSIName !== -1) {\n            this.siError = true;\n          } else {\n            this.siError = false;\n          }\n        }\n      });\n  }\n\n  get fval(): any {\n    return this.serviceTypeDetailForm.controls;\n  }\n  // dropdown list\n  getParentSI(): any {\n    this.sitypeService.getParentSI().subscribe(data => {\n      this.ciParentList = data.map((map) => {\n        this.parentSI.push(map.serviceTypeName);\n        return { code: map.id, name: map.serviceTypeName };\n\n      });\n    });\n  }\n\n  // get icon list\n  getIconList(): void {\n    this.sitypeService.getIconList().subscribe(data => {\n      this.iconsList = data;\n    });\n  }\n\n  getSeletedIcon(iconurl): void {\n    this.selectedSIicon = false;\n    if (iconurl) {\n      this.selectedSIicon = true;\n    }\n    this.iconSelect = iconurl;\n    this.errorImage = false;\n  }\n  /* Save Icon function*/\n  saveIconorImg(): void {\n    if (this.selectedSIicon == false) {\n      this.displayModal = true;\n      if (this.div3) {\n        this.confirmationService.confirm({\n          message: 'Please select an icon',\n          header: 'Alert',\n          icon: 'fa fa-question-circle',\n          accept: () => {\n          },\n          acceptLabel: 'Ok'\n        });\n      } else if (this.div4) {\n        this.confirmationService.confirm({\n          message: 'Please select an image',\n          header: 'Alert',\n          icon: 'fa fa-question-circle',\n          accept: () => {\n          },\n          acceptLabel: 'Ok'\n        });\n      }\n    } else if (this.isValid == 1 || this.isValid == 2) {\n      this.displayModal = true;\n\n    } else if (this.iconSelect || this.iconImport) {\n      this.displayModal = false;\n      this.imgDiv = true;\n      this.noIcon = false;\n      this.yesIcon = true;\n      this.errorImage = false;\n      this.file = [];\n      this.seletedIcon = this.iconSelect;\n      this.seletedImport = this.iconImport;\n      this.iconSelect = '';\n      this.viewIcon = '';\n      if (this.seletedIcon) {\n        this.seletedImport = '';\n        this.viewIcon = this.seletedIcon;\n        this.serviceTypeDetailForm.get('selectedIconImage').setValue(this.seletedIcon);\n        this.saveImage.emit(this.seletedIcon);\n      } else if (this.seletedImport) {\n        this.seletedIcon = '';\n        // this.viewIcon = '';\n        // this.viewIcon = this.seletedImport;\n        this.serviceTypeDetailForm.get('selectedIconImage').setValue(this.seletedImport);\n        this.saveImage.emit(this.seletedImport);\n      }\n\n      if (this.viewIcon || this.seletedImport) {\n        if (this.viewIcon) {\n          this.iconSelect = this.viewIcon;\n        } else {\n          this.iconSelect = this.seletedImport;\n        }\n        this.hideBrowse = false;\n      }\n    } else {\n      this.displayModal = true;\n      this.errorImage = true;\n    }\n  }\n  /* Edit Icon function*/\n  editIcon() {\n    if (this.viewIcon || this.seletedImport) {\n      if (this.viewIcon) {\n        this.iconSelect = this.viewIcon;\n      } else {\n        this.iconSelect = this.seletedImport;\n      }\n      this.displayModal = true;\n      this.div3 = true;\n      this.div4 = false;\n      this.tab = 'tab1';\n    }\n    this.disableBrowse = true;\n  }\n  /* Remove Icon function*/\n  removeIcon() {\n    if (this.viewIcon || this.seletedImport) {\n      this.viewIcon = '';\n      this.seletedImport = '';\n      this.hideBrowse = true;\n      this.imgDiv = false;\n      this.viewIcon = this.defaultIcon;\n\n    }\n  }\n\n  /* Save Service Type function*/\n  submitServiceDetail(): void {\n    const uploadImage = {\n      \"base64\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n    if (this.siError) {\n      this.submitted = false;\n    } else {\n      this.submitted = true;\n      this.siError = false;\n    }\n    if (this.submitted && this.serviceTypeDetailForm.valid) {\n      this.commonSevice.updateLoaderStatus(true);\n      const requestData = { ...this.serviceTypeDetailForm.value }\n      this.parentSIcode = requestData.parentServiceType.code;\n      requestData.parentServiceType = this.parentSIcode;\n      requestData.serviceTypeName = (requestData.serviceTypeName).trim();\n      requestData.createdBy = 1;\n      requestData.status = 'Y';\n      if (requestData.parentServiceType.name === 'Service') {\n        requestData.hasParent = 'N';\n      } else {\n        requestData.hasParent = 'Y';\n\n      }\n      if (this.viewIcon) {\n        requestData.iconType = 'path';\n        requestData.imageLocation = this.viewIcon;\n        requestData.file = null;\n      }\n      if (this.seletedImport) {\n        requestData.iconType = 'import';\n        requestData.imageLocation = '';\n        uploadImage['base64'] = this.seletedImport;\n        uploadImage['name'] = (this.selectedImg).name;\n        uploadImage['type'] = (this.selectedImg).type;\n        requestData.file = uploadImage;\n      }\n      this.sitypeService.createSIDetails(requestData).subscribe((data: any) => {\n        const sourceSIval = {\n          serviceTypeName: data.serviceTypeName,\n          siId: data.id,\n          parentServiceTypeId: data.parentServiceTypeId,\n          parentSIName: data.parentServiceTypeName,\n          hierarchy: data.hierarchy\n        }\n        this.commonSevice.updateSIDetailInfo(sourceSIval);\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.success(data.message);\n        this.seletedIcon = '';\n        this.imgDiv = false;\n        this.noIcon = true;\n        this.yesIcon = false;\n        this.serviceTypeDetailForm.reset();\n        this.openNext();\n        this.submitted = false;\n        this.editSI(data.id);\n\n      }, err => {\n        this.displayModal = false;\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.error(err.error.message);\n\n      });\n    }\n\n  }\n  /* Drag and Drop handling*/\n  public dropped(files: NgxFileDropEntry[]): void {\n    this.file = files;\n    this.errorImage = false;\n    this.seletedIcon = '';\n    this.iconImport = '';\n    this.iconSelect = '';\n    this.selectedSIicon = false;\n    for (const droppedFile of files) {\n      this.disableBrowse = false;\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          const fileSize = file.size;\n          const maxAllowedSize = 2000000; // bytes for 2MB\n          if (fileSize > maxAllowedSize) {\n            this.errorFileSize = true;\n            this.isValid = 1;\n          } else {\n            this.errorFileSize = false;\n            this.selectedImg = file;\n          }\n\n          const extension = (file.name).split('.').pop();\n\n          if (extension == 'jpeg' || extension == 'jpg' || extension == 'JPG' || extension == 'JPEG' || extension == 'png' || extension == 'PNG') {\n            this.errorFileType = false;\n            this.selectedImg = file;\n            this.isValid = 0;\n          } else {\n            this.errorFileType = true;\n            this.isValid = 2;\n          }\n\n          // Preview Import Image\n          const reader = new FileReader();\n          fileEntry.file(file => {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n              this.iconImport = reader.result;\n              if (this.iconImport) {\n                this.selectedSIicon = true;\n              }\n\n            };\n          });\n\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n      }\n    }\n  }\n\n  div1Function(check): void {\n    this.div1 = true;\n    this.div2 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n  }\n\n  div2Function(check): void {\n    this.div2 = true;\n    this.div1 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n  }\n\n  div3Function(check): void {\n    this.div3 = true;\n    this.div4 = false;\n    if (check === 1) {\n      this.tab = 'tab1';\n    } else {\n      this.tab = 'tab2';\n    }\n  }\n\n  div4Function(check): void {\n    this.div4 = true;\n    this.div3 = false;\n    if (check === 2) {\n      this.tab = 'tab2';\n    } else {\n      this.tab = 'tab1';\n    }\n  }\n  showModalDialog(): void {\n    this.displayModal = true;\n  }\n\n  /*Cancel Popup button handling*/\n  cancelImagemodal(): void {\n    this.displayModal = false;\n    this.seletedIcon = '';\n    this.errorFileSize = false;\n    this.errorFileType = false;\n    this.file = [];\n    this.div3 = true;\n    this.div4 = false;\n    this.tab = 'tab1';\n    this.disableBrowse = true;\n  }\n\n  /* Cancel button function */\n  cancelSIDetails(): void {\n    this.router.navigate(['configuration/servicetypelist']);\n  }\n  /* Enable tab function*/\n  openNext() {\n    this.tabIndex = (this.tabIndex === 2) ? 0 : this.tabIndex + 1;\n    this.getTabIndexValue.emit(this.tabIndex);\n  }\n  openPrev() {\n    this.tabIndex = (this.tabIndex === 0) ? 2 : this.tabIndex - 1;\n  }\n  /* Edit Service type*/\n  editSI(siId): void {\n    this.isSiDetailEdit = true;\n    this.commonSevice.updateLoaderStatus(true);\n    this.sitypeService.getSIData(siId).subscribe(data => {\n      const sourceCIval = {\n        serviceTypeName: data.serviceTypeName,\n        siId: data.id,\n        parentServiceTypeId: data.parentServiceTypeId,\n        parentServiceTypeName: data.parentServiceTypeName,\n        hierarchy: data.hierarchy\n      };\n      this.commonSevice.updateSIDetailInfo(sourceCIval);\n      this.serviceTypeDetailForm.patchValue({\n        id: data.id,\n        serviceTypeName: data.serviceTypeName,\n        parentServiceType: { code: data.parentServiceTypeId, name: data.parentServiceTypeName },\n        description: data.description\n      });\n      this.currentSiName = data.serviceTypeName;\n\n      if (data.imageLocation) {\n        if (data.icon == 'import') {\n          this.viewIcon = '';\n          this.seletedImport = this.pathUrl + '' + data.imageLocation;\n          this.iconSelect = this.seletedImport;\n        } else {\n          this.viewIcon = data.imageLocation;\n          this.iconSelect = this.viewIcon;\n        }\n        if (this.viewIcon || this.seletedImport) {\n          this.hideBrowse = false;\n        }\n        this.serviceTypeDetailForm.get('selectedIconImage').setValue(this.viewIcon);\n        this.imgDiv = true;\n        this.noIcon = false;\n        this.yesIcon = true;\n      }\n      this.commonSevice.updateLoaderStatus(false);\n      this.siError = false;\n    }, () => {\n      this.commonSevice.updateLoaderStatus(false);\n    });\n\n  }\n  /* Get parent SI Name*/\n  getParentData(): void {\n    this.commonSevice.siHeaderData.subscribe(data => {\n      if (data) {\n        this.serviceTypeDetailForm.patchValue({\n          parentServiceType: { code: data.parentSITypeId, name: data.parentSIName },\n        });\n        if(data.parentCITypeId !== \"\"){\n        this.disableParent = true;\n        }\n      }\n    });\n  }\n}\n","<form [formGroup]=\"serviceTypeDetailForm\" (ngSubmit)=\"submitServiceDetail()\">\n    <div class=\"p-grid\">\n        <input formControlName=\"id\" hidden>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-form\">\n            <h4 class=\"first relationship-name-color\">SI Type Name<sup class=\"mandatory-color\">*</sup></h4>\n            <input id=\"input\" [readonly]=\"getSIid==1\" type=\"text\" size=\"30\" formControlName=\"serviceTypeName\" [ngClass]=\"{ 'is-invalid': submitted && fval.serviceTypeName.errors }\" class=\"border-input\" id=\"sitypename\" pInputText oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\">\n            <div *ngIf=\"submitted && fval.serviceTypeName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"fval.serviceTypeName.errors.required\">\n                    Service type name is Required\n                </div>\n            </div>\n            <div *ngIf=\"siError\" style=\"color: #dc3545;font-size: 11px;\">\n                Service type name Already Exists\n            </div>\n        </div>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-form\" [hidden]=\"getSIid==1\">\n            <h4 class=\"first relationship-name-color\">Parent SI Type<sup class=\"mandatory-color\">*</sup></h4>\n            <p-dropdown [options]=\"ciParentList\" formControlName=\"parentServiceType\" [disabled]=\"disableParent\" [ngClass]=\"{ 'is-invalid': submitted && fval.parentServiceType.errors }\" placeholder=\"Select Parent SI Type\" optionLabel=\"name\" filter=\"true\" id=\"parent-si\"></p-dropdown>\n            <div *ngIf=\"submitted && fval.parentServiceType.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"fval.parentServiceType.errors.required\">\n                    Parent SI type is Required\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"p-grid margin-top-align\">\n        <div class=\"p-col-12 p-md-8 p-lg-8 padding-form\">\n            <h4 class=\"first relationship-name-color\">Description</h4>\n            <textarea [readonly]=\"getSIid==1\" [rows]=\"5\" [cols]=\"78\" formControlName=\"description\" class=\"border-input\" pInputTextarea autoResize=\"autoResize\" id=\"service-details-description\"></textarea>\n        </div>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-form\">\n            <h4 class=\"first relationship-name-color\">Icon</h4>\n            <!-- <h6><span class=\"material-icons color-change-purple\">\n             camera_enhance\n             \n             </span>&nbsp;<span *ngIf=\"noIcon\">No Icons Selected</span><span *ngIf=\"yesIcon\">Icons Selected</span>\n          </h6> -->\n            <input hidden formControlName=\"selectedIconImage\">\n            <div class=\"browse-styling-border\" [hidden]=\"getSIid==1\">\n                <h6 class=\"browse-text\" *ngIf=\"hideBrowse\">\n                    <img src=\"{{viewIcon}}\" alt=\"\" class=\"uploaded-selected-icon\">\n                    <a class=\"font-color\" (click)=\"showModalDialog()\">Select Icon</a>\n                </h6>\n                <h6 class=\"browse-text\" *ngIf=\"imgDiv\">\n                    <img src=\"{{viewIcon}}\" alt=\"\" class=\"uploaded-selected-icon\">\n                    <img src=\"{{seletedImport}}\" alt=\"\" class=\"uploaded-selected-icon\">\n                    <a class=\"delete-left\" (click)=\"editIcon()\" style=\"color: #1fa5e6;cursor: pointer;\">Edit</a>\n                    <a class=\"delete-left\" (click)=\"removeIcon()\" style=\"color: #1fa5e6;cursor: pointer;\">Remove</a>\n                </h6>\n            </div>\n        </div>\n        <div class=\"p-col-12 p-md-12 p-lg-12\" [hidden]=\"getSIid==1\">\n            <div class=\"save-btn-resp\">\n                <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                <button type=\"button\" (click)=\"cancelSIDetails()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</form>\n<p-dialog header=\"Choose Icons\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: 'auto'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\" (onHide)=\"cancelImagemodal()\">\n    <div class=\"borderBottom\">\n        <button type=\"button\" (click)=\"div3Function(1)\" [ngClass]=\"{'active-new': tab==='tab1','normal-div': tab==='tab2'}\">Select Icons</button>\n        <button type=\"button\" (click)=\"div4Function(2)\" [ngClass]=\"{'active-new': tab==='tab2','normal-div': tab==='tab1'}\" style=\"margin-left: 8px;\">Import Images</button>\n    </div>\n    <div *ngIf=\"div3\">\n        <div class=\"p-grid\">\n            <div class=\"p-col-12 p-md-4 p-lg-4\">\n                <div class=\"selected-icon-div\">\n                    <img src=\"{{iconSelect}}\" alt=\"\" class=\"selected-icon-image\">\n                    <!-- <img src=\"/data/set_logo.png\" alt=\"\" class=\"selected-icon-image\"> -->\n                </div>\n            </div>\n            <div class=\"p-col-12 p-md-8 p-lg-8 padding-alignment2\">\n                <div>\n                    <div *ngFor=\"let img of iconsList\">\n                        <br>\n                        <h5 style=\"font-size: 18px;\"><b>{{img.type}}</b></h5>\n                        <br>\n                        <div class=\"p-grid\">\n                            <div class=\"p-col-12 p-md-2 p-lg-2\" *ngFor=\"let iconurl of img.images\">\n                                <img src=\"{{iconurl}}\" alt=\"\" class=\"icons-images-response\" (click)=\"getSeletedIcon(iconurl)\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"div4\">\n        <br>\n        <div class=\"p-grid\">\n            <!-- <div class=\"p-col-12 p-md-1 p-lg-1\"></div> -->\n            <div class=\"p-col-12 p-md-10 p-lg-10\">\n                <ngx-file-drop dropZoneLabel=\"Drop files here\" (onFileDrop)=\"dropped($event)\" accept=\".png,.jpg\">\n                    <!-- (onFileOver)=\"fileOver($event)\" (onFileLeave)=\"fileLeave($event)\"  -->\n                    <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\n                        <span class=\"material-icons size-increase dragicon\">\n                         cloud_upload\n                         </span>\n\n\n                        <h6 class=\"drag-drop-css\" *ngIf=\"disableBrowse\">Drag and Drop the file to upload<br> or</h6>\n                        <button type=\"button\" ngClass=\"dragbtn\" (click)=\"openFileSelector()\" *ngIf=\"disableBrowse\">Browse Files</button>\n                        <h6 class=\"upload-text\" *ngIf=\"disableBrowse\">Upload less than 2MB in JPEG or PNG Format</h6>\n\n                        <div *ngFor=\"let item of file; let i=index\" ngClass=\"dropfile\">\n                            <strong>{{ item.relativePath }} <br> <h6 class=\"icon-upload\">Icon uploaded successfully.</h6></strong>\n                        </div>\n                    </ng-template>\n                </ngx-file-drop>\n            </div>\n            <!-- <div class=\"p-col-12 p-md-1 p-lg-1\">\n                   </div> -->\n        </div>\n    </div>\n    <div class='alert alert-danger' *ngIf=\"errorImage\">\n        Please Select Icon or Import Image\n    </div>\n    <div class='alert alert-danger' *ngIf=\"errorFileSize\">\n        Upload file size cannot exceed 2MB\n    </div>\n    <div class='alert alert-danger' *ngIf=\"errorFileType\">\n        Upload file JPEG or PNG format only allowed\n    </div>\n    <p-footer>\n        <div class=\"save-btn-resp\">\n            <button type=\"button\" (click)=\"saveIconorImg()\" class=\"btn btn-default btn-resp-btn\">Save</button>\n            <button type=\"button\" (click)=\"cancelImagemodal()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n        </div>\n    </p-footer>\n    <p-confirmDialog acceptLabel=\"Ok\" acceptButtonStyleClass=\"acceptYes\" rejectButtonStyleClass=\"Iconrejectbtn\"></p-confirmDialog>\n</p-dialog>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ConfirmationService, SelectItem } from 'primeng/api';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { ServicetypeService } from '../../../services/servicetype.service';\nimport { ToastService } from '../../../../../cmdb-common/services/toast.service';\nimport { CommonService } from '../../../../../cmdb-common/services/common.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-servicetype-map',\n  templateUrl: './servicetype-map.component.html',\n  styleUrls: ['./servicetype-map.component.css'],\n  providers: [ConfirmationService],\n})\nexport class ServicetypeMapComponent implements OnInit {\n  @ViewChild('map') \n  map:any;\n  item: string;\n  cols: any[];\n  mapCols: any[];\n  selectedRelation: any;\n  isedit: boolean;\n  submitted = false;\n  displayModal: boolean;\n  ciTYpeList:any;\n  mapCIList:any;\n  mapCITypeForm: FormGroup;\n  siTypeName:any;\n  parentSIName:any;\n  selectAllmap:Array<any>=[];\n  getSIid:any;\n  ciTypeIds:Array<any>=[];\n  checkboxError:boolean;\n  mapCIType: Array<any>=[];\n  removeExCI: Array<any>=[];\n\n  constructor(private formBuilder: FormBuilder,\n              private confirmationService: ConfirmationService,\n              private toastService: ToastService,\n              private commonSevice: CommonService,\n              private servicetypeservice: ServicetypeService,\n              private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.mapCITypeForm = this.formBuilder.group({\n      id: [''],\n      serviceTypeId: ['', Validators.required],\n      ciTypeIds: ['', Validators.required],\n    });\n\n\n    this.cols = [\n      { field: 'ciType', header: 'Name', width: \"25%\" },\n      { field: 'ciTypeDesc', header: 'Description', width: \"65%\" },\n      \n    ];\n\n    this.mapCols = [\n      { field: 'ciTypeName', header: 'Name', width: '45%' },\n      { field: 'description', header: 'Description', width: '45%' },\n    ];\n\n    this.getciTYpeList();\n    this.getSIHeaderData();\n\n    this.getSIid = this.route.snapshot.queryParams['siId'];\n    if (this.getSIid) {\n      this.getSIHeaderData();\n      this.editSImap(this.getSIid);\n      this.getciTYpeList();\n\n    }\n   \n  }\n\n  showModalDialog(): void {\n    this.displayModal = true;\n  }\n\n  onRowSelect(event): void {\n    if (this.selectAllmap.length > 0) {\n      this.checkboxError= false;\n    }\n\n    this.selectedRelation = event.data;\n\n  }\n  get fval(): any {\n    return this.mapCITypeForm.controls;\n  }\n  addMapCI(): void {\n    this.submitted = false;\n    this.displayModal = true;\n    this.isedit = false;\n    this.getSIHeaderData();\n  }\n\n  getciTYpeList(): void {\n    this.commonSevice.updateLoaderStatus(true);\n    this.servicetypeservice.getMapCITypeList().subscribe(data => {\n      this.removeExCI = [];\n\n      data.forEach((item) => {\n        const existingMapCI = this.mapCIType.findIndex(data => data.toLowerCase() === item.ciTypeName.toLowerCase())\n        // if (this.mapCIType.findIndex(i => i == item.ciTypeName) === -1) {\n          if(existingMapCI == -1){\n          this.removeExCI.push(item)\n        }\n      });\n      this.ciTYpeList = this.removeExCI\n      this.commonSevice.updateLoaderStatus(false);\n    });\n  }\n\n  getSIHeaderData(): void {\n    this.commonSevice.siHeaderData.subscribe(data => {\n      this.mapCITypeForm.get('serviceTypeId').setValue(data.siId);\n      this.siTypeName = data.serviceTypeName;\n      this.parentSIName = data.parentServiceTypeName;\n    });\n  }\n/* Create New Map CI*/\n  submitMapCITypes(): void {\n    this.ciTypeIds = [];\n    if (this.selectAllmap.length > 0) {\n      this.submitted = true;\n      this.checkboxError = false;\n      for (let cidata of this.selectAllmap) {\n        this.ciTypeIds.push(cidata.id);\n      }\n      const ciTypeId = this.ciTypeIds.toString();\n      this.mapCITypeForm.get('ciTypeIds').setValue(ciTypeId);\n    } else {\n      this.submitted = false;\n      this.checkboxError = true;\n      this.displayModal = true;\n    }\n    if (this.submitted && this.mapCITypeForm.valid) {\n      this.commonSevice.updateLoaderStatus(true);\n      const requestData = { ...this.mapCITypeForm.value }\n\n      requestData.createdBy = 1;\n      requestData.status = 'Y';\n      if (this.isedit) {\n        requestData.modifiedBy = 1;\n      }\n      this.servicetypeservice.createMapCI(requestData).subscribe((data: any) => {\n        this.toastService.success(data.message);\n        this.displayModal = false;\n        this.selectAllmap = [];\n        if (this.getSIid) {\n          this.editSImap(this.getSIid);\n        } else {\n          this.editSImap(requestData.serviceTypeId);\n        }\n        this.getciTYpeList();\n        this.commonSevice.updateLoaderStatus(false);\n\n      }, err => {\n        this.displayModal = false;\n        this.commonSevice.updateLoaderStatus(false);\n        this.toastService.error(err.error.message);\n\n      });\n\n    }\n\n  }\n/* Edit SI map*/\n  editSImap(siId) {\n    this.commonSevice.updateLoaderStatus(true);\n    this.servicetypeservice.getSImapList(siId).subscribe(data => {\n      this.commonSevice.updateLoaderStatus(false);\n      this.mapCIList = data;\n      this.mapCIType = [];\n      const relatedCI = data.map((map) => {\n        this.mapCIType.push(map.ciType);\n        this.mapCIType = this.mapCIType.filter((el, i, a) => i === a.indexOf(el));\n      });\n      this.getciTYpeList(); \n    });\n  }\n/* Delete Map CI */\n  deleteRow(data): any {\n    const serviceTypeId = data.serviceTypeId;\n    this.confirmationService.confirm({\n      message: 'Are you sure Want to Delete Map CI?',\n      header: 'Confirmation',\n      icon: 'fa fa-question-circle',\n\n      accept: () => {\n        this.commonSevice.updateLoaderStatus(true);\n        this.servicetypeservice.deleteMapCI(data.mappingId).subscribe(data => {\n          this.toastService.success(data.message);\n          this.commonSevice.updateLoaderStatus(false);\n          if (this.getSIid) {\n            this.editSImap(this.getSIid);\n          } else {\n\n            this.editSImap(serviceTypeId);\n          }\n        }, err => {\n          this.commonSevice.updateLoaderStatus(false);\n          this.toastService.error(err.error.message);\n          this.commonSevice.updateLoaderStatus(false);\n        });\n\n      },\n      reject: () => {\n       \n      },\n      acceptLabel: 'Yes'\n\n    });\n  }\n/* cancel Map CI */\n  cancelMapCI() {\n    this.displayModal = false;\n    this.selectAllmap = [];\n    this.checkboxError = false;\n  }\n  resetSearch():void{\n    this.map.onFilterKeyup('', 'data', 'contains');  // Searchvalue, Column, Filtertype\n  }\n  \n}\n","\n<div class=\"margin-adjust-field\">\n    <div class=\"p-grid\">\n        <div class=\"p-col-12 p-md-8 p-lg-8 padding-adjustment-field\">\n            <h6><span style=\"font-weight: 600;\">SI Type </span>: {{siTypeName}} <span style=\"padding-left: 4rem;font-weight: 600;\">Parent SI Type : </span> {{parentSIName}}</h6>\n        </div>\n        <div class=\"p-col-12 p-md-4 p-lg-4 padding-adjustment-field\">\n            <div style=\"float: right;\">\n                <h6 class=\"btn-relationship-type\" style=\"cursor: pointer;\" (click)=\"addMapCI()\">Map CI</h6>\n            </div>\n            <p-dialog header=\"Map CI Type\" [(visible)]=\"displayModal\" (onHide)=\"map.reset();cancelMapCI()\" [modal]=\"true\" [contentStyle]=\"{'height': 'auto'}\" [style]=\"{width: '40vw'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n                <div class=\"mapTable\">\n                    <form [formGroup]=\"mapCITypeForm\" (ngSubmit)=\"submitMapCITypes()\">\n                        <input formControlName=\"id\" id=\"service-id\" hidden>\n                        <input formControlName=\"serviceTypeId\" id=\"servicetypeId\" hidden>\n\n                        <p-table #map [value]=\"ciTYpeList\" [columns]=\"mapCols\" dataKey=\"id\" [(selection)]=\"selectAllmap\" [scrollable]=\"true\" scrollHeight=\"170px\">\n                            <ng-template pTemplate=\"caption\">\n                                <div class=\"global-search-alignment\">\n                                    <input type=\"text\" pInputText size=\"50\" (keydown.enter)=\"$event.preventDefault()\" class=\"filter-textbox\" placeholder=\"Search by keywords\" (input)=\"map.filter($event.target.value, 'date', 'contains')\" [value]=\"map.filters['date'] ? map.filters['date'].value : ''\" id=\"filter-global-table\">\n                                </div>\n                            </ng-template>\n                            <ng-template pTemplate=\"header\" let-columns>\n                                <tr>\n                                    <th style=\"width: 10.3%;\">\n                                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                                    </th>\n                                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\">\n                                        {{col.header}}\n                                    </th>\n                                </tr>\n                            </ng-template>\n                            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" headerStyleClass=\"mapTable\">\n                                <tr [pSelectableRow]=\"rowData\" [pSelectableRowIndex]=\"rowIndex\">\n                                    <td style=\"width: 10.3%;\">\n                                        <p-tableCheckbox [value]=\"rowData\"></p-tableCheckbox>\n                                    </td>\n                                    <td *ngFor=\"let col of columns\">\n                                        {{rowData[col.field]}}\n                                    </td>\n                                </tr>\n                            </ng-template>\n                            <ng-template pTemplate=\"emptymessage\" let-rowData let-columns=\"columns\">\n                                <tr>\n                                    <td colspan=\"3\" class=\"center-norecords\">No Records found.</td>\n                                </tr>\n                            </ng-template>\n                            <ng-template pTemplate=\"paginatorleft\" let-state>\n                                Show per page:\n                            </ng-template>\n                        </p-table>\n                        <div class='alert alert-danger checkboxerror' *ngIf=\"checkboxError\">\n                            Please Select atleast one.\n                        </div>\n                        <input hidden formControlName=\"ciTypeIds\">\n                        <p-footer>\n                            <div class=\"p-col-12 p-md-12 p-lg-12\">\n\n                                <div class=\"save-btn-resp\">\n                                    <button type=\"submit\" class=\"btn btn-default btn-resp-btn\">Save</button>\n                                    <button type=\"button\" (click)=\"cancelMapCI()\" class=\"btn btn-default btn-resp-btn-grey\">Cancel</button>\n                                </div>\n                            </div>\n                        </p-footer>\n\n                    </form>\n                </div>\n            </p-dialog>\n        </div>\n    </div>\n    <div class=\"div-relationship\">\n        <p style=\"border-bottom: 1px solid #cdcdcd;\"></p>\n        <br>\n        <p-table #dt [columns]=\"cols\" [value]=\"mapCIList\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[5,10,20]\" [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" (onRowSelect)=\"onRowSelect($event)\">\n            <ng-template pTemplate=\"header\" let-columns>\n                <tr>\n                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\">\n                        {{col.header}}\n                    </th>\n                    <th>Actions</th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n                <tr [pSelectableRow]=\"rowData\">\n                    <td *ngFor=\"let col of columns\">\n                        {{rowData[col.field]}}\n                    </td>\n                    <td>\n                        <button type=\"button\" (click)=\"deleteRow(rowData,rowIndex)\" pButton icon=\"pi pi-trash\" class=\"ui-button-danger ui-delete-custom\" title=\"Delete\"></button>\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-rowData let-columns=\"columns\">\n                <tr>\n                    <td colspan=\"3\" class=\"center-norecords\">No Records found.</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\" let-state>\n                Show per page:\n            </ng-template>\n        </p-table>\n    </div>\n    <p-confirmDialog acceptLabel=\"Yes\" acceptButtonStyleClass=\"acceptYes\" rejectButtonStyleClass=\"rejectbtn\" rejectLabel=\"No\"></p-confirmDialog>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servicetype-relationship-details',\n  templateUrl: './servicetype-relationship-details.component.html',\n  styleUrls: ['./servicetype-relationship-details.component.css']\n})\nexport class ServicetypeRelationshipDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>servicetype-relationship-details works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CommonService } from 'src/app/cmdb-common/services/common.service';\n@Component({\n  selector: 'app-servicetype',\n  templateUrl: './servicetype.component.html',\n  styleUrls: ['./servicetype.component.css']\n})\nexport class ServicetypeComponent implements OnInit {\n  siId: any;\n  tabshow = false;\n  index: any = 0;\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private commonSevice: CommonService) { }\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.siId = params['siId'];\n    });\n    this.getSIHeaderData();\n  }\n  /* navigate Route to Service List */\n  gotositypeList(): void {\n    this.router.navigate(['configuration/servicetypelist']);\n  }\n  /* get Sevice  information using  service*/\n  getSIHeaderData(): void {\n    this.commonSevice.siHeaderData.subscribe(data => {\n      this.siId = data.siId;\n      if (this.siId) {\n        this.tabshow = true;\n      }\n    });\n  }\n\n  getTabIndex($event): void {\n    this.index = $event;\n\n  }\n}\n","<div class=\"p-grid\">\n    <div class=\"p-col-12 p-md-12 p-lg-12 padding-top-tab\">\n        <div class=\"new-ci-padding\">\n            <div class=\"p-grid\">\n                <div class=\"p-col-12 p-md-10 p-lg-10\">\n                    <h4 class=\"color-relationship-types\">New Service Type</h4>\n                    <ng-template>\n                        <h4 class=\"color-relationship-types\">New SI Type</h4>\n                    </ng-template>\n                </div>\n                <div class=\"p-col-12 p-md-2 p-lg-2\">\n                    <button type=\"button\" (click)=\"gotositypeList()\" class=\"btn btn-default btn-goback\"><i\n                     class=\"pi pi-chevron-left piplus-icon\"></i>&nbsp;&nbsp;Go Back</button>\n                </div>\n            </div>\n            <p class=\"border-color-bottom\"></p>\n            <div>\n                <div class=\"p-grid\">\n                    <div class=\"p-col-12 p-md-12 p-lg-12 padding-alignment-issue\">\n                        <div class=\"padding-tab-view\">\n                            <p-tabView [activeIndex]=\"index\">\n                                <p-tabPanel header=\"SI Details\" headerStyleClass=\"cidetail-image\">\n                                    <app-servicetype-header-details (getTabIndexValue)=\"getTabIndex($event)\"></app-servicetype-header-details>\n                                </p-tabPanel>\n                                <p-tabPanel header=\"Fields\" [disabled]=\"!tabshow\" headerStyleClass=\"ci-fields-image\">\n                                    <app-servicetype-fields></app-servicetype-fields>\n                                </p-tabPanel>\n                                <p-tabPanel header=\"Map CI\" [disabled]=\"!tabshow\" headerStyleClass=\"si-map-image\">\n                                    <app-servicetype-map></app-servicetype-map>\n                                </p-tabPanel>\n                            </p-tabView>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigurationComponent } from './configuration.component';\nimport { CitypeComponent } from './components/citype/citype.component';\nimport { RelationtypeComponent } from './components/relationtype/relationtype.component';\nimport { CitypeListComponent } from './components/citype-list/citype-list.component';\nimport { ServicetypeComponent } from './components/servicetype/servicetype.component';\nimport { ServicetypeListComponent } from './components/servicetype-list/servicetype-list.component'\n  import { from } from 'rxjs';\nconst routes: Routes = [\n{ path: '', component:CitypeComponent },\n{ path: 'citype', component:CitypeComponent },\n{ path: 'citypelist', component: CitypeListComponent },\n{ path: 'relationtype', component:RelationtypeComponent },\n{ path: 'servicetype', component:ServicetypeComponent },\n{ path: 'servicetypelist', component:ServicetypeListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigurationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<p>configuration works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\nimport { ConfigurationComponent } from './configuration.component';\nimport { CitypeComponent } from './components/citype/citype.component';\nimport { RelationtypeComponent } from './components/relationtype/relationtype.component';\nimport {TableModule} from 'primeng/table';\nimport { ButtonModule} from 'primeng/button';\nimport {DialogModule} from 'primeng/dialog';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {TreeTableModule} from 'primeng/treetable';\nimport { TabViewModule } from 'primeng/tabview';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { NgxFileDropModule } from 'ngx-file-drop';\nimport { CMDBCommonModule } from '../../cmdb-common/cmdb-common.module';\nimport { CitypeListComponent } from './components/citype-list/citype-list.component';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CiHeaderDetailsComponent } from './components/citype/ci-header-details/ci-header-details.component';\n// import { CiDetailsComponent } from './components/ci-details/ci-details.component';\nimport { CiFieldsComponent } from './components/citype/ci-fields/ci-fields.component';\nimport {DragDropModule} from 'primeng/dragdrop';\nimport { CiRelationshipDetailsComponent } from './components/citype/ci-relationship-details/ci-relationship-details.component';\nimport { AccordionModule } from 'primeng/accordion';\nimport { CiAddFieldsComponent } from './components/citype/ci-add-fields/ci-add-fields.component';\n\nimport { ServicetypeComponent } from './components/servicetype/servicetype.component';\nimport { ServicetypeListComponent } from './components/servicetype-list/servicetype-list.component';\nimport { ServicetypeAddFieldsComponent } from './components/servicetype/servicetype-add-fields/servicetype-add-fields.component';\nimport { ServicetypeFieldsComponent } from './components/servicetype/servicetype-fields/servicetype-fields.component';\nimport { ServicetypeHeaderDetailsComponent } from './components/servicetype/servicetype-header-details/servicetype-header-details.component';\nimport { ServicetypeRelationshipDetailsComponent } from './components/servicetype/servicetype-relationship-details/servicetype-relationship-details.component';\nimport { ServicetypeMapComponent } from './components/servicetype/servicetype-map/servicetype-map.component';\n// import { CarService } from '../configuration/components/servicetype/servicetype-map/carservice';\n@NgModule({\n  declarations: [ConfigurationComponent,\n     CitypeComponent, \n     RelationtypeComponent,\n      CitypeListComponent,\n       CiHeaderDetailsComponent,\n        CiFieldsComponent,\n         CiRelationshipDetailsComponent,\n          CiAddFieldsComponent,\n          ServicetypeComponent,\n          ServicetypeListComponent,\n          ServicetypeAddFieldsComponent,\n          ServicetypeFieldsComponent,\n          ServicetypeHeaderDetailsComponent,\n          ServicetypeRelationshipDetailsComponent,\n          ServicetypeMapComponent],\n  imports: [\n    CommonModule,\n    CMDBCommonModule,\n    DropdownModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ConfigurationRoutingModule,\n    TableModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    InputTextModule,\n    DialogModule,\n    TabViewModule,\n    TreeTableModule,\n    DragDropModule,\n    NgxFileDropModule,\n    AccordionModule,\n  ],\n  providers: []\n})\nexport class ConfigurationModule { \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { newUrl } from '../../../../environments/environment';\nimport { configUrl } from '../../../../environments/serviceurl';\n\nconst HttpUploadOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": 'undefined' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CitypeService {\n\n  constructor(private http: HttpClient) { }\n\n  /* get CI Type List*/\n\n  // getCitypeList(): Observable<any> {\n\n  //   return this.http.get(`${newUrl}${configUrl.getCITypeListAPI}`);\n  //   // return this.http.get('assets/citype.json');\n\n  // }\n  getCitypeList(): Observable<any> {\n\n\n    return this.http.get(`${newUrl}${configUrl.getCITypeListAPI}`);\n\n    // return this.http.get(`${newUrl}${configUrl.getCITypeListAPI}`);\n    // return this.http.get('assets/citype.json');\n\n\n  }\n  /* get Icon List*/\n\n  getIconList(): any {\n    return this.http.get('assets/ciicon.json');\n  }\n\n  getParentCI(): any {\n    return this.http.get(`${newUrl}${configUrl.getParentCIAPI}`);\n  }\n\n  /* CI Type Relationship API */\n\n  /* CI Type Relationship Dropdown List */\n\n  getRelationshipList(): any {\n    return this.http.get(`${newUrl}${configUrl.getCIRelationshipTypeAPI}`);\n    // return this.http.get('assets/ciparent.json');\n  }\n\n  getRelatedCIList(): any {\n    // return this.http.get('assets/ciparent.json');\n    return this.http.get(`${newUrl}${configUrl.getParentCIAPI}`);\n  }\n\n  getCardinalityList(): any {\n    return this.http.get(`${newUrl}${configUrl.getCardinalityCIAPI}`);\n  }\n  /* Get CI Relationship type list */\n  getRelationShipTypeList(): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.ciRelationTypeListAPI}`);\n    // return this.http.get('assets/cityperelationship.json');\n  }\n\n  /* Create CI Relationship */\n  createCIRelationType(param): any {\n    return this.http.post(`${newUrl}${configUrl.saveCIRelationTypeAPI}`, param);\n\n  }\n  /* Delete CI Relationship */\n  deleteCIRelationShipType(id): Observable<any> {\n\n    return this.http.delete(`${newUrl}${configUrl.deleteCIRelationTypeAPI}` + id);\n  }\n  createCIDetails(param): any {\n    return this.http.post(`${newUrl}${configUrl.saveCIDetailsAPI}`, param);\n  }\n\n  getFormInputTypeList(): any {\n    return this.http.get(`${configUrl.getFormControlAPI}`);\n  }\n\n  deleteCITypeList(id): Observable<any> {\n    return this.http.delete(`${newUrl}${configUrl.deleteCITypeListAPI}` + id);\n  }\n  saveFormJsonData(param): any {\n    return this.http.post(`${newUrl}${configUrl.saveJsonCIDetail}`, param);\n  }\n  getCIData(id): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.getCIDataAPI}` + id);\n  }\n  getFormCIParentJSon(param): any {\n    console.log(param);\n    return this.http.get(`${newUrl}${configUrl.getFormCIParentJSon}`, { params: param });\n    // return this.http.get('assets/json/formdata.json');\n  }\n\n  getCIRelationship(id): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.getCIRelationshipAPI}` + id);\n  }\n\n  getRelatedCITypes(id): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.getRelatedCITypesAPI}` + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { newUrl } from '../../../../environments/environment';\nimport { configUrl } from '../../../../environments/serviceurl';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RelationtypeService {\n\n  constructor(private http: HttpClient) {\n\n  }\n  getRelationShipTypeList(): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.relationTypeListAPI}`);\n  }\n\n  createRelationType(param) {\n    return this.http.post(`${newUrl}${configUrl.saveRelationTypeAPI}`, param);\n  }\n  deleteRelationShipType(id): Observable<any> {\n    return this.http.delete(`${newUrl}${configUrl.deleteRelationTypeAPI}` + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { newUrl } from '../../../../environments/environment';\nimport { configUrl } from '../../../../environments/serviceurl';\n\nconst HttpUploadOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": 'undefined' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicetypeService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getServicetypeList(): Observable<any> {\n\n    return this.http.get(`${newUrl}${configUrl.getServiceTypeListAPI}`);\n\n  }\n\n  getParentSI(): any {\n    return this.http.get(`${newUrl}${configUrl.getParentSIAPI}`);\n  }\n\n  /* get Icon List*/\n\n  getIconList(): any {\n    return this.http.get('assets/ciicon.json');\n  }\n\n  createSIDetails(param): any {\n    return this.http.post(`${newUrl}${configUrl.saveSIDetailsAPI}`, param);\n  }\n\n  getSIData(id): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.getSIDataAPI}` + id);\n  }\n\n  /* Delete CI Relationship */\n  deleteServicetypeList(id): Observable<any> {\n\n    return this.http.delete(`${newUrl}${configUrl.deleteServiceTypeListAPI}` + id);\n  }\n\n  getMapCITypeList(): any {\n    return this.http.get(`${newUrl}${configUrl.getServiceTypeCIAPI}`);\n  }\n\n  createMapCI(param): any {\n    return this.http.post(`${newUrl}${configUrl.saveMapCIAPI}`, param);\n  }\n\n  getSImapList(id): Observable<any> {\n    return this.http.get(`${newUrl}${configUrl.getSImapListAPI}` + id);\n  }\n  deleteMapCI(id): Observable<any> {\n    return this.http.delete(`${newUrl}${configUrl.deleteMapCIAPI}` + id);\n  }\n  getFormInputTypeList(): any {\n    return this.http.get(`${configUrl.getFormControlAPI}`);\n  }\n\n  saveFormJsonData(param): any {\n    return this.http.post(`${newUrl}${configUrl.saveJsonSIDetail}`, param);\n  }\n  getFormSIParentJSon(param): any {\n\n    return this.http.get(`${newUrl}${configUrl.getFormSIParentJSon}`, { params: param });\n    // return this.http.get('assets/json/formdata.json');\n  }\n\n}\n"],"sourceRoot":"webpack:///"}